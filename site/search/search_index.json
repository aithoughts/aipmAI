{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u9996\u9875","text":""},{"location":"#aipmai-crewai","title":"aipmAI - crewAI \u4e2d\u6587\u89e3\u51b3\u65b9\u6848","text":"<p>\u7528\u4e8e\u7f16\u6392\u89d2\u8272\u626e\u6f14\u3001\u81ea\u4e3b AI \u4ee3\u7406\u7684\u5c16\u7aef\u6846\u67b6\u3002\u901a\u8fc7\u4fc3\u8fdb\u534f\u4f5c\u667a\u80fd\uff0cCrewAI \u4f7f\u4ee3\u7406\u80fd\u591f\u65e0\u7f1d\u5730\u534f\u540c\u5de5\u4f5c\uff0c\u5904\u7406\u590d\u6742\u7684\u4efb\u52a1\u3002</p> \u6838\u5fc3\u6982\u5ff5 <ul> <li>                      \u4ee3\u7406                  </li> <li>                      \u4efb\u52a1                  </li> <li>                      \u5de5\u5177                  </li> <li>                      \u6d41\u7a0b                  </li> <li>                      \u56e2\u961f                  </li> <li>                      \u8bad\u7ec3                  </li> <li>                      \u8bb0\u5fc6                  </li> <li>                      \u89c4\u5212                  </li> </ul> \u64cd\u4f5c\u6307\u5357 <ul> <li>                      \u5f00\u59cb\u60a8\u7684 crewAI \u9879\u76ee                  </li> <li>                      \u5b89\u88c5 crewAI                  </li> <li>                      \u5feb\u901f\u5165\u95e8                  </li> <li>                      \u521b\u5efa\u81ea\u5b9a\u4e49\u5de5\u5177                  </li> <li>                      \u4f7f\u7528\u987a\u5e8f\u6d41\u7a0b                  </li> <li>                      \u4f7f\u7528\u5206\u5c42\u6d41\u7a0b                  </li> <li>                      \u8fde\u63a5\u5230\u5927\u578b\u8bed\u8a00\u6a21\u578b                  </li> <li>                      \u81ea\u5b9a\u4e49\u4ee3\u7406                  </li> <li>                      \u7f16\u5199\u4ee3\u7406\u4ee3\u7801                  </li> <li>                      \u5f3a\u5236\u5de5\u5177\u8f93\u51fa\u4f5c\u4e3a\u7ed3\u679c                  </li> <li>                      \u6267\u884c\u8fc7\u7a0b\u4e2d\u7684\u4eba\u5de5\u8f93\u5165                  </li> <li>                      \u5f02\u6b65\u542f\u52a8\u56e2\u961f                  </li> <li>                      \u5217\u8868\u542f\u52a8\u56e2\u961f                  </li> <li>                      \u4ece\u4efb\u52a1\u91cd\u653e                  </li> <li>                      \u6761\u4ef6\u4efb\u52a1                  </li> <li>                      \u4f7f\u7528 AgentOps \u8fdb\u884c\u4ee3\u7406\u76d1\u63a7                  </li> <li>                      \u4f7f\u7528 LangTrace \u8fdb\u884c\u4ee3\u7406\u76d1\u63a7                  </li> </ul> \u793a\u4f8b <ul> <li>                      \u51c6\u5907\u4f1a\u8bae                  </li> <li>                      \u65c5\u884c\u89c4\u5212\u56e2\u961f                  </li> <li>                      \u521b\u5efa Instagram \u5e16\u5b50                  </li> <li>                      \u80a1\u7968\u5206\u6790                  </li> <li>                      \u6e38\u620f\u751f\u6210\u5668                  </li> <li>                      \u4f7f\u7528 LangGraph \u8d77\u8349\u7535\u5b50\u90ae\u4ef6                  </li> <li>                      \u767b\u9646\u9875\u9762\u751f\u6210\u5668                  </li> </ul>"},{"location":"core-concepts/Agents/","title":"crewAI \u4ee3\u7406","text":""},{"location":"core-concepts/Agents/#_1","title":"\u4ec0\u4e48\u662f\u4ee3\u7406\uff1f","text":"<p>\u4ec0\u4e48\u662f\u4ee3\u7406\uff1f</p> <p>\u4ee3\u7406\u662f\u4e00\u4e2a \u81ea\u4e3b\u5355\u5143 \uff0c\u88ab\u7f16\u7a0b\u4e3a\uff1a</p> <ul> <li>\u6267\u884c\u4efb\u52a1</li> <li>\u505a\u51fa\u51b3\u5b9a</li> <li>\u4e0e\u5176\u4ed6\u4ee3\u7406\u8fdb\u884c\u6c9f\u901a</li> </ul> <p>\u5c06\u4ee3\u7406\u89c6\u4e3a\u56e2\u961f\u4e2d\u7684\u4e00\u5458\uff0c\u5177\u6709\u7279\u5b9a\u7684\u6280\u80fd\u548c\u7279\u5b9a\u7684\u5de5\u4f5c\u8981\u505a\u3002\u4ee3\u7406\u53ef\u4ee5\u62e5\u6709\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u4f8b\u5982\u201c\u7814\u7a76\u5458\u201d\u3001\u201c\u4f5c\u5bb6\u201d\u6216\u201c\u5ba2\u6237\u652f\u6301\u201d\uff0c\u6bcf\u4e2a\u89d2\u8272\u90fd\u4e3a\u56e2\u961f\u7684\u603b\u4f53\u76ee\u6807\u505a\u51fa\u8d21\u732e\u3002</p>"},{"location":"core-concepts/Agents/#_2","title":"\u4ee3\u7406\u5c5e\u6027","text":"\u5c5e\u6027 \u53c2\u6570 \u63cf\u8ff0 \u89d2\u8272 <code>role</code> \u5b9a\u4e49\u4ee3\u7406\u5728\u56e2\u961f\u4e2d\u7684\u529f\u80fd\u3002\u5b83\u51b3\u5b9a\u4e86\u4ee3\u7406\u6700\u9002\u5408\u54ea\u79cd\u4efb\u52a1\u3002 \u76ee\u6807 <code>goal</code> \u4ee3\u7406\u65e8\u5728\u5b9e\u73b0\u7684\u4e2a\u4eba\u76ee\u6807\u3002\u5b83\u6307\u5bfc\u4ee3\u7406\u7684\u51b3\u7b56\u8fc7\u7a0b\u3002 \u80cc\u666f\u6545\u4e8b <code>backstory</code> \u63d0\u4f9b\u4ee3\u7406\u89d2\u8272\u548c\u76ee\u6807\u7684\u4e0a\u4e0b\u6587\uff0c\u4e30\u5bcc\u4e92\u52a8\u548c\u534f\u4f5c\u52a8\u6001\u3002 LLM <code>llm</code> \u8868\u793a\u5c06\u8fd0\u884c\u4ee3\u7406\u7684\u8bed\u8a00\u6a21\u578b\u3002\u5b83\u4f1a\u52a8\u6001\u5730\u4ece <code>OPENAI_MODEL_NAME</code> \u73af\u5883\u53d8\u91cf\u4e2d\u83b7\u53d6\u6a21\u578b\u540d\u79f0\uff0c\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u201cgpt-4\u201d\u3002 \u5de5\u5177 <code>tools</code> \u4ee3\u7406\u53ef\u4ee5\u7528\u6765\u6267\u884c\u4efb\u52a1\u7684\u529f\u80fd\u6216\u51fd\u6570\u96c6\u3002\u9884\u671f\u4e3a\u4e0e\u4ee3\u7406\u6267\u884c\u73af\u5883\u517c\u5bb9\u7684\u81ea\u5b9a\u4e49\u7c7b\u7684\u5b9e\u4f8b\u3002\u5de5\u5177\u4f7f\u7528\u7a7a\u5217\u8868\u7684\u9ed8\u8ba4\u503c\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u51fd\u6570\u8c03\u7528 LLM <code>function_calling_llm</code> \u6307\u5b9a\u5c06\u4e3a\u6b64\u4ee3\u7406\u5904\u7406\u5de5\u5177\u8c03\u7528\u7684\u8bed\u8a00\u6a21\u578b\uff0c\u5982\u679c\u4f20\u9012\uff0c\u5219\u8986\u76d6 crew \u51fd\u6570\u8c03\u7528 LLM\u3002\u9ed8\u8ba4\u503c\u4e3a <code>None</code>\u3002 \u6700\u5927\u8fed\u4ee3\u6b21\u6570 <code>max_iter</code> \u6700\u5927\u8fed\u4ee3\u6b21\u6570\u662f\u4ee3\u7406\u5728\u88ab\u8feb\u7ed9\u51fa\u6700\u4f73\u7b54\u6848\u4e4b\u524d\u53ef\u4ee5\u6267\u884c\u7684\u6700\u5927\u8fed\u4ee3\u6b21\u6570\u3002\u9ed8\u8ba4\u503c\u4e3a <code>25</code>\u3002 \u6700\u5927 RPM <code>max_rpm</code> \u6700\u5927 RPM \u662f\u4ee3\u7406\u4e3a\u907f\u514d\u901f\u7387\u9650\u5236\u800c\u53ef\u4ee5\u6267\u884c\u7684\u6bcf\u5206\u949f\u6700\u5927\u8bf7\u6c42\u6570\u3002\u5b83\u662f\u53ef\u9009\u7684\uff0c\u53ef\u4ee5\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u503c\u4e3a <code>None</code>\u3002 \u6700\u5927\u6267\u884c\u65f6\u95f4 <code>max_execution_time</code> \u6700\u5927\u6267\u884c\u65f6\u95f4\u662f\u4ee3\u7406\u6267\u884c\u4efb\u52a1\u7684\u6700\u957f\u6267\u884c\u65f6\u95f4\u3002\u5b83\u662f\u53ef\u9009\u7684\uff0c\u53ef\u4ee5\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u503c\u4e3a <code>None</code>\uff0c\u8868\u793a\u6ca1\u6709\u6700\u5927\u6267\u884c\u65f6\u95f4\u3002 \u8be6\u7ec6 <code>verbose</code> \u5c06\u6b64\u8bbe\u7f6e\u4e3a <code>True</code> \u4f1a\u5c06\u5185\u90e8\u8bb0\u5f55\u5668\u914d\u7f6e\u4e3a\u63d0\u4f9b\u8be6\u7ec6\u7684\u6267\u884c\u65e5\u5fd7\uff0c\u5e2e\u52a9\u8c03\u8bd5\u548c\u76d1\u63a7\u3002\u9ed8\u8ba4\u503c\u4e3a <code>False</code>\u3002 \u5141\u8bb8\u59d4\u6d3e <code>allow_delegation</code> \u4ee3\u7406\u53ef\u4ee5\u5c06\u4efb\u52a1\u6216\u95ee\u9898\u59d4\u6d3e\u7ed9\u5f7c\u6b64\uff0c\u786e\u4fdd\u6bcf\u4e2a\u4efb\u52a1\u90fd\u7531\u6700\u5408\u9002\u7684\u4ee3\u7406\u5904\u7406\u3002\u9ed8\u8ba4\u503c\u4e3a <code>True</code>\u3002 \u6b65\u9aa4\u56de\u8c03 <code>step_callback</code> \u5728\u4ee3\u7406\u7684\u6bcf\u4e2a\u6b65\u9aa4\u4e4b\u540e\u8c03\u7528\u7684\u51fd\u6570\u3002\u8fd9\u53ef\u7528\u4e8e\u8bb0\u5f55\u4ee3\u7406\u7684\u64cd\u4f5c\u6216\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u3002\u5b83\u5c06\u8986\u76d6 crew <code>step_callback</code>\u3002 \u7f13\u5b58 <code>cache</code> \u6307\u793a\u4ee3\u7406\u662f\u5426\u5e94\u4f7f\u7528\u7f13\u5b58\u6765\u8fdb\u884c\u5de5\u5177\u4f7f\u7528\u3002\u9ed8\u8ba4\u503c\u4e3a <code>True</code>\u3002 \u7cfb\u7edf\u6a21\u677f <code>system_template</code> \u6307\u5b9a\u4ee3\u7406\u7684\u7cfb\u7edf\u683c\u5f0f\u3002\u9ed8\u8ba4\u503c\u4e3a <code>None</code>\u3002 \u63d0\u793a\u6a21\u677f <code>prompt_template</code> \u6307\u5b9a\u4ee3\u7406\u7684\u63d0\u793a\u683c\u5f0f\u3002\u9ed8\u8ba4\u503c\u4e3a <code>None</code>\u3002 \u54cd\u5e94\u6a21\u677f <code>response_template</code> \u6307\u5b9a\u4ee3\u7406\u7684\u54cd\u5e94\u683c\u5f0f\u3002\u9ed8\u8ba4\u503c\u4e3a <code>None</code>\u3002"},{"location":"core-concepts/Agents/#_3","title":"\u521b\u5efa\u4ee3\u7406","text":"<p>\u4ee3\u7406\u4ea4\u4e92</p> <p>\u4ee3\u7406\u53ef\u4ee5\u4f7f\u7528 crewAI \u7684\u5185\u7f6e\u59d4\u6d3e\u548c\u901a\u4fe1\u673a\u5236\u76f8\u4e92\u4ea4\u4e92\u3002\u8fd9\u5141\u8bb8\u5728\u56e2\u961f\u5185\u8fdb\u884c\u52a8\u6001\u4efb\u52a1\u7ba1\u7406\u548c\u95ee\u9898\u89e3\u51b3\u3002</p> <p>\u8981\u521b\u5efa\u4ee3\u7406\uff0c\u60a8\u901a\u5e38\u9700\u8981\u4f7f\u7528\u6240\u9700\u7684\u5c5e\u6027\u521d\u59cb\u5316 <code>Agent</code> \u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u8fd9\u662f\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5c5e\u6027\u7684\u6982\u5ff5\u793a\u4f8b\uff1a</p> <pre><code># \u793a\u4f8b\uff1a\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5c5e\u6027\u7684\u4ee3\u7406\nfrom crewai import Agent\n\nagent = Agent(\n  role='\u6570\u636e\u5206\u6790\u5e08',\n  goal='\u63d0\u53d6\u53ef\u64cd\u4f5c\u7684\u89c1\u89e3',\n  backstory=\"\"\"\u60a8\u662f\u4e00\u5bb6\u5927\u516c\u53f8\u7684\u6570\u636e\u5206\u6790\u5e08\u3002\n  \u60a8\u8d1f\u8d23\u5206\u6790\u6570\u636e\u5e76\u4e3a\u4f01\u4e1a\u63d0\u4f9b\u89c1\u89e3\u3002\n  \u60a8\u76ee\u524d\u6b63\u5728\u5f00\u5c55\u4e00\u4e2a\u9879\u76ee\uff0c\u4ee5\u5206\u6790\u6211\u4eec\u8425\u9500\u6d3b\u52a8\u7684\u7ee9\u6548\u3002\"\"\",\n  tools=[my_tool1, my_tool2],  # \u53ef\u9009\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u5217\u8868\n  llm=my_llm,  # \u53ef\u9009\n  function_calling_llm=my_llm,  # \u53ef\u9009\n  max_iter=15,  # \u53ef\u9009\n  max_rpm=None, # \u53ef\u9009\n  max_execution_time=None, # \u53ef\u9009\n  verbose=True,  # \u53ef\u9009\n  allow_delegation=True,  # \u53ef\u9009\n  step_callback=my_intermediate_step_callback,  # \u53ef\u9009\n  cache=True,  # \u53ef\u9009\n  system_template=my_system_template,  # \u53ef\u9009\n  prompt_template=my_prompt_template,  # \u53ef\u9009\n  response_template=my_response_template,  # \u53ef\u9009\n  config=my_config,  # \u53ef\u9009\n  crew=my_crew,  # \u53ef\u9009\n  tools_handler=my_tools_handler,  # \u53ef\u9009\n  cache_handler=my_cache_handler,  # \u53ef\u9009\n  callbacks=[callback1, callback2],  # \u53ef\u9009\n  agent_executor=my_agent_executor  # \u53ef\u9009\n)\n</code></pre>"},{"location":"core-concepts/Agents/#_4","title":"\u8bbe\u7f6e\u63d0\u793a\u6a21\u677f","text":"<p>\u63d0\u793a\u6a21\u677f\u7528\u4e8e\u683c\u5f0f\u5316\u4ee3\u7406\u7684\u63d0\u793a\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u66f4\u65b0\u4ee3\u7406\u7684\u7cfb\u7edf\u3001\u5e38\u89c4\u548c\u54cd\u5e94\u6a21\u677f\u3002\u4ee5\u4e0b\u662f\u5982\u4f55\u8bbe\u7f6e\u63d0\u793a\u6a21\u677f\u7684\u793a\u4f8b\uff1a</p> <pre><code>agent = Agent(\n    role=\"{topic} \u4e13\u5bb6\",\n    goal=\"\u627e\u51fa {goal}\",\n    backstory=\"\u6211\u662f {role} \u5927\u5e08\",\n    system_template=\"\"\"&lt;|start_header_id|&gt;system&lt;|end_header_id|&gt;{{ .System }}&lt;|eot_id|&gt;\"\"\",\n    prompt_template=\"\"\"&lt;|start_header_id|&gt;user&lt;|end_header_id|&gt;{{ .Prompt }}&lt;|eot_id|&gt;\"\"\",\n    response_template=\"\"\"&lt;|start_header_id|&gt;assistant&lt;|end_header_id|&gt;{{ .Response }}&lt;|eot_id|&gt;\"\"\",\n)\n</code></pre>"},{"location":"core-concepts/Agents/#_5","title":"\u5f15\u5165\u60a8\u7684\u7b2c\u4e09\u65b9\u4ee3\u7406","text":"<p>\u4f7f\u7528 crewai \u7684 BaseAgent \u7c7b\u6269\u5c55\u60a8\u7684\u7b2c\u4e09\u65b9\u4ee3\u7406\uff0c\u4f8b\u5982 LlamaIndex\u3001Langchain\u3001Autogen \u6216\u5b8c\u5168\u81ea\u5b9a\u4e49\u7684\u4ee3\u7406\u3002</p> <p>BaseAgent \u5305\u62ec\u4e0e\u60a8\u7684\u56e2\u961f\u96c6\u6210\u6240\u9700\uff0c\u4ee5\u4fbf\u5728\u60a8\u81ea\u5df1\u7684\u56e2\u961f\u4e2d\u8fd0\u884c\u4efb\u52a1\u5e76\u5c06\u4efb\u52a1\u59d4\u6d3e\u7ed9\u5176\u4ed6\u4ee3\u7406\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002</p> <p>CrewAI \u662f\u4e00\u4e2a\u901a\u7528\u7684\u591a\u4ee3\u7406\u6846\u67b6\uff0c\u5141\u8bb8\u6240\u6709\u4ee3\u7406\u534f\u540c\u5de5\u4f5c\u4ee5\u81ea\u52a8\u5316\u4efb\u52a1\u548c\u89e3\u51b3\u95ee\u9898\u3002</p> <pre><code>from crewai import Agent, Task, Crew\nfrom custom_agent import CustomAgent # \u60a8\u9700\u8981\u4f7f\u7528 CrewAI BaseAgent \u7c7b\u6784\u5efa\u548c\u6269\u5c55\u60a8\u81ea\u5df1\u7684\u4ee3\u7406\u903b\u8f91\uff0c\u7136\u540e\u5728\u6b64\u5904\u5bfc\u5165\u3002\n\nfrom langchain.agents import load_tools\n\nlangchain_tools = load_tools([\"google-serper\"], llm=llm)\n\nagent1 = CustomAgent(\n    role=\"\u80cc\u666f\u6545\u4e8b\u4ee3\u7406\",\n    goal=\"\u8c01\u662f {input}\uff1f\",\n    backstory=\"\u4ee3\u7406\u80cc\u666f\u6545\u4e8b\",\n    verbose=True,\n)\n\ntask1 = Task(\n    expected_output=\"{input} \u7684\u7b80\u77ed\u4f20\u8bb0\",\n    description=\"{input} \u7684\u7b80\u77ed\u4f20\u8bb0\",\n    agent=agent1,\n)\n\nagent2 = Agent(\n    role=\"\u4f20\u8bb0\u4ee3\u7406\",\n    goal=\"\u603b\u7ed3 {input} \u7684\u7b80\u77ed\u4f20\u8bb0\uff0c\u5982\u679c\u9700\u8981\uff0c\u8bf7\u8fdb\u884c\u66f4\u591a\u7814\u7a76\",\n    backstory=\"\u4ee3\u7406\u80cc\u666f\u6545\u4e8b\",\n    verbose=True,\n)\n\ntask2 = Task(\n    description=\"\u7b80\u77ed\u4f20\u8bb0\u7684 tldr \u6458\u8981\",\n    expected_output=\"\u4f20\u8bb0\u7684 5 \u4e2a\u8981\u70b9\u6458\u8981\",\n    agent=agent2,\n    context=[task1],\n)\n\nmy_crew = Crew(agents=[agent1, agent2], tasks=[task1, task2])\ncrew = my_crew.kickoff(inputs={\"input\": \"\u83ab\u8a00\"})\n</code></pre>"},{"location":"core-concepts/Agents/#_6","title":"\u7ed3\u8bba","text":"<p>\u4ee3\u7406\u662f CrewAI \u6846\u67b6\u7684\u6784\u5efa\u5757\u3002\u901a\u8fc7\u4e86\u89e3\u5982\u4f55\u5b9a\u4e49\u4ee3\u7406\u4ee5\u53ca\u5982\u4f55\u4e0e\u4ee3\u7406\u4ea4\u4e92\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u5229\u7528\u534f\u4f5c\u667a\u80fd\u7684\u529b\u91cf\u6765\u6784\u5efa\u590d\u6742\u7684 AI \u7cfb\u7edf\u3002</p>"},{"location":"core-concepts/Collaboration/","title":"CrewAI \u4e2d\u7684 Agent \u5982\u4f55\u534f\u540c\u5de5\u4f5c","text":""},{"location":"core-concepts/Collaboration/#_1","title":"\u534f\u4f5c\u57fa\u7840","text":"<p>Agent \u4ea4\u4e92\u7684\u6838\u5fc3</p> <p>\u5728 CrewAI \u4e2d\uff0c\u534f\u4f5c\u81f3\u5173\u91cd\u8981\uff0c\u5b83\u4f7f agent \u80fd\u591f\u7ed3\u5408\u5404\u81ea\u7684\u6280\u80fd\uff0c\u5171\u4eab\u4fe1\u606f\uff0c\u5e76\u5728\u4efb\u52a1\u6267\u884c\u4e2d\u76f8\u4e92\u534f\u52a9\uff0c\u4f53\u73b0\u51fa\u4e00\u4e2a\u771f\u6b63\u7684\u5408\u4f5c\u751f\u6001\u7cfb\u7edf\u3002</p> <ul> <li>\u4fe1\u606f\u5171\u4eab: \u901a\u8fc7\u5171\u4eab\u6570\u636e\u548c\u53d1\u73b0\uff0c\u786e\u4fdd\u6240\u6709 agent \u90fd\u80fd\u5145\u5206\u4e86\u89e3\u60c5\u51b5\u5e76\u6709\u6548\u5730\u505a\u51fa\u8d21\u732e\u3002</li> <li>\u4efb\u52a1\u534f\u52a9: \u5141\u8bb8 agent \u5411\u5177\u6709\u7279\u5b9a\u4efb\u52a1\u6240\u9700\u4e13\u4e1a\u77e5\u8bc6\u7684\u540c\u4f34\u5bfb\u6c42\u5e2e\u52a9\u3002</li> <li>\u8d44\u6e90\u5206\u914d: \u901a\u8fc7\u5728 agent \u4e4b\u95f4\u9ad8\u6548\u5206\u914d\u548c\u5171\u4eab\u8d44\u6e90\u6765\u4f18\u5316\u4efb\u52a1\u6267\u884c\u3002</li> </ul>"},{"location":"core-concepts/Collaboration/#_2","title":"\u7528\u4e8e\u6539\u8fdb\u534f\u4f5c\u7684\u589e\u5f3a\u5c5e\u6027","text":"<p><code>Crew</code> \u7c7b\u5df2\u7ecf\u901a\u8fc7\u6dfb\u52a0\u82e5\u5e72\u5c5e\u6027\u6765\u652f\u6301\u9ad8\u7ea7\u529f\u80fd\uff1a</p> <ul> <li>\u8bed\u8a00\u6a21\u578b\u7ba1\u7406 (<code>manager_llm</code>, <code>function_calling_llm</code>): \u7ba1\u7406\u7528\u4e8e\u6267\u884c\u4efb\u52a1\u548c\u5de5\u5177\u7684\u8bed\u8a00\u6a21\u578b\uff0c\u4fc3\u8fdb\u590d\u6742\u7684 agent-\u5de5\u5177\u4ea4\u4e92\u3002\u8bf7\u6ce8\u610f\uff0c\u867d\u7136 <code>manager_llm</code> \u5bf9\u4e8e\u5206\u5c42\u6d41\u7a0b\u662f\u5f3a\u5236\u6027\u7684\uff0c\u4ee5\u786e\u4fdd\u6b63\u786e\u7684\u6267\u884c\u6d41\u7a0b\uff0c\u4f46 <code>function_calling_llm</code> \u662f\u53ef\u9009\u7684\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u503c\u4ee5\u7b80\u5316\u5de5\u5177\u4ea4\u4e92\u3002</li> <li>\u81ea\u5b9a\u4e49\u7ba1\u7406 Agent (<code>manager_agent</code>): \u5141\u8bb8\u6307\u5b9a\u4e00\u4e2a\u81ea\u5b9a\u4e49 agent \u4f5c\u4e3a\u7ba1\u7406\u8005\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 CrewAI \u63d0\u4f9b\u7684\u9ed8\u8ba4\u7ba1\u7406\u8005\u3002</li> <li>\u6d41\u7a0b (<code>process</code>): \u5b9a\u4e49\u6267\u884c\u903b\u8f91\uff08\u4f8b\u5982\uff0c\u987a\u5e8f\u3001\u5206\u5c42\uff09\u4ee5\u7b80\u5316\u4efb\u52a1\u5206\u914d\u548c\u6267\u884c\u3002</li> <li>\u8be6\u7ec6\u65e5\u5fd7\u8bb0\u5f55 (<code>verbose</code>): \u63d0\u4f9b\u8be6\u7ec6\u7684\u65e5\u5fd7\u8bb0\u5f55\u529f\u80fd\uff0c\u7528\u4e8e\u76d1\u63a7\u548c\u8c03\u8bd5\u76ee\u7684\u3002\u5b83\u652f\u6301\u6574\u6570\u548c\u5e03\u5c14\u7c7b\u578b\u6765\u6307\u793a\u8be6\u7ec6\u7a0b\u5ea6\u3002\u4f8b\u5982\uff0c\u5c06 <code>verbose</code> \u8bbe\u7f6e\u4e3a 1 \u53ef\u80fd\u4f1a\u542f\u7528\u57fa\u672c\u65e5\u5fd7\u8bb0\u5f55\uff0c\u800c\u5c06\u5176\u8bbe\u7f6e\u4e3a True \u5219\u4f1a\u542f\u7528\u66f4\u8be6\u7ec6\u7684\u65e5\u5fd7\u3002</li> <li>\u901f\u7387\u9650\u5236 (<code>max_rpm</code>): \u901a\u8fc7\u9650\u5236\u6bcf\u5206\u949f\u7684\u8bf7\u6c42\u6570\u6765\u786e\u4fdd\u8d44\u6e90\u7684\u6709\u6548\u5229\u7528\u3002\u8bbe\u7f6e <code>max_rpm</code> \u7684\u51c6\u5219\u5e94\u8003\u8651\u4efb\u52a1\u7684\u590d\u6742\u6027\u548c\u8d44\u6e90\u7684\u9884\u671f\u8d1f\u8f7d\u3002</li> <li>\u56fd\u9645\u5316/\u81ea\u5b9a\u4e49\u652f\u6301 (<code>language</code>, <code>prompt_file</code>):  \u65b9\u4fbf\u5bf9\u5185\u90e8\u63d0\u793a\u8fdb\u884c\u5168\u9762\u81ea\u5b9a\u4e49\uff0c\u589e\u5f3a\u5168\u5c40\u53ef\u7528\u6027\u3002\u5e94\u6e05\u695a\u8bb0\u5f55\u652f\u6301\u7684\u8bed\u8a00\u4ee5\u53ca\u4f7f\u7528 <code>prompt_file</code> \u5c5e\u6027\u8fdb\u884c\u81ea\u5b9a\u4e49\u7684\u8fc7\u7a0b\u3002 \u6587\u4ef6\u793a\u4f8b</li> <li>\u6267\u884c\u548c\u8f93\u51fa\u5904\u7406 (<code>full_output</code>): \u533a\u5206\u5b8c\u6574\u8f93\u51fa\u548c\u6700\u7ec8\u8f93\u51fa\uff0c\u4ee5\u4fbf\u5bf9\u4efb\u52a1\u7ed3\u679c\u8fdb\u884c\u7ec6\u81f4\u5165\u5fae\u7684\u63a7\u5236\u3002\u5c55\u793a\u8f93\u51fa\u5dee\u5f02\u7684\u793a\u4f8b\u53ef\u4ee5\u5e2e\u52a9\u7406\u89e3\u6b64\u5c5e\u6027\u7684\u5b9e\u9645\u542b\u4e49\u3002</li> <li>\u56de\u8c03\u548c\u9065\u6d4b (<code>step_callback</code>, <code>task_callback</code>): \u96c6\u6210\u7528\u4e8e\u9010\u6b65\u548c\u4efb\u52a1\u7ea7\u6267\u884c\u76d1\u63a7\u7684\u56de\u8c03\uff0c\u4ee5\u53ca\u7528\u4e8e\u6027\u80fd\u5206\u6790\u7684\u9065\u6d4b\u3002\u5e94\u6e05\u695a\u89e3\u91ca <code>task_callback</code> \u4e0e <code>step_callback</code> \u4e00\u8d77\u7528\u4e8e\u7cbe\u7ec6\u76d1\u63a7\u7684\u76ee\u7684\u548c\u7528\u6cd5\u3002</li> <li>Crew \u5171\u4eab (<code>share_crew</code>):  \u5141\u8bb8\u4e0e CrewAI \u5171\u4eab crew \u4fe1\u606f\uff0c\u4ee5\u4fbf\u6301\u7eed\u6539\u8fdb\u548c\u8bad\u7ec3\u6a21\u578b\u3002\u5e94\u6982\u8ff0\u6b64\u529f\u80fd\u7684\u9690\u79c1\u5f71\u54cd\u548c\u597d\u5904\uff0c\u5305\u62ec\u5b83\u5982\u4f55\u4fc3\u8fdb\u6a21\u578b\u6539\u8fdb\u3002</li> <li>\u4f7f\u7528\u6307\u6807 (<code>usage_metrics</code>): \u5b58\u50a8\u6240\u6709\u4efb\u52a1\u6267\u884c\u8fc7\u7a0b\u4e2d\u8bed\u8a00\u6a21\u578b (LLM) \u4f7f\u7528\u60c5\u51b5\u7684\u6240\u6709\u6307\u6807\uff0c\u63d0\u4f9b\u5bf9\u8fd0\u8425\u6548\u7387\u548c\u6539\u8fdb\u9886\u57df\u7684\u6d1e\u5bdf\u3002\u5e94\u63d0\u4f9b\u6709\u5173\u8bbf\u95ee\u548c\u89e3\u91ca\u8fd9\u4e9b\u6307\u6807\u4ee5\u8fdb\u884c\u6027\u80fd\u5206\u6790\u7684\u8be6\u7ec6\u4fe1\u606f\u3002</li> <li>\u5185\u5b58\u4f7f\u7528 (<code>memory</code>): \u6307\u793a crew \u662f\u5426\u5e94\u4f7f\u7528\u5185\u5b58\u6765\u5b58\u50a8\u5176\u6267\u884c\u7684\u8bb0\u5fc6\uff0c\u4ece\u800c\u589e\u5f3a\u4efb\u52a1\u6267\u884c\u548c agent \u5b66\u4e60\u3002</li> <li>\u5d4c\u5165\u5668\u914d\u7f6e (<code>embedder</code>): \u6307\u5b9a crew \u7528\u4e8e\u7406\u89e3\u548c\u751f\u6210\u8bed\u8a00\u7684\u5d4c\u5165\u5668\u7684\u914d\u7f6e\u3002\u6b64\u5c5e\u6027\u652f\u6301\u81ea\u5b9a\u4e49\u8bed\u8a00\u6a21\u578b\u63d0\u4f9b\u7a0b\u5e8f\u3002</li> <li>\u7f13\u5b58\u7ba1\u7406 (<code>cache</code>):  \u786e\u5b9a crew \u662f\u5426\u5e94\u4f7f\u7528\u7f13\u5b58\u6765\u5b58\u50a8\u5de5\u5177\u6267\u884c\u7684\u7ed3\u679c\uff0c\u4ece\u800c\u4f18\u5316\u6027\u80fd\u3002</li> <li>\u8f93\u51fa\u65e5\u5fd7\u8bb0\u5f55 (<code>output_log_file</code>): \u6307\u5b9a\u7528\u4e8e\u8bb0\u5f55 crew \u6267\u884c\u8f93\u51fa\u7684\u6587\u4ef6\u8def\u5f84\u3002</li> </ul>"},{"location":"core-concepts/Collaboration/#_3","title":"\u59d4\u6d3e\uff1a\u5206\u800c\u6cbb\u4e4b","text":"<p>\u59d4\u6d3e\u901a\u8fc7\u5141\u8bb8 agent \u667a\u80fd\u5730\u5206\u914d\u4efb\u52a1\u6216\u5bfb\u6c42\u5e2e\u52a9\u6765\u589e\u5f3a\u529f\u80fd\uff0c\u4ece\u800c\u589e\u5f3a crew \u7684\u6574\u4f53\u80fd\u529b\u3002</p>"},{"location":"core-concepts/Collaboration/#_4","title":"\u5b9e\u73b0\u534f\u4f5c\u548c\u59d4\u6d3e","text":"<p>\u8bbe\u7f6e crew \u6d89\u53ca\u5b9a\u4e49\u6bcf\u4e2a agent \u7684\u89d2\u8272\u548c\u80fd\u529b\u3002CrewAI \u65e0\u7f1d\u5730\u7ba1\u7406\u5b83\u4eec\u7684\u4ea4\u4e92\uff0c\u786e\u4fdd\u9ad8\u6548\u7684\u534f\u4f5c\u548c\u59d4\u6d3e\uff0c\u5e76\u63d0\u4f9b\u589e\u5f3a\u7684\u81ea\u5b9a\u4e49\u548c\u76d1\u63a7\u529f\u80fd\u4ee5\u9002\u5e94\u5404\u79cd\u8fd0\u8425\u9700\u6c42\u3002</p>"},{"location":"core-concepts/Collaboration/#_5","title":"\u793a\u4f8b\u573a\u666f","text":"<p>\u8003\u8651\u4e00\u4e2a crew\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u8d1f\u8d23\u6570\u636e\u6536\u96c6\u7684\u7814\u7a76\u5458 agent \u548c\u4e00\u4e2a\u8d1f\u8d23\u7f16\u5199\u62a5\u544a\u7684\u4f5c\u8005 agent\u3002\u9ad8\u7ea7\u8bed\u8a00\u6a21\u578b\u7ba1\u7406\u548c\u6d41\u7a0b\u5c5e\u6027\u7684\u96c6\u6210\u5141\u8bb8\u66f4\u590d\u6742\u7684\u4ea4\u4e92\uff0c\u4f8b\u5982\u4f5c\u8005\u5c06\u590d\u6742\u7684\u7814\u7a76\u4efb\u52a1\u59d4\u6d3e\u7ed9\u7814\u7a76\u5458\u6216\u67e5\u8be2\u7279\u5b9a\u4fe1\u606f\uff0c\u4ece\u800c\u4fc3\u8fdb\u65e0\u7f1d\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002</p>"},{"location":"core-concepts/Collaboration/#_6","title":"\u7ed3\u8bba","text":"<p>\u5728 CrewAI \u6846\u67b6\u4e2d\u96c6\u6210\u9ad8\u7ea7\u5c5e\u6027\u548c\u529f\u80fd\u663e\u7740\u4e30\u5bcc\u4e86 agent \u534f\u4f5c\u751f\u6001\u7cfb\u7edf\u3002\u8fd9\u4e9b\u589e\u5f3a\u529f\u80fd\u4e0d\u4ec5\u7b80\u5316\u4e86\u4ea4\u4e92\uff0c\u8fd8\u63d0\u4f9b\u4e86\u524d\u6240\u672a\u6709\u7684\u7075\u6d3b\u6027\u548c\u63a7\u5236\u529b\uff0c\u4e3a\u80fd\u591f\u901a\u8fc7\u667a\u80fd\u534f\u4f5c\u548c\u59d4\u6d3e\u6765\u5904\u7406\u590d\u6742\u4efb\u52a1\u7684\u590d\u6742 AI \u9a71\u52a8\u89e3\u51b3\u65b9\u6848\u94fa\u5e73\u4e86\u9053\u8def\u3002</p>"},{"location":"core-concepts/Crews/","title":"crewAI Crews","text":""},{"location":"core-concepts/Crews/#crew","title":"\u4ec0\u4e48\u662f Crew\uff1f","text":"<p>crewAI \u4e2d\u7684 crew \u8868\u793a\u4e00\u7ec4\u534f\u4f5c\u7684 agent\uff0c\u5b83\u4eec\u5171\u540c\u52aa\u529b\u5b8c\u6210\u4e00\u7ec4\u4efb\u52a1\u3002\u6bcf\u4e2a crew \u90fd\u5b9a\u4e49\u4e86\u4efb\u52a1\u6267\u884c\u7b56\u7565\u3001agent \u534f\u4f5c\u548c\u6574\u4f53\u5de5\u4f5c\u6d41\u7a0b\u3002</p>"},{"location":"core-concepts/Crews/#crew_1","title":"Crew \u5c5e\u6027","text":"\u5c5e\u6027 \u53c2\u6570 \u63cf\u8ff0 \u4efb\u52a1 <code>tasks</code> \u5206\u914d\u7ed9 crew \u7684\u4efb\u52a1\u5217\u8868\u3002 Agent <code>agents</code> \u5c5e\u4e8e crew \u7684 agent \u5217\u8868\u3002 \u6d41\u7a0b (\u53ef\u9009) <code>process</code> crew \u9075\u5faa\u7684\u6d41\u7a0b\uff08\u4f8b\u5982\uff0c\u987a\u5e8f\u3001\u5206\u5c42\uff09\u3002 \u8be6\u7ec6 (\u53ef\u9009) <code>verbose</code> \u6267\u884c\u671f\u95f4\u8bb0\u5f55\u7684\u8be6\u7ec6\u7a0b\u5ea6\u3002 \u7ba1\u7406\u8005 LLM (\u53ef\u9009) <code>manager_llm</code> \u5206\u5c42\u6d41\u7a0b\u4e2d\u7ba1\u7406\u8005 agent \u4f7f\u7528\u7684\u8bed\u8a00\u6a21\u578b\u3002\u4f7f\u7528\u5206\u5c42\u6d41\u7a0b\u65f6\u5fc5\u586b\u3002 \u51fd\u6570\u8c03\u7528 LLM (\u53ef\u9009) <code>function_calling_llm</code> \u5982\u679c\u4f20\u9012\uff0ccrew \u5c06\u4f7f\u7528\u6b64 LLM \u4e3a crew \u4e2d\u6240\u6709 agent \u7684\u5de5\u5177\u6267\u884c\u51fd\u6570\u8c03\u7528\u3002\u6bcf\u4e2a agent \u53ef\u4ee5\u6709\u81ea\u5df1\u7684 LLM\uff0c\u5b83\u4f1a\u8986\u76d6 crew \u7684 LLM \u7528\u4e8e\u51fd\u6570\u8c03\u7528\u3002 \u914d\u7f6e (\u53ef\u9009) <code>config</code> crew \u7684\u53ef\u9009\u914d\u7f6e\u8bbe\u7f6e\uff0c\u91c7\u7528 <code>Json</code> \u6216 <code>Dict[str, Any]</code> \u683c\u5f0f\u3002 \u6700\u5927 RPM (\u53ef\u9009) <code>max_rpm</code> crew \u5728\u6267\u884c\u671f\u95f4\u9075\u5b88\u7684\u6bcf\u5206\u949f\u6700\u5927\u8bf7\u6c42\u6570\u3002 \u8bed\u8a00 (\u53ef\u9009) <code>language</code> crew \u4f7f\u7528\u7684\u8bed\u8a00\uff0c\u9ed8\u8ba4\u4e3a\u82f1\u8bed\u3002 \u8bed\u8a00\u6587\u4ef6 (\u53ef\u9009) <code>language_file</code> \u7528\u4e8e crew \u7684\u8bed\u8a00\u6587\u4ef6\u7684\u8def\u5f84\u3002 \u5185\u5b58 (\u53ef\u9009) <code>memory</code> \u7528\u4e8e\u5b58\u50a8\u6267\u884c\u8bb0\u5fc6\uff08\u77ed\u671f\u3001\u957f\u671f\u3001\u5b9e\u4f53\u8bb0\u5fc6\uff09\u3002 \u7f13\u5b58 (\u53ef\u9009) <code>cache</code> \u6307\u5b9a\u662f\u5426\u4f7f\u7528\u7f13\u5b58\u6765\u5b58\u50a8\u5de5\u5177\u6267\u884c\u7684\u7ed3\u679c\u3002 \u5d4c\u5165\u5668 (\u53ef\u9009) <code>embedder</code> crew \u4f7f\u7528\u7684\u5d4c\u5165\u5668\u7684\u914d\u7f6e\u3002\u76ee\u524d\u4e3b\u8981\u7531\u5185\u5b58\u4f7f\u7528\u3002 \u5b8c\u6574\u8f93\u51fa (\u53ef\u9009) <code>full_output</code> crew \u662f\u5426\u5e94\u8fd4\u56de\u5305\u542b\u6240\u6709\u4efb\u52a1\u8f93\u51fa\u7684\u5b8c\u6574\u8f93\u51fa\uff0c\u8fd8\u662f\u4ec5\u8fd4\u56de\u6700\u7ec8\u8f93\u51fa\u3002 \u6b65\u9aa4\u56de\u8c03 (\u53ef\u9009) <code>step_callback</code> \u6bcf\u4e2a agent \u6bcf\u4e00\u6b65\u4e4b\u540e\u8c03\u7528\u7684\u51fd\u6570\u3002\u8fd9\u53ef\u7528\u4e8e\u8bb0\u5f55 agent \u7684\u64cd\u4f5c\u6216\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\uff1b\u5b83\u4e0d\u4f1a\u8986\u76d6\u7279\u5b9a\u4e8e agent \u7684 <code>step_callback</code>\u3002 \u4efb\u52a1\u56de\u8c03 (\u53ef\u9009) <code>task_callback</code> \u6bcf\u4e2a\u4efb\u52a1\u5b8c\u6210\u540e\u8c03\u7528\u7684\u51fd\u6570\u3002\u7528\u4e8e\u5728\u4efb\u52a1\u6267\u884c\u540e\u8fdb\u884c\u76d1\u63a7\u6216\u5176\u4ed6\u64cd\u4f5c\u3002 \u5171\u4eab Crew (\u53ef\u9009) <code>share_crew</code> \u60a8\u662f\u5426\u5e0c\u671b\u4e0e crewAI \u56e2\u961f\u5171\u4eab\u5b8c\u6574\u7684 crew \u4fe1\u606f\u548c\u6267\u884c\u60c5\u51b5\uff0c\u4ee5\u4f7f\u5e93\u53d8\u5f97\u66f4\u597d\uff0c\u5e76\u5141\u8bb8\u6211\u4eec\u8bad\u7ec3\u6a21\u578b\u3002 \u8f93\u51fa\u65e5\u5fd7\u6587\u4ef6 (\u53ef\u9009) <code>output_log_file</code> \u60a8\u662f\u5426\u5e0c\u671b\u6709\u4e00\u4e2a\u5305\u542b\u5b8c\u6574 crew \u8f93\u51fa\u548c\u6267\u884c\u60c5\u51b5\u7684\u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 True \u8fdb\u884c\u8bbe\u7f6e\uff0c\u5b83\u5c06\u9ed8\u8ba4\u4e3a\u60a8\u5f53\u524d\u6240\u5728\u7684\u6587\u4ef6\u5939\uff0c\u5e76\u5c06\u88ab\u79f0\u4e3a logs.txt\uff0c\u6216\u8005\u4f20\u9012\u4e00\u4e2a\u5305\u542b\u6587\u4ef6\u5b8c\u6574\u8def\u5f84\u548c\u540d\u79f0\u7684\u5b57\u7b26\u4e32\u3002 \u7ba1\u7406\u8005 Agent (\u53ef\u9009) <code>manager_agent</code> <code>manager</code> \u8bbe\u7f6e\u4e00\u4e2a\u81ea\u5b9a\u4e49 agent\uff0c\u5b83\u5c06\u7528\u4f5c\u7ba1\u7406\u8005\u3002 \u7ba1\u7406\u8005\u56de\u8c03 (\u53ef\u9009) <code>manager_callbacks</code> <code>manager_callbacks</code> \u63a5\u6536\u4e00\u4e2a\u56de\u8c03\u5904\u7406\u7a0b\u5e8f\u5217\u8868\uff0c\u5f53\u4f7f\u7528\u5206\u5c42\u6d41\u7a0b\u65f6\uff0c\u7ba1\u7406\u8005 agent \u5c06\u6267\u884c\u8fd9\u4e9b\u5904\u7406\u7a0b\u5e8f\u3002 \u63d0\u793a\u6587\u4ef6 (\u53ef\u9009) <code>prompt_file</code> \u7528\u4e8e crew \u7684\u63d0\u793a JSON \u6587\u4ef6\u7684\u8def\u5f84\u3002 \u8ba1\u5212 (\u53ef\u9009) <code>planning</code> \u4e3a Crew \u6dfb\u52a0\u8ba1\u5212\u80fd\u529b\u3002\u5f53\u5728\u6bcf\u6b21 Crew \u8fed\u4ee3\u4e4b\u524d\u6fc0\u6d3b\u65f6\uff0c\u6240\u6709 Crew \u6570\u636e\u90fd\u4f1a\u53d1\u9001\u5230 AgentPlanner\uff0c\u8be5 AgentPlanner \u5c06\u8ba1\u5212\u4efb\u52a1\uff0c\u5e76\u4e14\u6b64\u8ba1\u5212\u5c06\u6dfb\u52a0\u5230\u6bcf\u4e2a\u4efb\u52a1\u63cf\u8ff0\u4e2d\u3002 <p>Crew \u6700\u5927 RPM</p> <p><code>max_rpm</code> \u5c5e\u6027\u8bbe\u7f6e crew \u6bcf\u5206\u949f\u53ef\u4ee5\u6267\u884c\u7684\u6700\u5927\u8bf7\u6c42\u6570\uff0c\u4ee5\u907f\u514d\u901f\u7387\u9650\u5236\uff0c\u5e76\u4e14\u5982\u679c\u60a8\u8bbe\u7f6e\u4e86\u5b83\uff0c\u5b83\u5c06\u8986\u76d6\u5404\u4e2a agent \u7684 <code>max_rpm</code> \u8bbe\u7f6e\u3002</p>"},{"location":"core-concepts/Crews/#crew_2","title":"\u521b\u5efa Crew","text":"<p>\u7ec4\u5efa crew \u65f6\uff0c\u60a8\u9700\u8981\u5c06\u5177\u6709\u4e92\u8865\u89d2\u8272\u548c\u5de5\u5177\u7684 agent \u7ec4\u5408\u8d77\u6765\uff0c\u5206\u914d\u4efb\u52a1\uff0c\u5e76\u9009\u62e9\u4e00\u4e2a\u6d41\u7a0b\u6765\u89c4\u5b9a\u5b83\u4eec\u7684\u6267\u884c\u987a\u5e8f\u548c\u4ea4\u4e92\u65b9\u5f0f\u3002</p>"},{"location":"core-concepts/Crews/#crew_3","title":"\u793a\u4f8b\uff1a\u7ec4\u5efa Crew","text":"<pre><code>from crewai import Crew, Agent, Task, Process\nfrom langchain_community.tools import DuckDuckGoSearchRun\nfrom crewai_tools import tool\n\n@tool('DuckDuckGoSearch')\ndef search(search_query: str):\n    \"\"\"\u5728\u7f51\u7edc\u4e0a\u641c\u7d22\u6709\u5173\u7ed9\u5b9a\u4e3b\u9898\u7684\u4fe1\u606f\"\"\"\n    return DuckDuckGoSearchRun().run(search_query)\n\n# \u5b9a\u4e49\u5177\u6709\u7279\u5b9a\u89d2\u8272\u548c\u5de5\u5177\u7684 agent\nresearcher = Agent(\n    role='\u9ad8\u7ea7\u7814\u7a76\u5206\u6790\u5e08',\n    goal='\u53d1\u73b0\u521b\u65b0\u7684 AI \u6280\u672f',\n    backstory=\"\"\"\u60a8\u662f\u4e00\u5bb6\u5927\u516c\u53f8\u7684\u9ad8\u7ea7\u7814\u7a76\u5206\u6790\u5e08\u3002\n        \u60a8\u8d1f\u8d23\u5206\u6790\u6570\u636e\u5e76\u4e3a\u4f01\u4e1a\u63d0\u4f9b\u89c1\u89e3\u3002\n        \u60a8\u76ee\u524d\u6b63\u5728\u5f00\u5c55\u4e00\u4e2a\u9879\u76ee\uff0c\u4ee5\u5206\u6790\u4eba\u5de5\u667a\u80fd\u9886\u57df\u7684\u8d8b\u52bf\u548c\u521b\u65b0\u3002\"\"\",\n    tools=[search]\n)\n\nwriter = Agent(\n    role='\u5185\u5bb9\u64b0\u7a3f\u4eba',\n    goal='\u64b0\u5199\u6709\u5173 AI \u53d1\u73b0\u7684\u5f15\u4eba\u5165\u80dc\u7684\u6587\u7ae0',\n    backstory=\"\"\"\u60a8\u662f\u4e00\u5bb6\u5927\u516c\u53f8\u7684\u9ad8\u7ea7\u4f5c\u5bb6\u3002\n        \u60a8\u8d1f\u8d23\u4e3a\u4f01\u4e1a\u521b\u5efa\u5185\u5bb9\u3002\n        \u60a8\u76ee\u524d\u6b63\u5728\u5f00\u5c55\u4e00\u4e2a\u9879\u76ee\uff0c\u4e3a\u60a8\u7684\u4e0b\u6b21\u4f1a\u8bae\u64b0\u5199\u6709\u5173 AI \u9886\u57df\u8d8b\u52bf\u548c\u521b\u65b0\u7684\u6587\u7ae0\u3002\"\"\",\n    verbose=True\n)\n\n# \u4e3a agent \u521b\u5efa\u4efb\u52a1\nresearch_task = Task(\n    description='\u8bc6\u522b\u7a81\u7834\u6027 AI \u6280\u672f',\n    agent=researcher,\n    expected_output='\u524d 5 \u540d\u6700\u91cd\u8981\u7684 AI \u65b0\u95fb\u7684\u9879\u76ee\u7b26\u53f7\u5217\u8868\u6458\u8981'\n)\nwrite_article_task = Task(\n    description='\u64b0\u5199\u4e00\u7bc7\u5173\u4e8e\u6700\u65b0 AI \u6280\u672f\u7684\u6587\u7ae0',\n    agent=writer,\n    expected_output='\u5173\u4e8e\u6700\u65b0 AI \u6280\u672f\u7684 3 \u6bb5\u535a\u5ba2\u6587\u7ae0'\n)\n\n# \u4f7f\u7528\u987a\u5e8f\u6d41\u7a0b\u7ec4\u5efa crew\nmy_crew = Crew(\n    agents=[researcher, writer],\n    tasks=[research_task, write_article_task],\n    process=Process.sequential,\n    full_output=True,\n    verbose=True,\n)\n</code></pre>"},{"location":"core-concepts/Crews/#crew_4","title":"Crew \u8f93\u51fa","text":"<p>\u4e86\u89e3 Crew \u8f93\u51fa</p> <p>crewAI \u6846\u67b6\u4e2d crew \u7684\u8f93\u51fa\u5c01\u88c5\u5728 <code>CrewOutput</code> \u7c7b\u4e2d\u3002 \u6b64\u7c7b\u63d0\u4f9b\u4e86\u4e00\u79cd\u7ed3\u6784\u5316\u7684\u65b9\u6cd5\u6765\u8bbf\u95ee crew \u6267\u884c\u7684\u7ed3\u679c\uff0c\u5305\u62ec\u5404\u79cd\u683c\u5f0f\uff0c\u5982\u539f\u59cb\u5b57\u7b26\u4e32\u3001JSON \u548c Pydantic \u6a21\u578b\u3002 <code>CrewOutput</code> \u5305\u62ec\u6700\u7ec8\u4efb\u52a1\u8f93\u51fa\u7684\u7ed3\u679c\u3001token \u4f7f\u7528\u60c5\u51b5\u548c\u5404\u4e2a\u4efb\u52a1\u8f93\u51fa\u3002</p>"},{"location":"core-concepts/Crews/#crew_5","title":"Crew \u8f93\u51fa\u5c5e\u6027","text":"\u5c5e\u6027 \u53c2\u6570 \u7c7b\u578b \u63cf\u8ff0 \u539f\u59cb <code>raw</code> <code>str</code> crew \u7684\u539f\u59cb\u8f93\u51fa\u3002\u8fd9\u662f\u8f93\u51fa\u7684\u9ed8\u8ba4\u683c\u5f0f\u3002 Pydantic <code>pydantic</code> <code>Optional[BaseModel]</code> \u8868\u793a crew \u7ed3\u6784\u5316\u8f93\u51fa\u7684 Pydantic \u6a21\u578b\u5bf9\u8c61\u3002 JSON \u5b57\u5178 <code>json_dict</code> <code>Optional[Dict[str, Any]]</code> \u8868\u793a crew JSON \u8f93\u51fa\u7684\u5b57\u5178\u3002 \u4efb\u52a1\u8f93\u51fa <code>tasks_output</code> <code>List[TaskOutput]</code> <code>TaskOutput</code> \u5bf9\u8c61\u5217\u8868\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u8868\u793a crew \u4e2d\u4e00\u4e2a\u4efb\u52a1\u7684\u8f93\u51fa\u3002 Token \u4f7f\u7528\u60c5\u51b5 <code>token_usage</code> <code>Dict[str, Any]</code> token \u4f7f\u7528\u60c5\u51b5\u6458\u8981\uff0c\u63d0\u4f9b\u6709\u5173\u8bed\u8a00\u6a21\u578b\u5728\u6267\u884c\u671f\u95f4\u6027\u80fd\u7684\u89c1\u89e3\u3002"},{"location":"core-concepts/Crews/#crew_6","title":"Crew \u8f93\u51fa\u65b9\u6cd5\u548c\u5c5e\u6027","text":"\u65b9\u6cd5/\u5c5e\u6027 \u63cf\u8ff0 json \u5982\u679c\u8f93\u51fa\u683c\u5f0f\u4e3a JSON\uff0c\u5219\u8fd4\u56de crew \u8f93\u51fa\u7684 JSON \u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\u3002 to_dict \u5c06 JSON \u548c Pydantic \u8f93\u51fa\u8f6c\u6362\u4e3a\u5b57\u5178\u3002 **str** \u8fd4\u56de crew \u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\uff0c\u4f18\u5148\u7ea7\u4e3a Pydantic\uff0c\u7136\u540e\u662f JSON\uff0c\u7136\u540e\u662f\u539f\u59cb\u3002"},{"location":"core-concepts/Crews/#crew_7","title":"\u8bbf\u95ee Crew \u8f93\u51fa","text":"<p>\u6267\u884c crew \u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>Crew</code> \u5bf9\u8c61\u7684 <code>output</code> \u5c5e\u6027\u8bbf\u95ee\u5176\u8f93\u51fa\u3002<code>CrewOutput</code> \u7c7b\u63d0\u4f9b\u4e86\u5404\u79cd\u65b9\u6cd5\u6765\u4e0e\u8be5\u8f93\u51fa\u8fdb\u884c\u4ea4\u4e92\u548c\u5448\u73b0\u3002</p>"},{"location":"core-concepts/Crews/#_1","title":"\u793a\u4f8b","text":"<pre><code># \u793a\u4f8b crew \u6267\u884c\ncrew = Crew(\n    agents=[research_agent, writer_agent],\n    tasks=[research_task, write_article_task],\n    verbose=2\n)\n\nresult = crew.kickoff()\n\n# \u8bbf\u95ee crew \u8f93\u51fa\nprint(f\"\u539f\u59cb\u8f93\u51fa\uff1a{crew_output.raw}\")\nif crew_output.json_dict:\n    print(f\"JSON \u8f93\u51fa\uff1a{json.dumps(crew_output.json_dict, indent=2)}\")\nif crew_output.pydantic:\n    print(f\"Pydantic \u8f93\u51fa\uff1a{crew_output.pydantic}\")\nprint(f\"\u4efb\u52a1\u8f93\u51fa\uff1a{crew_output.tasks_output}\")\nprint(f\"Token \u4f7f\u7528\u60c5\u51b5\uff1a{crew_output.token_usage}\")\n</code></pre>"},{"location":"core-concepts/Crews/#_2","title":"\u5185\u5b58\u5229\u7528","text":"<p>Crew \u53ef\u4ee5\u5229\u7528\u5185\u5b58\uff08\u77ed\u671f\u3001\u957f\u671f\u548c\u5b9e\u4f53\u5185\u5b58\uff09\u6765\u589e\u5f3a\u5176\u6267\u884c\u548c\u5b66\u4e60\u80fd\u529b\u3002\u6b64\u529f\u80fd\u5141\u8bb8 crew \u5b58\u50a8\u548c\u8c03\u7528\u6267\u884c\u8bb0\u5fc6\uff0c\u5e2e\u52a9\u5236\u5b9a\u51b3\u7b56\u548c\u4efb\u52a1\u6267\u884c\u7b56\u7565\u3002</p>"},{"location":"core-concepts/Crews/#_3","title":"\u7f13\u5b58\u5229\u7528","text":"<p>\u7f13\u5b58\u53ef\u7528\u4e8e\u5b58\u50a8\u5de5\u5177\u6267\u884c\u7684\u7ed3\u679c\uff0c\u901a\u8fc7\u51cf\u5c11\u91cd\u65b0\u6267\u884c\u76f8\u540c\u4efb\u52a1\u7684\u9700\u6c42\uff0c\u4f7f\u6d41\u7a0b\u66f4\u9ad8\u6548\u3002</p>"},{"location":"core-concepts/Crews/#crew_8","title":"Crew \u4f7f\u7528\u6307\u6807","text":"<p>\u5728 crew \u6267\u884c\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95ee <code>usage_metrics</code> \u5c5e\u6027\u4ee5\u67e5\u770b crew \u6267\u884c\u7684\u6240\u6709\u4efb\u52a1\u7684\u8bed\u8a00\u6a21\u578b (LLM) \u4f7f\u7528\u6307\u6807\u3002\u8fd9\u63d0\u4f9b\u4e86\u5bf9\u8fd0\u8425\u6548\u7387\u548c\u9700\u8981\u6539\u8fdb\u7684\u9886\u57df\u7684\u6d1e\u5bdf\u3002</p> <pre><code># \u8bbf\u95ee crew \u7684\u4f7f\u7528\u6307\u6807\ncrew = Crew(agents=[agent1, agent2], tasks=[task1, task2])\ncrew.kickoff()\nprint(crew.usage_metrics)\n</code></pre>"},{"location":"core-concepts/Crews/#crew_9","title":"Crew \u6267\u884c\u6d41\u7a0b","text":"<ul> <li>\u987a\u5e8f\u6d41\u7a0b: \u4efb\u52a1\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u6267\u884c\uff0c\u5141\u8bb8\u7ebf\u6027\u5de5\u4f5c\u6d41\u7a0b\u3002</li> <li>\u5206\u5c42\u6d41\u7a0b: \u7ba1\u7406\u8005 agent \u534f\u8c03 crew\uff0c\u59d4\u6d3e\u4efb\u52a1\u5e76\u5728\u7ee7\u7eed\u4e4b\u524d\u9a8c\u8bc1\u7ed3\u679c\u3002\u6ce8\u610f: \u6b64\u6d41\u7a0b\u9700\u8981 <code>manager_llm</code> \u6216 <code>manager_agent</code>\uff0c\u5e76\u4e14\u5bf9\u4e8e\u9a8c\u8bc1\u6d41\u7a0b\u81f3\u5173\u91cd\u8981\u3002</li> </ul>"},{"location":"core-concepts/Crews/#crew_10","title":"\u542f\u52a8 Crew","text":"<p>\u7ec4\u5efa\u597d crew \u540e\uff0c\u4f7f\u7528 <code>kickoff()</code> \u65b9\u6cd5\u542f\u52a8\u5de5\u4f5c\u6d41\u7a0b\u3002\u8fd9\u5c06\u6839\u636e\u5b9a\u4e49\u7684\u6d41\u7a0b\u542f\u52a8\u6267\u884c\u8fc7\u7a0b\u3002</p> <pre><code># \u542f\u52a8 crew \u7684\u4efb\u52a1\u6267\u884c\nresult = my_crew.kickoff()\nprint(result)\n</code></pre>"},{"location":"core-concepts/Crews/#crew_11","title":"\u542f\u52a8 Crew \u7684\u4e0d\u540c\u65b9\u5f0f","text":"<p>\u7ec4\u5efa\u597d crew \u540e\uff0c\u4f7f\u7528\u76f8\u5e94\u7684\u542f\u52a8\u65b9\u6cd5\u542f\u52a8\u5de5\u4f5c\u6d41\u7a0b\u3002CrewAI \u63d0\u4f9b\u4e86\u51e0\u79cd\u65b9\u6cd5\u6765\u66f4\u597d\u5730\u63a7\u5236\u542f\u52a8\u8fc7\u7a0b\uff1a<code>kickoff()</code>\u3001<code>kickoff_for_each()</code>\u3001<code>kickoff_async()</code> \u548c <code>kickoff_for_each_async()</code>\u3002</p> <p><code>kickoff()</code>: \u6839\u636e\u5b9a\u4e49\u7684\u6d41\u7a0b\u542f\u52a8\u6267\u884c\u8fc7\u7a0b\u3002 <code>kickoff_for_each()</code>: \u5355\u72ec\u4e3a\u6bcf\u4e2a agent \u6267\u884c\u4efb\u52a1\u3002 <code>kickoff_async()</code>: \u5f02\u6b65\u542f\u52a8\u5de5\u4f5c\u6d41\u7a0b\u3002 <code>kickoff_for_each_async()</code>: \u4ee5\u5f02\u6b65\u65b9\u5f0f\u5355\u72ec\u4e3a\u6bcf\u4e2a agent \u6267\u884c\u4efb\u52a1\u3002</p> <pre><code># \u542f\u52a8 crew \u7684\u4efb\u52a1\u6267\u884c\nresult = my_crew.kickoff()\nprint(result)\n\n# \u4f7f\u7528 kickoff_for_each \u7684\u793a\u4f8b\ninputs_array = [{'topic': '\u533b\u7597\u4fdd\u5065\u4e2d\u7684 AI'}, {'topic': '\u91d1\u878d\u4e2d\u7684 AI'}]\nresults = my_crew.kickoff_for_each(inputs=inputs_array)\nfor result in results:\n    print(result)\n\n# \u4f7f\u7528 kickoff_async \u7684\u793a\u4f8b\ninputs = {'topic': '\u533b\u7597\u4fdd\u5065\u4e2d\u7684 AI'}\nasync_result = my_crew.kickoff_async(inputs=inputs)\nprint(async_result)\n\n# \u4f7f\u7528 kickoff_for_each_async \u7684\u793a\u4f8b\ninputs_array = [{'topic': '\u533b\u7597\u4fdd\u5065\u4e2d\u7684 AI'}, {'topic': '\u91d1\u878d\u4e2d\u7684 AI'}]\nasync_results = my_crew.kickoff_for_each_async(inputs=inputs_array)\nfor async_result in async_results:\n    print(async_result)\n</code></pre> <p>\u8fd9\u4e9b\u65b9\u6cd5\u4e3a\u7ba1\u7406\u548c\u6267\u884c crew \u4e2d\u7684\u4efb\u52a1\u63d0\u4f9b\u4e86\u7075\u6d3b\u6027\uff0c\u5141\u8bb8\u6839\u636e\u60a8\u7684\u9700\u6c42\u5b9a\u5236\u540c\u6b65\u548c\u5f02\u6b65\u5de5\u4f5c\u6d41\u7a0b\u3002</p>"},{"location":"core-concepts/Crews/#_4","title":"\u4ece\u7279\u5b9a\u4efb\u52a1\u91cd\u653e\uff1a","text":"<p>\u60a8\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u7684 cli \u547d\u4ee4 replay \u4ece\u7279\u5b9a\u4efb\u52a1\u91cd\u653e\u3002</p> <p>CrewAI \u4e2d\u7684 replay_from_tasks \u529f\u80fd\u5141\u8bb8\u60a8\u4f7f\u7528\u547d\u4ee4\u884c\u754c\u9762 (CLI) \u4ece\u7279\u5b9a\u4efb\u52a1\u91cd\u653e\u3002\u901a\u8fc7\u8fd0\u884c\u547d\u4ee4 <code>crewai replay -t &lt;task_id&gt;</code>\uff0c\u60a8\u53ef\u4ee5\u4e3a\u91cd\u653e\u8fc7\u7a0b\u6307\u5b9a <code>task_id</code>\u3002</p> <p>Kickoff \u73b0\u5728\u5c06\u5728\u672c\u5730\u4fdd\u5b58\u6700\u65b0 kickoff \u8fd4\u56de\u7684\u4efb\u52a1\u8f93\u51fa\uff0c\u4ee5\u4fbf\u60a8\u80fd\u591f\u4ece\u4e2d\u91cd\u653e\u3002</p>"},{"location":"core-concepts/Crews/#cli","title":"\u4f7f\u7528 CLI \u4ece\u7279\u5b9a\u4efb\u52a1\u91cd\u653e","text":"<p>\u8981\u4f7f\u7528\u91cd\u653e\u529f\u80fd\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a</p> <ol> <li>\u6253\u5f00\u7ec8\u7aef\u6216\u547d\u4ee4\u63d0\u793a\u7b26\u3002</li> <li>\u5bfc\u822a\u5230\u60a8\u7684 CrewAI \u9879\u76ee\u6240\u5728\u7684\u76ee\u5f55\u3002</li> <li>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</li> </ol> <p>\u8981\u67e5\u770b\u6700\u65b0\u7684 kickoff task_id\uff0c\u8bf7\u4f7f\u7528\uff1a</p> <pre><code>crewai log-tasks-outputs\n</code></pre> <pre><code>crewai replay -t &lt;task_id&gt;\n</code></pre> <p>\u8fd9\u4e9b\u547d\u4ee4\u5141\u8bb8\u60a8\u4ece\u6700\u65b0\u7684 kickoff \u4efb\u52a1\u91cd\u653e\uff0c\u540c\u65f6\u4fdd\u7559\u5148\u524d\u6267\u884c\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u3002</p>"},{"location":"core-concepts/Memory/","title":"aipmAI Memory \u7cfb\u7edf","text":""},{"location":"core-concepts/Memory/#aipmai-memory","title":"aipmAI \u4e2d\u7684Memory \u7cfb\u7edf\u7b80\u4ecb","text":"<p>\u589e\u5f3a\u4ee3\u7406\u667a\u80fd</p> <p>aipmAI \u6846\u67b6\u5f15\u5165\u4e86\u4e00\u4e2a\u590d\u6742\u7684 Memory \u7cfb\u7edf\uff0c\u65e8\u5728\u663e\u8457\u589e\u5f3a AI \u4ee3\u7406\u7684\u529f\u80fd\u3002\u8be5\u7cfb\u7edf\u5305\u62ec\u77ed\u671f\u8bb0\u5fc6\u3001\u957f\u671f\u8bb0\u5fc6\u3001\u5b9e\u4f53\u8bb0\u5fc6\u548c\u4e0a\u4e0b\u6587\u8bb0\u5fc6\uff0c\u5b83\u4eec\u5404\u81ea\u5728\u5e2e\u52a9\u4ee3\u7406\u8bb0\u4f4f\u3001\u63a8\u7406\u548c\u4ece\u8fc7\u53bb\u7684\u4ea4\u4e92\u4e2d\u5b66\u4e60\u65b9\u9762\u53d1\u6325\u7740\u72ec\u7279\u7684\u4f5c\u7528\u3002</p>"},{"location":"core-concepts/Memory/#memory","title":"Memory \u7cfb\u7edf\u7ec4\u4ef6","text":"\u7ec4\u4ef6 \u63cf\u8ff0 \u77ed\u671f\u8bb0\u5fc6 \u4e34\u65f6\u5b58\u50a8\u6700\u8fd1\u7684\u4ea4\u4e92\u548c\u7ed3\u679c\uff0c\u4f7f\u4ee3\u7406\u80fd\u591f\u5728\u5f53\u524d\u6267\u884c\u671f\u95f4\u56de\u5fc6\u548c\u5229\u7528\u4e0e\u5176\u5f53\u524d\u4e0a\u4e0b\u6587\u76f8\u5173\u7684\u4fe1\u606f\u3002 \u957f\u671f\u8bb0\u5fc6 \u4fdd\u5b58\u8fc7\u53bb\u6267\u884c\u4e2d\u5b9d\u8d35\u7684\u89c1\u89e3\u548c\u5b66\u4e60\u6210\u679c\uff0c\u4f7f\u4ee3\u7406\u80fd\u591f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5efa\u7acb\u548c\u5b8c\u5584\u5176\u77e5\u8bc6\u3002\u56e0\u6b64\uff0c\u4ee3\u7406\u53ef\u4ee5\u8bb0\u4f4f\u4ed6\u4eec\u5728\u591a\u6b21\u6267\u884c\u4e2d\u505a\u5bf9\u4e86\u4ec0\u4e48\uff0c\u505a\u9519\u4e86\u4ec0\u4e48\u3002 \u5b9e\u4f53\u8bb0\u5fc6 \u6355\u83b7\u548c\u7ec4\u7ec7\u5728\u4efb\u52a1\u671f\u95f4\u9047\u5230\u7684\u5b9e\u4f53\uff08\u4eba\u3001\u5730\u70b9\u3001\u6982\u5ff5\uff09\u7684\u4fe1\u606f\uff0c\u4fc3\u8fdb\u66f4\u6df1\u5165\u7684\u7406\u89e3\u548c\u5173\u7cfb\u6620\u5c04\u3002 \u4e0a\u4e0b\u6587\u8bb0\u5fc6 \u901a\u8fc7\u7ec4\u5408\u201c\u77ed\u671f\u8bb0\u5fc6\u201d\u3001\u201c\u957f\u671f\u8bb0\u5fc6\u201d\u548c\u201c\u5b9e\u4f53\u8bb0\u5fc6\u201d\u6765\u7ef4\u62a4\u4ea4\u4e92\u7684\u4e0a\u4e0b\u6587\uff0c\u5e2e\u52a9\u4ee3\u7406\u5728\u4e00\u7cfb\u5217\u4efb\u52a1\u6216\u5bf9\u8bdd\u4e2d\u4fdd\u6301\u4e00\u81f4\u6027\u548c\u76f8\u5173\u6027\u3002"},{"location":"core-concepts/Memory/#memory_1","title":"Memory \u7cfb\u7edf\u5982\u4f55\u589e\u5f3a\u4ee3\u7406","text":"<ol> <li> <p>\u4e0a\u4e0b\u6587\u611f\u77e5\uff1a\u501f\u52a9\u77ed\u671f\u8bb0\u5fc6\u548c\u4e0a\u4e0b\u6587\u8bb0\u5fc6\uff0c\u4ee3\u7406\u80fd\u591f\u5728\u5bf9\u8bdd\u6216\u4efb\u52a1\u5e8f\u5217\u4e2d\u4fdd\u6301\u4e0a\u4e0b\u6587\uff0c\u4ece\u800c\u505a\u51fa\u66f4\u4e00\u81f4\u548c\u66f4\u76f8\u5173\u7684\u54cd\u5e94\u3002</p> </li> <li> <p>\u7ecf\u9a8c\u79ef\u7d2f\uff1a\u957f\u671f\u8bb0\u5fc6\u5141\u8bb8\u4ee3\u7406\u79ef\u7d2f\u7ecf\u9a8c\uff0c\u4ece\u8fc7\u53bb\u7684\u884c\u52a8\u4e2d\u5b66\u4e60\uff0c\u4ee5\u6539\u8fdb\u672a\u6765\u7684\u51b3\u7b56\u548c\u95ee\u9898\u89e3\u51b3\u3002</p> </li> <li> <p>\u5b9e\u4f53\u7406\u89e3\uff1a\u901a\u8fc7\u7ef4\u62a4\u5b9e\u4f53\u8bb0\u5fc6\uff0c\u4ee3\u7406\u53ef\u4ee5\u8bc6\u522b\u548c\u8bb0\u4f4f\u5173\u952e\u5b9e\u4f53\uff0c\u589e\u5f3a\u5176\u5904\u7406\u548c\u4ea4\u4e92\u590d\u6742\u4fe1\u606f\u7684\u80fd\u529b\u3002</p> </li> </ol>"},{"location":"core-concepts/Memory/#crew-memory","title":"\u5728\u60a8\u7684 Crew \u4e2d\u5b9e\u73b0Memory","text":"<p>\u5728\u914d\u7f6e crew \u65f6\uff0c\u60a8\u53ef\u4ee5\u542f\u7528\u548c\u81ea\u5b9a\u4e49\u6bcf\u4e2aMemory\u7ec4\u4ef6\uff0c\u4ee5\u9002\u5e94 crew \u7684\u76ee\u6807\u53ca\u5176\u5c06\u6267\u884c\u7684\u4efb\u52a1\u7684\u6027\u8d28\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cMemory \u7cfb\u7edf\u662f\u7981\u7528\u7684\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728 crew \u914d\u7f6e\u4e2d\u8bbe\u7f6e <code>memory=True</code> \u6765\u786e\u4fdd\u5b83\u662f\u6d3b\u52a8\u7684\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cMemory\u5c06\u4f7f\u7528 OpenAI Embeddings\uff0c\u4f46\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06 <code>embedder</code> \u8bbe\u7f6e\u4e3a\u4e0d\u540c\u7684\u6a21\u578b\u6765\u66f4\u6539\u5b83\u3002</p> <p>'embedder' \u4ec5\u9002\u7528\u4e8e\u4f7f\u7528 Chroma for RAG \u548c EmbedChain \u5305\u7684 \u77ed\u671f\u8bb0\u5fc6\u3002 \u957f\u671f\u8bb0\u5fc6 \u4f7f\u7528 SQLLite3 \u6765\u5b58\u50a8\u4efb\u52a1\u7ed3\u679c\u3002\u76ee\u524d\uff0c\u8fd8\u6ca1\u6709\u529e\u6cd5\u8986\u76d6\u8fd9\u4e9b\u5b58\u50a8\u5b9e\u73b0\u3002 \u6570\u636e\u5b58\u50a8\u6587\u4ef6\u88ab\u4fdd\u5b58\u5230\u4f7f\u7528 appdirs \u5305\u627e\u5230\u7684\u5e73\u53f0\u7279\u5b9a\u4f4d\u7f6e\uff0c\u9879\u76ee\u7684\u540d\u79f0\u53ef\u4ee5\u4f7f\u7528 AIPMAI_STORAGE_DIR \u73af\u5883\u53d8\u91cf\u8986\u76d6\u3002</p>"},{"location":"core-concepts/Memory/#crew-memory_1","title":"\u793a\u4f8b\uff1a\u4e3a Crew \u914d\u7f6eMemory","text":"<pre><code>from crewAI import Crew, Agent, Task, Process\n\n# \u7ec4\u88c5\u5177\u6709Memory\u529f\u80fd\u7684 crew\nmy_crew = Crew(\n    agents=[...],\n    tasks=[...],\n    process=Process.sequential,\n    memory=True,\n    verbose=True\n)\n</code></pre>"},{"location":"core-concepts/Memory/#_1","title":"\u5176\u4ed6\u5d4c\u5165\u63d0\u4f9b\u7a0b\u5e8f","text":""},{"location":"core-concepts/Memory/#openai","title":"\u4f7f\u7528 OpenAI \u5d4c\u5165\uff08\u5df2\u7ecf\u662f\u9ed8\u8ba4\u8bbe\u7f6e\uff09","text":"<pre><code>from crewAI import Crew, Agent, Task, Process\n\nmy_crew = Crew(\n        agents=[...],\n        tasks=[...],\n        process=Process.sequential,\n        memory=True,\n        verbose=True,\n        embedder={\n                \"provider\": \"openai\",\n                \"config\":{\n                        \"model\": 'text-embedding-3-small'\n                }\n        }\n)\n</code></pre>"},{"location":"core-concepts/Memory/#google-ai","title":"\u4f7f\u7528 Google AI \u5d4c\u5165","text":"<pre><code>from crewAI import Crew, Agent, Task, Process\n\nmy_crew = Crew(\n        agents=[...],\n        tasks=[...],\n        process=Process.sequential,\n        memory=True,\n        verbose=True,\n        embedder={\n            \"provider\": \"google\",\n            \"config\":{\n                \"model\": 'models/embedding-001',\n                \"task_type\": \"retrieval_document\",\n                \"title\": \"Embeddings for Embedchain\"\n            }\n        }\n)\n</code></pre>"},{"location":"core-concepts/Memory/#azure-openai","title":"\u4f7f\u7528 Azure OpenAI \u5d4c\u5165","text":"<pre><code>from crewAI import Crew, Agent, Task, Process\n\nmy_crew = Crew(\n        agents=[...],\n        tasks=[...],\n        process=Process.sequential,\n        memory=True,\n        verbose=True,\n        embedder={\n            \"provider\": \"azure_openai\",\n            \"config\":{\n                \"model\": 'text-embedding-ada-002',\n                \"deployment_name\": \"you_embedding_model_deployment_name\"\n            }\n        }\n)\n</code></pre>"},{"location":"core-concepts/Memory/#gpt4all","title":"\u4f7f\u7528 GPT4ALL \u5d4c\u5165","text":"<pre><code>from crewAI import Crew, Agent, Task, Process\n\nmy_crew = Crew(\n        agents=[...],\n        tasks=[...],\n        process=Process.sequential,\n        memory=True,\n        verbose=True,\n        embedder={\n            \"provider\": \"gpt4all\"\n        }\n)\n</code></pre>"},{"location":"core-concepts/Memory/#vertex-ai","title":"\u4f7f\u7528 Vertex AI \u5d4c\u5165","text":"<pre><code>from crewAI import Crew, Agent, Task, Process\n\nmy_crew = Crew(\n        agents=[...],\n        tasks=[...],\n        process=Process.sequential,\n        memory=True,\n        verbose=True,\n        embedder={\n            \"provider\": \"vertexai\",\n            \"config\":{\n                \"model\": 'textembedding-gecko'\n            }\n        }\n)\n</code></pre>"},{"location":"core-concepts/Memory/#cohere","title":"\u4f7f\u7528 Cohere \u5d4c\u5165","text":"<pre><code>from crewAI import Crew, Agent, Task, Process\n\nmy_crew = Crew(\n        agents=[...],\n        tasks=[...],\n        process=Process.sequential,\n        memory=True,\n        verbose=True,\n        embedder={\n            \"provider\": \"cohere\",\n            \"config\":{\n                \"model\": \"embed-english-v3.0\"\n            \"vector_dimension\": 1024\n            }\n        }\n)\n</code></pre>"},{"location":"core-concepts/Memory/#memory_2","title":"\u91cd\u7f6eMemory","text":"<pre><code>aipmAI reset_memories [OPTIONS]\n</code></pre>"},{"location":"core-concepts/Memory/#memory_3","title":"\u91cd\u7f6eMemory\u9009\u9879","text":"<ul> <li><code>-l, --long</code></li> <li>\u63cf\u8ff0: \u91cd\u7f6e\u957f\u671f\u8bb0\u5fc6\u3002</li> <li>\u7c7b\u578b: \u6807\u5fd7\uff08\u5e03\u5c14\u503c\uff09</li> <li> <p>\u9ed8\u8ba4\u503c: False</p> </li> <li> <p><code>-s, --short</code></p> </li> <li>\u63cf\u8ff0: \u91cd\u7f6e\u77ed\u671f\u8bb0\u5fc6\u3002</li> <li>\u7c7b\u578b: \u6807\u5fd7\uff08\u5e03\u5c14\u503c\uff09</li> <li> <p>\u9ed8\u8ba4\u503c: False</p> </li> <li> <p><code>-e, --entities</code></p> </li> <li>\u63cf\u8ff0: \u91cd\u7f6e\u5b9e\u4f53\u8bb0\u5fc6\u3002</li> <li>\u7c7b\u578b: \u6807\u5fd7\uff08\u5e03\u5c14\u503c\uff09</li> <li> <p>\u9ed8\u8ba4\u503c: False</p> </li> <li> <p><code>-k, --kickoff-outputs</code></p> </li> <li>\u63cf\u8ff0: \u91cd\u7f6e\u6700\u65b0\u7684\u542f\u52a8\u4efb\u52a1\u8f93\u51fa\u3002</li> <li>\u7c7b\u578b: \u6807\u5fd7\uff08\u5e03\u5c14\u503c\uff09</li> <li> <p>\u9ed8\u8ba4\u503c: False</p> </li> <li> <p><code>-a, --all</code></p> </li> <li>\u63cf\u8ff0: \u91cd\u7f6e\u6240\u6709\u8bb0\u5fc6\u3002</li> <li>\u7c7b\u578b: \u6807\u5fd7\uff08\u5e03\u5c14\u503c\uff09</li> <li>\u9ed8\u8ba4\u503c: False</li> </ul>"},{"location":"core-concepts/Memory/#aipmai-memory_1","title":"\u4f7f\u7528 aipmAI Memory \u7cfb\u7edf\u7684\u4f18\u52bf","text":"<ul> <li>\u81ea\u9002\u5e94\u5b66\u4e60\uff1aCrew \u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u53d8\u5f97\u66f4\u52a0\u9ad8\u6548\uff0c\u9002\u5e94\u65b0\u4fe1\u606f\u5e76\u6539\u8fdb\u5176\u5904\u7406\u4efb\u52a1\u7684\u65b9\u6cd5\u3002</li> <li>\u589e\u5f3a\u4e2a\u6027\u5316\uff1aMemory\u4f7f\u4ee3\u7406\u80fd\u591f\u8bb0\u4f4f\u7528\u6237\u504f\u597d\u548c\u5386\u53f2\u4ea4\u4e92\uff0c\u4ece\u800c\u5e26\u6765\u4e2a\u6027\u5316\u7684\u4f53\u9a8c\u3002</li> <li>\u6539\u8fdb\u95ee\u9898\u89e3\u51b3\uff1a\u8bbf\u95ee\u4e30\u5bcc\u7684Memory\u5b58\u50a8\u53ef\u5e2e\u52a9\u4ee3\u7406\u505a\u51fa\u66f4\u660e\u667a\u7684\u51b3\u7b56\uff0c\u5229\u7528\u8fc7\u53bb\u7684\u5b66\u4e60\u6210\u679c\u548c\u4e0a\u4e0b\u6587\u89c1\u89e3\u3002</li> </ul>"},{"location":"core-concepts/Memory/#_2","title":"\u5165\u95e8","text":"<p>\u5c06 aipmAI \u7684Memory \u7cfb\u7edf\u96c6\u6210\u5230\u60a8\u7684\u9879\u76ee\u4e2d\u975e\u5e38\u7b80\u5355\u3002\u901a\u8fc7\u5229\u7528\u63d0\u4f9b\u7684Memory\u7ec4\u4ef6\u548c\u914d\u7f6e\uff0c\u60a8\u53ef\u4ee5\u5feb\u901f\u8d4b\u4e88\u60a8\u7684\u4ee3\u7406\u8bb0\u5fc6\u3001\u63a8\u7406\u548c\u4ece\u4ea4\u4e92\u4e2d\u5b66\u4e60\u7684\u80fd\u529b\uff0c\u4ece\u800c\u89e3\u9501\u65b0\u7684\u667a\u80fd\u548c\u80fd\u529b\u6c34\u5e73\u3002</p>"},{"location":"core-concepts/Planning/","title":"crewAI \u89c4\u5212","text":""},{"location":"core-concepts/Planning/#_1","title":"\u7b80\u4ecb","text":"<p>CrewAI \u4e2d\u7684\u89c4\u5212\u529f\u80fd\u5141\u8bb8\u60a8\u4e3a\u60a8\u7684 crew \u6dfb\u52a0\u89c4\u5212\u80fd\u529b\u3002\u542f\u7528\u540e\uff0c\u5728\u6bcf\u6b21 Crew \u8fed\u4ee3\u4e4b\u524d\uff0c\u6240\u6709 Crew \u4fe1\u606f\u90fd\u4f1a\u53d1\u9001\u5230 AgentPlanner\uff0c\u5b83\u5c06\u9010\u6b65\u89c4\u5212\u4efb\u52a1\uff0c\u5e76\u4e14\u8be5\u8ba1\u5212\u5c06\u6dfb\u52a0\u5230\u6bcf\u4e2a\u4efb\u52a1\u63cf\u8ff0\u4e2d\u3002</p>"},{"location":"core-concepts/Planning/#_2","title":"\u4f7f\u7528\u89c4\u5212\u529f\u80fd","text":"<p>\u5f00\u59cb\u4f7f\u7528\u89c4\u5212\u529f\u80fd\u975e\u5e38\u5bb9\u6613\uff0c\u552f\u4e00\u9700\u8981\u505a\u7684\u5c31\u662f\u5728\u60a8\u7684 Crew \u4e2d\u6dfb\u52a0 <code>planning=True</code>\uff1a</p> <pre><code>from crewai import Crew, Agent, Task, Process\n\n# \u7ec4\u88c5\u60a8\u7684 crew \u5e76\u542f\u7528\u89c4\u5212\u529f\u80fd\nmy_crew = Crew(\n    agents=self.agents,\n    tasks=self.tasks,\n    process=Process.sequential,\n    planning=True,\n)\n</code></pre> <p>\u4ece\u8fd9\u4e00\u70b9\u5f00\u59cb\uff0c\u60a8\u7684 crew \u5c06\u542f\u7528\u89c4\u5212\uff0c\u5e76\u4e14\u5c06\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e4b\u524d\u89c4\u5212\u4efb\u52a1\u3002</p>"},{"location":"core-concepts/Planning/#_3","title":"\u793a\u4f8b","text":"<p>\u8fd0\u884c\u57fa\u672c\u6848\u4f8b\u793a\u4f8b\u65f6\uff0c\u60a8\u5c06\u770b\u5230\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\u7684\u8f93\u51fa\uff0c\u5b83\u8868\u793a\u8d1f\u8d23\u521b\u5efa\u8981\u6dfb\u52a0\u5230\u4ee3\u7406\u4efb\u52a1\u7684\u9010\u6b65\u903b\u8f91\u7684 AgentPlanner \u7684\u8f93\u51fa\u3002</p> <pre><code>[2024-07-15 16:49:11][INFO]: \u6b63\u5728\u89c4\u5212 crew \u6267\u884c\n**\u4efb\u52a1\u6267\u884c\u7684\u5206\u6b65\u8ba1\u5212**\n\n**\u4efb\u52a1\u7f16\u53f7 1\uff1a\u5bf9 AI LLMs \u8fdb\u884c\u5168\u9762\u7814\u7a76**\n\n**\u4ee3\u7406\uff1a** AI LLMs \u9ad8\u7ea7\u6570\u636e\u7814\u7a76\u5458\n\n**\u4ee3\u7406\u76ee\u6807\uff1a** \u53d1\u73b0 AI LLMs \u7684\u6700\u65b0\u53d1\u5c55\n\n**\u4efb\u52a1\u9884\u671f\u8f93\u51fa\uff1a** \u5305\u542b 10 \u4e2a\u9879\u76ee\u7b26\u53f7\u7684\u5217\u8868\uff0c\u5217\u51fa\u6709\u5173 AI LLMs \u7684\u6700\u76f8\u5173\u4fe1\u606f\n\n**\u4efb\u52a1\u5de5\u5177\uff1a** \u672a\u6307\u5b9a\n\n**\u4ee3\u7406\u5de5\u5177\uff1a** \u672a\u6307\u5b9a\n\n**\u5206\u6b65\u8ba1\u5212\uff1a**\n\n1. **\u5b9a\u4e49\u7814\u7a76\u8303\u56f4\uff1a**\n   - \u786e\u5b9a AI LLMs \u8981\u5173\u6ce8\u7684\u5177\u4f53\u9886\u57df\uff0c\u4f8b\u5982\u67b6\u6784\u3001\u7528\u4f8b\u3001\u4f26\u7406\u8003\u91cf\u548c\u6027\u80fd\u6307\u6807\u65b9\u9762\u7684\u8fdb\u6b65\u3002\n\n2. **\u786e\u5b9a\u53ef\u9760\u6765\u6e90\uff1a**\n   - \u5217\u51fa\u4fe1\u8a89\u826f\u597d\u7684 AI \u7814\u7a76\u6765\u6e90\uff0c\u5305\u62ec\u5b66\u672f\u671f\u520a\u3001\u884c\u4e1a\u62a5\u544a\u3001\u4f1a\u8bae\uff08\u4f8b\u5982 NeurIPS\u3001ACL\uff09\u3001AI \u7814\u7a76\u5b9e\u9a8c\u5ba4\uff08\u4f8b\u5982 OpenAI\u3001Google AI\uff09\u548c\u5728\u7ebf\u6570\u636e\u5e93\uff08\u4f8b\u5982 IEEE Xplore\u3001arXiv\uff09\u3002\n\n3. **\u6536\u96c6\u6570\u636e\uff1a**\n   - \u641c\u7d22 2023 \u5e74\u548c 2024 \u5e74\u521d\u53d1\u8868\u7684\u6700\u65b0\u8bba\u6587\u3001\u6587\u7ae0\u548c\u62a5\u544a\u3002\n   - \u4f7f\u7528\u201c\u5927\u578b\u8bed\u8a00\u6a21\u578b 2024\u201d\u3001\u201cAI LLM \u8fdb\u5c55\u201d\u3001\u201cAI \u4f26\u7406 2024\u201d\u7b49\u5173\u952e\u8bcd\u3002\n\n4. **\u5206\u6790\u7ed3\u679c\uff1a**\n   - \u9605\u8bfb\u5e76\u603b\u7ed3\u6bcf\u4e2a\u6765\u6e90\u7684\u5173\u952e\u70b9\u3002\n   - \u7a81\u51fa\u663e\u793a\u8fc7\u53bb\u4e00\u5e74\u4e2d\u5f15\u5165\u7684\u65b0\u6280\u672f\u3001\u6a21\u578b\u548c\u5e94\u7528\u3002\n\n5. **\u6574\u7406\u4fe1\u606f\uff1a**\n   - \u5c06\u4fe1\u606f\u5206\u7c7b\u5230\u76f8\u5173\u4e3b\u9898\u4e2d\uff08\u4f8b\u5982\uff0c\u65b0\u67b6\u6784\u3001\u4f26\u7406\u5f71\u54cd\u3001\u5b9e\u9645\u5e94\u7528\uff09\u3002\n   - \u786e\u4fdd\u6bcf\u4e2a\u9879\u76ee\u7b26\u53f7\u90fd\u7b80\u6d01\u4f46\u5185\u5bb9\u4e30\u5bcc\u3002\n\n6. **\u521b\u5efa\u5217\u8868\uff1a**\n   - \u5c06 10 \u4e2a\u6700\u76f8\u5173\u7684\u7247\u6bb5\u4fe1\u606f\u7f16\u8bd1\u6210\u4e00\u4e2a\u9879\u76ee\u7b26\u53f7\u5217\u8868\u3002\n   - \u67e5\u770b\u5217\u8868\u4ee5\u786e\u4fdd\u6e05\u6670\u5ea6\u548c\u76f8\u5173\u6027\u3002\n\n**\u9884\u671f\u8f93\u51fa\uff1a**\n\u5305\u542b 10 \u4e2a\u9879\u76ee\u7b26\u53f7\u7684\u5217\u8868\uff0c\u5217\u51fa\u6709\u5173 AI LLMs \u7684\u6700\u76f8\u5173\u4fe1\u606f\u3002\n\n---\n\n**\u4efb\u52a1\u7f16\u53f7 2\uff1a\u67e5\u770b\u60a8\u83b7\u5f97\u7684\u4e0a\u4e0b\u6587\u5e76\u5c06\u6bcf\u4e2a\u4e3b\u9898\u6269\u5c55\u4e3a\u62a5\u544a\u7684\u5b8c\u6574\u90e8\u5206**\n\n**\u4ee3\u7406\uff1a** AI LLMs \u62a5\u544a\u5206\u6790\u5e08\n\n**\u4ee3\u7406\u76ee\u6807\uff1a** \u6839\u636e AI LLMs \u6570\u636e\u5206\u6790\u548c\u7814\u7a76\u7ed3\u679c\u521b\u5efa\u8be6\u7ec6\u62a5\u544a\n\n**\u4efb\u52a1\u9884\u671f\u8f93\u51fa\uff1a** \u4e00\u4efd\u5b8c\u6574\u7684\u62a5\u544a\uff0c\u5176\u4e2d\u5305\u542b\u4e3b\u8981\u4e3b\u9898\uff0c\u6bcf\u4e2a\u4e3b\u9898\u90fd\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u4fe1\u606f\u90e8\u5206\u3002\u683c\u5f0f\u4e3a\u4e0d\u5e26\u201c```\u201d\u7684 Markdown\n\n**\u4efb\u52a1\u5de5\u5177\uff1a** \u672a\u6307\u5b9a\n\n**\u4ee3\u7406\u5de5\u5177\uff1a** \u672a\u6307\u5b9a\n\n**\u5206\u6b65\u8ba1\u5212\uff1a**\n\n1. **\u67e5\u770b\u9879\u76ee\u7b26\u53f7\uff1a**\n   - \u4ed4\u7ec6\u9605\u8bfb AI LLMs \u9ad8\u7ea7\u6570\u636e\u7814\u7a76\u5458\u63d0\u4f9b\u7684 10 \u4e2a\u9879\u76ee\u7b26\u53f7\u5217\u8868\u3002\n\n2. **\u6982\u8ff0\u62a5\u544a\uff1a**\n   - \u521b\u5efa\u4e00\u4e2a\u5927\u7eb2\uff0c\u5c06\u6bcf\u4e2a\u9879\u76ee\u7b26\u53f7\u4f5c\u4e3a\u4e3b\u8981\u90e8\u5206\u6807\u9898\u3002\n   - \u5728\u6bcf\u4e2a\u4e3b\u8981\u6807\u9898\u4e0b\u89c4\u5212\u5b50\u90e8\u5206\uff0c\u4ee5\u6db5\u76d6\u4e3b\u9898\u7684\u4e0d\u540c\u65b9\u9762\u3002\n\n3. **\u7814\u7a76\u66f4\u591a\u7ec6\u8282\uff1a**\n   - \u5bf9\u4e8e\u6bcf\u4e2a\u9879\u76ee\u7b26\u53f7\uff0c\u5982\u6709\u5fc5\u8981\uff0c\u8fdb\u884c\u989d\u5916\u7684\u7814\u7a76\u4ee5\u6536\u96c6\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f\u3002\n   - \u5bfb\u627e\u6848\u4f8b\u7814\u7a76\u3001\u793a\u4f8b\u548c\u7edf\u8ba1\u6570\u636e\u6765\u652f\u6301\u6bcf\u4e2a\u90e8\u5206\u3002\n\n4. **\u7f16\u5199\u8be6\u7ec6\u90e8\u5206\uff1a**\n   - \u5c06\u6bcf\u4e2a\u9879\u76ee\u7b26\u53f7\u6269\u5c55\u4e3a\u4e00\u4e2a\u7efc\u5408\u90e8\u5206\u3002\n   - \u786e\u4fdd\u6bcf\u4e2a\u90e8\u5206\u90fd\u5305\u542b\u5f15\u8a00\u3001\u8be6\u7ec6\u89e3\u91ca\u3001\u793a\u4f8b\u548c\u7ed3\u8bba\u3002\n   - \u4f7f\u7528 Markdown \u683c\u5f0f\u8bbe\u7f6e\u6807\u9898\u3001\u5b50\u6807\u9898\u3001\u5217\u8868\u548c\u5f3a\u8c03\u3002\n\n5. **\u5ba1\u9605\u548c\u7f16\u8f91\uff1a**\n   - \u6821\u5bf9\u62a5\u544a\u7684\u6e05\u6670\u5ea6\u3001\u8fde\u8d2f\u6027\u548c\u6b63\u786e\u6027\u3002\n   - \u786e\u4fdd\u62a5\u544a\u4ece\u4e00\u4e2a\u90e8\u5206\u903b\u8f91\u5730\u6d41\u5411\u4e0b\u4e00\u4e2a\u90e8\u5206\u3002\n   - \u6839\u636e Markdown \u6807\u51c6\u683c\u5f0f\u5316\u62a5\u544a\u3002\n\n6. **\u6700\u7ec8\u786e\u5b9a\u62a5\u544a\uff1a**\n   - \u786e\u4fdd\u62a5\u544a\u5b8c\u6574\uff0c\u6240\u6709\u90e8\u5206\u90fd\u5df2\u6269\u5c55\u548c\u8be6\u7ec6\u8bf4\u660e\u3002\n   - \u4ed4\u7ec6\u68c0\u67e5\u683c\u5f0f\u5e76\u8fdb\u884c\u4efb\u4f55\u5fc5\u8981\u7684\u8c03\u6574\u3002\n\n**\u9884\u671f\u8f93\u51fa\uff1a**\n\u4e00\u4efd\u5b8c\u6574\u7684\u62a5\u544a\uff0c\u5176\u4e2d\u5305\u542b\u4e3b\u8981\u4e3b\u9898\uff0c\u6bcf\u4e2a\u4e3b\u9898\u90fd\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u4fe1\u606f\u90e8\u5206\u3002\u683c\u5f0f\u4e3a\u4e0d\u5e26\u201c```\u201d\u7684 Markdown\u3002\n\n---\n</code></pre>"},{"location":"core-concepts/Processes/","title":"\u5728 CrewAI \u4e2d\u7ba1\u7406\u6d41\u7a0b","text":""},{"location":"core-concepts/Processes/#_1","title":"\u7406\u89e3\u6d41\u7a0b","text":"<p>\u6838\u5fc3\u6982\u5ff5</p> <p>\u5728 CrewAI \u4e2d\uff0c\u6d41\u7a0b\u8d1f\u8d23\u534f\u8c03 agent \u6267\u884c\u4efb\u52a1\uff0c\u7c7b\u4f3c\u4e8e\u4eba\u7c7b\u56e2\u961f\u4e2d\u7684\u9879\u76ee\u7ba1\u7406\u3002\u8fd9\u4e9b\u6d41\u7a0b\u786e\u4fdd\u4efb\u52a1\u6309\u7167\u9884\u5b9a\u4e49\u7684\u7b56\u7565\u9ad8\u6548\u5730\u5206\u914d\u548c\u6267\u884c\u3002</p>"},{"location":"core-concepts/Processes/#_2","title":"\u6d41\u7a0b\u5b9e\u73b0","text":"<ul> <li>\u987a\u5e8f: \u6309\u987a\u5e8f\u6267\u884c\u4efb\u52a1\uff0c\u786e\u4fdd\u4efb\u52a1\u6309\u6709\u5e8f\u7684\u8fdb\u7a0b\u5b8c\u6210\u3002</li> <li>\u5206\u5c42: \u5728\u7ba1\u7406\u5c42\u6b21\u7ed3\u6784\u4e2d\u7ec4\u7ec7\u4efb\u52a1\uff0c\u5176\u4e2d\u4efb\u52a1\u6839\u636e\u7ed3\u6784\u5316\u7684\u6307\u6325\u94fe\u8fdb\u884c\u59d4\u6d3e\u548c\u6267\u884c\u3002\u5fc5\u987b\u5728 crew \u4e2d\u6307\u5b9a\u7ba1\u7406\u8005\u8bed\u8a00\u6a21\u578b (<code>manager_llm</code>) \u6216\u81ea\u5b9a\u4e49\u7ba1\u7406\u8005 agent (<code>manager_agent</code>) \u624d\u80fd\u542f\u7528\u5206\u5c42\u6d41\u7a0b\uff0c\u4ece\u800c\u4fc3\u8fdb\u7ba1\u7406\u8005\u521b\u5efa\u548c\u7ba1\u7406\u4efb\u52a1\u3002</li> <li>\u534f\u5546\u4e00\u81f4\u6d41\u7a0b\uff08\u8ba1\u5212\u4e2d\uff09: \u65e8\u5728\u8ba9 agent \u5c31\u4efb\u52a1\u6267\u884c\u8fdb\u884c\u534f\u4f5c\u51b3\u7b56\uff0c\u8fd9\u79cd\u6d41\u7a0b\u7c7b\u578b\u4e3a CrewAI \u4e2d\u7684\u4efb\u52a1\u7ba1\u7406\u5f15\u5165\u4e86\u4e00\u79cd\u6c11\u4e3b\u7684\u65b9\u6cd5\u3002\u5b83\u8ba1\u5212\u5728\u672a\u6765\u5f00\u53d1\uff0c\u76ee\u524d\u5c1a\u672a\u5728\u4ee3\u7801\u5e93\u4e2d\u5b9e\u73b0\u3002</li> </ul>"},{"location":"core-concepts/Processes/#_3","title":"\u6d41\u7a0b\u5728\u56e2\u961f\u5408\u4f5c\u4e2d\u7684\u4f5c\u7528","text":"<p>\u6d41\u7a0b\u4f7f\u5404\u4e2a agent \u80fd\u591f\u4f5c\u4e3a\u4e00\u4e2a\u6709\u51dd\u805a\u529b\u7684\u5355\u5143\u8fd0\u4f5c\uff0c\u7b80\u5316\u4ed6\u4eec\u7684\u5de5\u4f5c\uff0c\u4ee5\u9ad8\u6548\u548c\u4e00\u81f4\u7684\u65b9\u5f0f\u5b9e\u73b0\u5171\u540c\u76ee\u6807\u3002</p>"},{"location":"core-concepts/Processes/#crew","title":"\u4e3a Crew \u5206\u914d\u6d41\u7a0b","text":"<p>\u8981\u4e3a crew \u5206\u914d\u6d41\u7a0b\uff0c\u8bf7\u5728\u521b\u5efa crew \u65f6\u6307\u5b9a\u6d41\u7a0b\u7c7b\u578b\u4ee5\u8bbe\u7f6e\u6267\u884c\u7b56\u7565\u3002\u5bf9\u4e8e\u5206\u5c42\u6d41\u7a0b\uff0c\u8bf7\u786e\u4fdd\u4e3a\u7ba1\u7406\u8005 agent \u5b9a\u4e49 <code>manager_llm</code> \u6216 <code>manager_agent</code>\u3002</p> <p><pre><code>from crewai import Crew\nfrom crewai.process import Process\nfrom langchain_openai import ChatOpenAI\n\n# \u793a\u4f8b\uff1a\u4f7f\u7528\u987a\u5e8f\u6d41\u7a0b\u521b\u5efa crew\ncrew = Crew(\n    agents=my_agents,\n    tasks=my_tasks,\n    process=Process.sequential\n)\n\n# \u793a\u4f8b\uff1a\u4f7f\u7528\u5206\u5c42\u6d41\u7a0b\u521b\u5efa crew\n# \u786e\u4fdd\u63d0\u4f9b manager_llm \u6216 manager_agent\ncrew = Crew(\n    agents=my_agents,\n    tasks=my_tasks,\n    process=Process.hierarchical,\n    manager_llm=ChatOpenAI(model=\"gpt-4\")\n    # \u6216\n    # manager_agent=my_manager_agent\n)\n</code></pre> \u6ce8\u610f\uff1a \u786e\u4fdd\u5728\u521b\u5efa <code>Crew</code> \u5bf9\u8c61\u4e4b\u524d\u5b9a\u4e49\u4e86 <code>my_agents</code> \u548c <code>my_tasks</code>\uff0c\u5e76\u4e14\u5bf9\u4e8e\u5206\u5c42\u6d41\u7a0b\uff0c\u8fd8\u9700\u8981 <code>manager_llm</code> \u6216 <code>manager_agent</code>\u3002</p>"},{"location":"core-concepts/Processes/#_4","title":"\u987a\u5e8f\u6d41\u7a0b","text":"<p>\u6b64\u65b9\u6cd5\u53cd\u6620\u4e86\u52a8\u6001\u56e2\u961f\u5de5\u4f5c\u6d41\u7a0b\uff0c\u4ee5\u5468\u5230\u4e14\u7cfb\u7edf\u7684\u65b9\u5f0f\u63a8\u8fdb\u4efb\u52a1\u3002\u4efb\u52a1\u6267\u884c\u9075\u5faa\u4efb\u52a1\u5217\u8868\u4e2d\u9884\u5b9a\u4e49\u7684\u987a\u5e8f\uff0c\u4e00\u4e2a\u4efb\u52a1\u7684\u8f93\u51fa\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u3002</p> <p>\u8981\u81ea\u5b9a\u4e49\u4efb\u52a1\u4e0a\u4e0b\u6587\uff0c\u8bf7\u4f7f\u7528 <code>Task</code> \u7c7b\u4e2d\u7684 <code>context</code> \u53c2\u6570\u6307\u5b9a\u5e94\u4f5c\u4e3a\u540e\u7eed\u4efb\u52a1\u4e0a\u4e0b\u6587\u7684\u8f93\u51fa\u3002</p>"},{"location":"core-concepts/Processes/#_5","title":"\u5206\u5c42\u6d41\u7a0b","text":"<p>\u6a21\u62df\u516c\u53f8\u5c42\u7ea7\u7ed3\u6784\uff0cCrewAI \u5141\u8bb8\u6307\u5b9a\u81ea\u5b9a\u4e49\u7ba1\u7406\u8005 agent \u6216\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\uff0c\u9700\u8981\u6307\u5b9a\u7ba1\u7406\u8005\u8bed\u8a00\u6a21\u578b (<code>manager_llm</code>)\u3002\u6b64 agent \u76d1\u7763\u4efb\u52a1\u6267\u884c\uff0c\u5305\u62ec\u8ba1\u5212\u3001\u59d4\u6d3e\u548c\u9a8c\u8bc1\u3002\u4efb\u52a1\u4e0d\u662f\u9884\u5148\u5206\u914d\u7684\uff1b\u7ba1\u7406\u8005\u6839\u636e agent \u7684\u80fd\u529b\u5206\u914d\u4efb\u52a1\uff0c\u5ba1\u67e5\u8f93\u51fa\u5e76\u8bc4\u4f30\u4efb\u52a1\u5b8c\u6210\u60c5\u51b5\u3002</p>"},{"location":"core-concepts/Processes/#_6","title":"\u6d41\u7a0b\u7c7b\uff1a\u8be6\u7ec6\u6982\u8ff0","text":"<p><code>Process</code> \u7c7b\u5b9e\u73b0\u4e3a\u679a\u4e3e (<code>Enum</code>)\uff0c\u786e\u4fdd\u7c7b\u578b\u5b89\u5168\u5e76\u5c06\u6d41\u7a0b\u503c\u9650\u5236\u4e3a\u5b9a\u4e49\u7684\u7c7b\u578b\uff08<code>sequential</code>\u3001<code>hierarchical</code>\uff09\u3002\u534f\u5546\u4e00\u81f4\u6d41\u7a0b\u8ba1\u5212\u5728\u672a\u6765\u7eb3\u5165\uff0c\u5f3a\u8c03\u6211\u4eec\u5bf9\u6301\u7eed\u53d1\u5c55\u548c\u521b\u65b0\u7684\u627f\u8bfa\u3002</p>"},{"location":"core-concepts/Processes/#_7","title":"\u5176\u4ed6\u4efb\u52a1\u529f\u80fd","text":"<ul> <li>\u5f02\u6b65\u6267\u884c: \u73b0\u5728\u53ef\u4ee5\u5f02\u6b65\u6267\u884c\u4efb\u52a1\uff0c\u4ece\u800c\u5b9e\u73b0\u5e76\u884c\u5904\u7406\u5e76\u63d0\u9ad8\u6548\u7387\u3002\u6b64\u529f\u80fd\u65e8\u5728\u4f7f\u4efb\u52a1\u80fd\u591f\u540c\u65f6\u6267\u884c\uff0c\u4ece\u800c\u63d0\u9ad8 crew \u7684\u6574\u4f53\u6548\u7387\u3002</li> <li>\u4eba\u5de5\u8f93\u5165\u5ba1\u67e5:  \u4e00\u9879\u53ef\u9009\u529f\u80fd\uff0c\u652f\u6301\u4eba\u5de5\u5ba1\u67e5\u4efb\u52a1\u8f93\u51fa\uff0c\u4ee5\u786e\u4fdd\u6700\u7ec8\u786e\u5b9a\u4e4b\u524d\u7684\u8d28\u91cf\u548c\u51c6\u786e\u6027\u3002\u6b64\u9644\u52a0\u6b65\u9aa4\u5f15\u5165\u4e86\u4e00\u5c42\u76d1\u7763\uff0c\u4e3a\u4eba\u5de5\u5e72\u9884\u548c\u9a8c\u8bc1\u63d0\u4f9b\u4e86\u673a\u4f1a\u3002</li> <li>\u8f93\u51fa\u81ea\u5b9a\u4e49: \u4efb\u52a1\u652f\u6301\u5404\u79cd\u8f93\u51fa\u683c\u5f0f\uff0c\u5305\u62ec JSON (<code>output_json</code>)\u3001Pydantic \u6a21\u578b (<code>output_pydantic</code>) \u548c\u6587\u4ef6\u8f93\u51fa (<code>output_file</code>)\uff0c\u4ece\u800c\u5728\u6355\u83b7\u548c\u5229\u7528\u4efb\u52a1\u7ed3\u679c\u65b9\u9762\u63d0\u4f9b\u7075\u6d3b\u6027\u3002\u8fd9\u5141\u8bb8\u5404\u79cd\u8f93\u51fa\u53ef\u80fd\u6027\uff0c\u4ee5\u6ee1\u8db3\u4e0d\u540c\u7684\u9700\u6c42\u548c\u8981\u6c42\u3002</li> </ul>"},{"location":"core-concepts/Processes/#_8","title":"\u7ed3\u8bba","text":"<p>CrewAI \u4e2d\u7684\u6d41\u7a0b\u4fc3\u8fdb\u4e86\u7ed3\u6784\u5316\u7684\u534f\u4f5c\uff0c\u8fd9\u5bf9\u4e8e\u5b9e\u73b0 agent \u4e4b\u95f4\u7684\u7cfb\u7edf\u56e2\u961f\u5408\u4f5c\u81f3\u5173\u91cd\u8981\u3002\u672c\u6587\u6863\u5df2\u66f4\u65b0\uff0c\u4ee5\u53cd\u6620\u6700\u65b0\u529f\u80fd\u3001\u589e\u5f3a\u529f\u80fd\u4ee5\u53ca\u8ba1\u5212\u96c6\u6210\u7684\u534f\u5546\u4e00\u81f4\u6d41\u7a0b\uff0c\u786e\u4fdd\u7528\u6237\u80fd\u591f\u8bbf\u95ee\u6700\u65b0\u548c\u6700\u5168\u9762\u7684\u4fe1\u606f\u3002</p>"},{"location":"core-concepts/Tasks/","title":"crewAI \u4efb\u52a1","text":""},{"location":"core-concepts/Tasks/#_1","title":"\u4efb\u52a1\u6982\u8ff0","text":"<p>\u4ec0\u4e48\u662f\u4efb\u52a1\uff1f</p> <p>\u5728 crewAI \u6846\u67b6\u4e2d\uff0c\u4efb\u52a1\u662f\u7531\u4ee3\u7406\u5b8c\u6210\u7684\u7279\u5b9a\u5206\u914d\u3002\u5b83\u4eec\u63d0\u4f9b\u4e86\u6267\u884c\u6240\u9700\u7684\u6240\u6709\u5fc5\u8981\u7ec6\u8282\uff0c\u4f8b\u5982\u63cf\u8ff0\u3001\u8d1f\u8d23\u7684\u4ee3\u7406\u3001\u6240\u9700\u7684\u5de5\u5177\u7b49\uff0c\u4ece\u800c\u7b80\u5316\u4e86\u5404\u79cd\u64cd\u4f5c\u7684\u590d\u6742\u6027\u3002</p> <p>crewAI \u4e2d\u7684\u4efb\u52a1\u53ef\u4ee5\u662f\u534f\u4f5c\u5f0f\u7684\uff0c\u9700\u8981\u591a\u4e2a\u4ee3\u7406\u534f\u540c\u5de5\u4f5c\u3002\u8fd9\u662f\u901a\u8fc7\u4efb\u52a1\u5c5e\u6027\u8fdb\u884c\u7ba1\u7406\uff0c\u5e76\u7531 Crew \u7684\u6d41\u7a0b\u8fdb\u884c\u534f\u8c03\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u56e2\u961f\u5408\u4f5c\u548c\u6548\u7387\u3002</p>"},{"location":"core-concepts/Tasks/#_2","title":"\u4efb\u52a1\u5c5e\u6027","text":"\u5c5e\u6027 \u53c2\u6570 \u63cf\u8ff0 \u63cf\u8ff0 <code>description</code> \u5bf9\u4efb\u52a1\u5185\u5bb9\u7684\u6e05\u6670\u7b80\u6d01\u7684\u9648\u8ff0\u3002 \u4ee3\u7406 <code>agent</code> \u8d1f\u8d23\u4efb\u52a1\u7684\u4ee3\u7406\uff0c\u53ef\u4ee5\u76f4\u63a5\u5206\u914d\uff0c\u4e5f\u53ef\u4ee5\u7531\u56e2\u961f\u6d41\u7a0b\u51b3\u5b9a\u3002 \u9884\u671f\u8f93\u51fa <code>expected_output</code> \u5bf9\u4efb\u52a1\u5b8c\u6210\u60c5\u51b5\u7684\u8be6\u7ec6\u63cf\u8ff0\u3002 \u5de5\u5177 (\u53ef\u9009) <code>tools</code> \u4ee3\u7406\u53ef\u4ee5\u7528\u6765\u6267\u884c\u4efb\u52a1\u7684\u529f\u80fd\u6216\u80fd\u529b\u3002 \u5f02\u6b65\u6267\u884c (\u53ef\u9009) <code>async_execution</code> \u5982\u679c\u8bbe\u7f6e\u4e86\uff0c\u5219\u4efb\u52a1\u5f02\u6b65\u6267\u884c\uff0c\u5141\u8bb8\u5728\u4e0d\u7b49\u5f85\u5b8c\u6210\u7684\u60c5\u51b5\u4e0b\u7ee7\u7eed\u8fdb\u884c\u3002 \u4e0a\u4e0b\u6587 (\u53ef\u9009) <code>context</code> \u6307\u5b9a\u5176\u8f93\u51fa\u7528\u4f5c\u6b64\u4efb\u52a1\u4e0a\u4e0b\u6587\u7684\u4efb\u52a1\u3002 \u914d\u7f6e (\u53ef\u9009) <code>config</code> \u7528\u4e8e\u6267\u884c\u4efb\u52a1\u7684\u4ee3\u7406\u7684\u5176\u4ed6\u914d\u7f6e\u8be6\u7ec6\u4fe1\u606f\uff0c\u5141\u8bb8\u8fdb\u4e00\u6b65\u81ea\u5b9a\u4e49\u3002 \u8f93\u51fa JSON (\u53ef\u9009) <code>output_json</code> \u8f93\u51fa\u4e00\u4e2a JSON \u5bf9\u8c61\uff0c\u9700\u8981\u4e00\u4e2a OpenAI \u5ba2\u6237\u7aef\u3002\u53ea\u80fd\u8bbe\u7f6e\u4e00\u79cd\u8f93\u51fa\u683c\u5f0f\u3002 \u8f93\u51fa Pydantic (\u53ef\u9009) <code>output_pydantic</code> \u8f93\u51fa\u4e00\u4e2a Pydantic \u6a21\u578b\u5bf9\u8c61\uff0c\u9700\u8981\u4e00\u4e2a OpenAI \u5ba2\u6237\u7aef\u3002\u53ea\u80fd\u8bbe\u7f6e\u4e00\u79cd\u8f93\u51fa\u683c\u5f0f\u3002 \u8f93\u51fa\u6587\u4ef6 (\u53ef\u9009) <code>output_file</code> \u5c06\u4efb\u52a1\u8f93\u51fa\u4fdd\u5b58\u5230\u6587\u4ef6\u3002\u5982\u679c\u4e0e <code>Output JSON</code> \u6216 <code>Output Pydantic</code> \u4e00\u8d77\u4f7f\u7528\uff0c\u5219\u6307\u5b9a\u5982\u4f55\u4fdd\u5b58\u8f93\u51fa\u3002 \u8f93\u51fa (\u53ef\u9009) <code>output</code> \u4efb\u52a1\u7684\u8f93\u51fa\uff0c\u5305\u542b\u539f\u59cb\u3001JSON \u548c Pydantic \u8f93\u51fa\u4ee5\u53ca\u5176\u4ed6\u8be6\u7ec6\u4fe1\u606f\u3002 \u56de\u8c03 (\u53ef\u9009) <code>callback</code> \u4e00\u4e2a Python \u53ef\u8c03\u7528\u5bf9\u8c61\uff0c\u5728\u4efb\u52a1\u5b8c\u6210\u540e\u4f7f\u7528\u4efb\u52a1\u7684\u8f93\u51fa\u6267\u884c\u3002 \u4eba\u5de5\u8f93\u5165 (\u53ef\u9009) <code>human_input</code> \u6307\u793a\u4efb\u52a1\u662f\u5426\u9700\u8981\u5728\u7ed3\u675f\u65f6\u8fdb\u884c\u4eba\u5de5\u53cd\u9988\uff0c\u8fd9\u5bf9\u4e8e\u9700\u8981\u4eba\u5de5\u76d1\u7763\u7684\u4efb\u52a1\u5f88\u6709\u7528\u3002"},{"location":"core-concepts/Tasks/#_3","title":"\u521b\u5efa\u4efb\u52a1","text":"<p>\u521b\u5efa\u4efb\u52a1\u6d89\u53ca\u5b9a\u4e49\u5176\u8303\u56f4\u3001\u8d1f\u8d23\u7684\u4ee3\u7406\u4ee5\u53ca\u4efb\u4f55\u989d\u5916\u7684\u5c5e\u6027\u4ee5\u63d0\u9ad8\u7075\u6d3b\u6027\uff1a</p> <pre><code>from crewai import Task\n\ntask = Task(\n    description='\u67e5\u627e\u5e76\u603b\u7ed3\u6709\u5173 AI \u7684\u6700\u65b0\u548c\u6700\u76f8\u5173\u7684\u65b0\u95fb',\n    agent=sales_agent,\n    expected_output='\u524d 5 \u540d\u6700\u91cd\u8981\u7684 AI \u65b0\u95fb\u7684\u9879\u76ee\u7b26\u53f7\u5217\u8868\u6458\u8981',\n)\n</code></pre> <p>\u4efb\u52a1\u5206\u914d</p> <p>\u76f4\u63a5\u6307\u5b9a\u8981\u5206\u914d\u7684 <code>agent</code>\uff0c\u6216\u8005\u8ba9 <code>hierarchical</code> crewAI \u7684\u6d41\u7a0b\u6839\u636e\u89d2\u8272\u3001\u53ef\u7528\u6027\u7b49\u6765\u51b3\u5b9a\u3002</p>"},{"location":"core-concepts/Tasks/#_4","title":"\u4efb\u52a1\u8f93\u51fa","text":"<p>\u4e86\u89e3\u4efb\u52a1\u8f93\u51fa</p> <p>crewAI \u6846\u67b6\u4e2d\u4efb\u52a1\u7684\u8f93\u51fa\u5c01\u88c5\u5728 <code>TaskOutput</code> \u7c7b\u4e2d\u3002\u6b64\u7c7b\u63d0\u4f9b\u4e86\u4e00\u79cd\u7ed3\u6784\u5316\u65b9\u5f0f\u6765\u8bbf\u95ee\u4efb\u52a1\u7684\u7ed3\u679c\uff0c\u5305\u62ec\u5404\u79cd\u683c\u5f0f\uff0c\u4f8b\u5982\u539f\u59cb\u5b57\u7b26\u4e32\u3001JSON \u548c Pydantic \u6a21\u578b\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>TaskOutput</code> \u5c06\u4ec5\u5305\u542b <code>raw</code> \u8f93\u51fa\u3002\u4ec5\u5f53\u539f\u59cb <code>Task</code> \u5bf9\u8c61\u914d\u7f6e\u4e86 <code>output_pydantic</code> \u6216 <code>output_json</code> \u65f6\uff0c<code>TaskOutput</code> \u624d\u4f1a\u5206\u522b\u5305\u542b <code>pydantic</code> \u6216 <code>json_dict</code> \u8f93\u51fa\u3002</p>"},{"location":"core-concepts/Tasks/#_5","title":"\u4efb\u52a1\u8f93\u51fa\u5c5e\u6027","text":"\u5c5e\u6027 \u53c2\u6570 \u7c7b\u578b \u63cf\u8ff0 \u63cf\u8ff0 <code>description</code> <code>str</code> \u4efb\u52a1\u7684\u7b80\u8981\u63cf\u8ff0\u3002 \u6458\u8981 <code>summary</code> <code>Optional[str]</code> \u4efb\u52a1\u7684\u7b80\u77ed\u6458\u8981\uff0c\u4ece\u63cf\u8ff0\u4e2d\u81ea\u52a8\u751f\u6210\u3002 \u539f\u59cb <code>raw</code> <code>str</code> \u4efb\u52a1\u7684\u539f\u59cb\u8f93\u51fa\u3002\u8fd9\u662f\u8f93\u51fa\u7684\u9ed8\u8ba4\u683c\u5f0f\u3002 Pydantic <code>pydantic</code> <code>Optional[BaseModel]</code> \u8868\u793a\u4efb\u52a1\u7ed3\u6784\u5316\u8f93\u51fa\u7684 Pydantic \u6a21\u578b\u5bf9\u8c61\u3002 JSON \u5b57\u5178 <code>json_dict</code> <code>Optional[Dict[str, Any]]</code> \u8868\u793a\u4efb\u52a1 JSON \u8f93\u51fa\u7684\u5b57\u5178\u3002 \u4ee3\u7406 <code>agent</code> <code>str</code> \u6267\u884c\u4efb\u52a1\u7684\u4ee3\u7406\u3002 \u8f93\u51fa\u683c\u5f0f <code>output_format</code> <code>OutputFormat</code> \u4efb\u52a1\u8f93\u51fa\u7684\u683c\u5f0f\uff0c\u9009\u9879\u5305\u62ec RAW\u3001JSON \u548c Pydantic\u3002\u9ed8\u8ba4\u4e3a RAW\u3002"},{"location":"core-concepts/Tasks/#_6","title":"\u4efb\u52a1\u8f93\u51fa\u65b9\u6cd5\u548c\u5c5e\u6027","text":"\u65b9\u6cd5/\u5c5e\u6027 \u63cf\u8ff0 json \u5982\u679c\u8f93\u51fa\u683c\u5f0f\u4e3a JSON\uff0c\u5219\u8fd4\u56de\u4efb\u52a1\u8f93\u51fa\u7684 JSON \u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\u3002 to_dict \u5c06 JSON \u548c Pydantic \u8f93\u51fa\u8f6c\u6362\u4e3a\u5b57\u5178\u3002 str \u8fd4\u56de\u4efb\u52a1\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\uff0c\u4f18\u5148\u7ea7\u4e3a Pydantic\uff0c\u7136\u540e\u662f JSON\uff0c\u7136\u540e\u662f\u539f\u59cb\u3002"},{"location":"core-concepts/Tasks/#_7","title":"\u8bbf\u95ee\u4efb\u52a1\u8f93\u51fa","text":"<p>\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>Task</code> \u5bf9\u8c61\u7684 <code>output</code> \u5c5e\u6027\u8bbf\u95ee\u5176\u8f93\u51fa\u3002<code>TaskOutput</code> \u7c7b\u63d0\u4f9b\u4e86\u591a\u79cd\u4e0e\u8f93\u51fa\u4ea4\u4e92\u548c\u5448\u73b0\u8f93\u51fa\u7684\u65b9\u5f0f\u3002</p>"},{"location":"core-concepts/Tasks/#_8","title":"\u793a\u4f8b","text":"<pre><code># \u793a\u4f8b\u4efb\u52a1\ntask = Task(\n    description='\u67e5\u627e\u5e76\u603b\u7ed3\u6700\u65b0\u7684 AI \u65b0\u95fb',\n    expected_output='\u524d 5 \u540d\u6700\u91cd\u8981\u7684 AI \u65b0\u95fb\u7684\u9879\u76ee\u7b26\u53f7\u5217\u8868\u6458\u8981',\n    agent=research_agent,\n    tools=[search_tool]\n)\n\n# \u6267\u884c\u56e2\u961f\ncrew = Crew(\n    agents=[research_agent],\n    tasks=[task],\n    verbose=2\n)\n\nresult = crew.kickoff()\n\n# \u8bbf\u95ee\u4efb\u52a1\u8f93\u51fa\ntask_output = task.output\n\nprint(f\"\u4efb\u52a1\u63cf\u8ff0: {task_output.description}\")\nprint(f\"\u4efb\u52a1\u6458\u8981: {task_output.summary}\")\nprint(f\"\u539f\u59cb\u8f93\u51fa: {task_output.raw}\")\nif task_output.json_dict:\n    print(f\"JSON \u8f93\u51fa: {json.dumps(task_output.json_dict, indent=2)}\")\nif task_output.pydantic:\n    print(f\"Pydantic \u8f93\u51fa: {task_output.pydantic}\")\n</code></pre>"},{"location":"core-concepts/Tasks/#_9","title":"\u5c06\u5de5\u5177\u4e0e\u4efb\u52a1\u96c6\u6210","text":"<p>\u5229\u7528 crewAI \u5de5\u5177\u5305 \u548c LangChain \u5de5\u5177 \u4e2d\u7684\u5de5\u5177\u6765\u589e\u5f3a\u4efb\u52a1\u6027\u80fd\u548c\u4ee3\u7406\u4ea4\u4e92\u3002</p>"},{"location":"core-concepts/Tasks/#_10","title":"\u4f7f\u7528\u5de5\u5177\u521b\u5efa\u4efb\u52a1","text":"<pre><code>import os\nos.environ[\"OPENAI_API_KEY\"] = \"\u60a8\u7684\u5bc6\u94a5\"\nos.environ[\"SERPER_API_KEY\"] = \"\u60a8\u7684\u5bc6\u94a5\" # serper.dev API \u5bc6\u94a5\n\nfrom crewai import Agent, Task, Crew\nfrom crewai_tools import SerperDevTool\n\nresearch_agent = Agent(\n  role='\u7814\u7a76\u5458',\n  goal='\u67e5\u627e\u5e76\u603b\u7ed3\u6700\u65b0\u7684 AI \u65b0\u95fb',\n  backstory=\"\"\"\u60a8\u662f\u4e00\u5bb6\u5927\u516c\u53f8\u7684\u7814\u7a76\u5458\u3002\n  \u60a8\u8d1f\u8d23\u5206\u6790\u6570\u636e\u5e76\u4e3a\u4f01\u4e1a\u63d0\u4f9b\u89c1\u89e3\u3002\"\"\",\n  verbose=True\n)\n\nsearch_tool = SerperDevTool()\n\ntask = Task(\n  description='\u67e5\u627e\u5e76\u603b\u7ed3\u6700\u65b0\u7684 AI \u65b0\u95fb',\n  expected_output='\u524d 5 \u540d\u6700\u91cd\u8981\u7684 AI \u65b0\u95fb\u7684\u9879\u76ee\u7b26\u53f7\u5217\u8868\u6458\u8981',\n  agent=research_agent,\n  tools=[search_tool]\n)\n\ncrew = Crew(\n    agents=[research_agent],\n    tasks=[task],\n    verbose=2\n)\n\nresult = crew.kickoff()\nprint(result)\n</code></pre> <p>\u8fd9\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u7279\u5b9a\u5de5\u5177\u7684\u4efb\u52a1\u53ef\u4ee5\u8986\u76d6\u4ee3\u7406\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4ee5\u8fdb\u884c\u5b9a\u5236\u7684\u4efb\u52a1\u6267\u884c\u3002</p>"},{"location":"core-concepts/Tasks/#_11","title":"\u5f15\u7528\u5176\u4ed6\u4efb\u52a1","text":"<p>\u5728 crewAI \u4e2d\uff0c\u4e00\u4e2a\u4efb\u52a1\u7684\u8f93\u51fa\u4f1a\u81ea\u52a8\u4f20\u9012\u5230\u4e0b\u4e00\u4e2a\u4efb\u52a1\u4e2d\uff0c\u4f46\u60a8\u53ef\u4ee5\u4e13\u95e8\u5b9a\u4e49\u54ea\u4e9b\u4efb\u52a1\u7684\u8f93\u51fa\uff08\u5305\u62ec\u591a\u4e2a\u4efb\u52a1\uff09\u5e94\u8be5\u7528\u4f5c\u53e6\u4e00\u4e2a\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u3002</p> <p>\u5f53\u60a8\u6709\u4e00\u4e2a\u4efb\u52a1\u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u4e0d\u662f\u7d27\u968f\u5176\u540e\u6267\u884c\u7684\u4efb\u52a1\u7684\u8f93\u51fa\u65f6\uff0c\u8fd9\u5f88\u6709\u7528\u3002\u8fd9\u662f\u901a\u8fc7\u4efb\u52a1\u7684 <code>context</code> \u5c5e\u6027\u5b8c\u6210\u7684\uff1a</p> <pre><code># ...\n\nresearch_ai_task = Task(\n    description='\u67e5\u627e\u5e76\u603b\u7ed3\u6700\u65b0\u7684 AI \u65b0\u95fb',\n    expected_output='\u524d 5 \u540d\u6700\u91cd\u8981\u7684 AI \u65b0\u95fb\u7684\u9879\u76ee\u7b26\u53f7\u5217\u8868\u6458\u8981',\n    async_execution=True,\n    agent=research_agent,\n    tools=[search_tool]\n)\n\nresearch_ops_task = Task(\n    description='\u67e5\u627e\u5e76\u603b\u7ed3\u6700\u65b0\u7684 AI Ops \u65b0\u95fb',\n    expected_output='\u524d 5 \u540d\u6700\u91cd\u8981\u7684 AI Ops \u65b0\u95fb\u7684\u9879\u76ee\u7b26\u53f7\u5217\u8868\u6458\u8981',\n    async_execution=True,\n    agent=research_agent,\n    tools=[search_tool]\n)\n\nwrite_blog_task = Task(\n    description=\"\u64b0\u5199\u4e00\u7bc7\u5173\u4e8e AI \u7684\u91cd\u8981\u6027\u53ca\u5176\u6700\u65b0\u65b0\u95fb\u7684\u5b8c\u6574\u535a\u5ba2\u6587\u7ae0\",\n    expected_output='4 \u6bb5\u957f\u7684\u5b8c\u6574\u535a\u5ba2\u6587\u7ae0',\n    agent=writer_agent,\n    context=[research_ai_task, research_ops_task]\n)\n\n#...\n</code></pre>"},{"location":"core-concepts/Tasks/#_12","title":"\u5f02\u6b65\u6267\u884c","text":"<p>\u60a8\u53ef\u4ee5\u5c06\u4efb\u52a1\u5b9a\u4e49\u4e3a\u5f02\u6b65\u6267\u884c\u3002\u8fd9\u610f\u5473\u7740\u56e2\u961f\u4e0d\u4f1a\u7b49\u5f85\u5b83\u5b8c\u6210\u5c31\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2a\u4efb\u52a1\u3002\u8fd9\u5bf9\u4e8e\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\u7684\u4efb\u52a1\u6216\u5bf9\u4e0b\u4e00\u4e2a\u8981\u6267\u884c\u7684\u4efb\u52a1\u4e0d\u91cd\u8981\u7684\u4efb\u52a1\u5f88\u6709\u7528\u3002</p> <p>\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 <code>context</code> \u5c5e\u6027\u5728\u672a\u6765\u7684\u4efb\u52a1\u4e2d\u5b9a\u4e49\u5b83\u5e94\u8be5\u7b49\u5f85\u5f02\u6b65\u4efb\u52a1\u7684\u8f93\u51fa\u5b8c\u6210\u3002</p> <pre><code>#...\n\nlist_ideas = Task(\n    description=\"\u5217\u51fa 5 \u4e2a\u5173\u4e8e AI \u6587\u7ae0\u7684\u6709\u8da3\u60f3\u6cd5\u3002\",\n    expected_output=\"5 \u4e2a\u6587\u7ae0\u60f3\u6cd5\u7684\u9879\u76ee\u7b26\u53f7\u5217\u8868\u3002\",\n    agent=researcher,\n    async_execution=True # \u5c06\u5f02\u6b65\u6267\u884c\n)\n\nlist_important_history = Task(\n    description=\"\u7814\u7a76 AI \u7684\u5386\u53f2\uff0c\u5e76\u544a\u8bc9\u6211 5 \u4e2a\u6700\u91cd\u8981\u7684\u4e8b\u4ef6\u3002\",\n    expected_output=\"5 \u4e2a\u91cd\u8981\u4e8b\u4ef6\u7684\u9879\u76ee\u7b26\u53f7\u5217\u8868\u3002\",\n    agent=researcher,\n    async_execution=True # \u5c06\u5f02\u6b65\u6267\u884c\n)\n\nwrite_article = Task(\n    description=\"\u64b0\u5199\u4e00\u7bc7\u5173\u4e8e AI \u53ca\u5176\u5386\u53f2\u548c\u6709\u8da3\u60f3\u6cd5\u7684\u6587\u7ae0\u3002\",\n    expected_output=\"\u4e00\u7bc7\u5173\u4e8e AI \u7684 4 \u6bb5\u6587\u7ae0\u3002\",\n    agent=writer,\n    context=[list_ideas, list_important_history] # \u5c06\u7b49\u5f85\u4e24\u4e2a\u4efb\u52a1\u7684\u8f93\u51fa\u5b8c\u6210\n)\n\n#...\n</code></pre>"},{"location":"core-concepts/Tasks/#_13","title":"\u56de\u8c03\u673a\u5236","text":"<p>\u56de\u8c03\u51fd\u6570\u5728\u4efb\u52a1\u5b8c\u6210\u540e\u6267\u884c\uff0c\u5141\u8bb8\u6839\u636e\u4efb\u52a1\u7684\u7ed3\u679c\u89e6\u53d1\u64cd\u4f5c\u6216\u901a\u77e5\u3002</p> <pre><code># ...\n\ndef callback_function(output: TaskOutput):\n    # \u4efb\u52a1\u5b8c\u6210\u540e\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\n    # \u4f8b\u5982\uff1a\u5411\u7ecf\u7406\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\n    print(f\"\"\"\n        \u4efb\u52a1\u5df2\u5b8c\u6210\uff01\n        \u4efb\u52a1: {output.description}\n        \u8f93\u51fa: {output.raw_output}\n    \"\"\")\n\nresearch_task = Task(\n    description='\u67e5\u627e\u5e76\u603b\u7ed3\u6700\u65b0\u7684 AI \u65b0\u95fb',\n    expected_output='\u524d 5 \u540d\u6700\u91cd\u8981\u7684 AI \u65b0\u95fb\u7684\u9879\u76ee\u7b26\u53f7\u5217\u8868\u6458\u8981',\n    agent=research_agent,\n    tools=[search_tool],\n    callback=callback_function\n)\n\n#...\n</code></pre>"},{"location":"core-concepts/Tasks/#_14","title":"\u8bbf\u95ee\u7279\u5b9a\u4efb\u52a1\u8f93\u51fa","text":"<p>\u56e2\u961f\u5b8c\u6210\u8fd0\u884c\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u52a1\u5bf9\u8c61\u7684 <code>output</code> \u5c5e\u6027\u8bbf\u95ee\u7279\u5b9a\u4efb\u52a1\u7684\u8f93\u51fa\uff1a</p> <pre><code># ...\ntask1 = Task(\n    description='\u67e5\u627e\u5e76\u603b\u7ed3\u6700\u65b0\u7684 AI \u65b0\u95fb',\n    expected_output='\u524d 5 \u540d\u6700\u91cd\u8981\u7684 AI \u65b0\u95fb\u7684\u9879\u76ee\u7b26\u53f7\u5217\u8868\u6458\u8981',\n    agent=research_agent,\n    tools=[search_tool]\n)\n\n#...\n\ncrew = Crew(\n    agents=[research_agent],\n    tasks=[task1, task2, task3],\n    verbose=2\n)\n\nresult = crew.kickoff()\n\n# \u8fd4\u56de\u4e00\u4e2a TaskOutput \u5bf9\u8c61\uff0c\u5176\u4e2d\u5305\u542b\u4efb\u52a1\u7684\u63cf\u8ff0\u548c\u7ed3\u679c\nprint(f\"\"\"\n    \u4efb\u52a1\u5df2\u5b8c\u6210\uff01\n    \u4efb\u52a1: {task1.output.description}\n    \u8f93\u51fa: {task1.output.raw_output}\n\"\"\")\n</code></pre>"},{"location":"core-concepts/Tasks/#_15","title":"\u5de5\u5177\u8986\u76d6\u673a\u5236","text":"<p>\u5728\u4efb\u52a1\u4e2d\u6307\u5b9a\u5de5\u5177\u5141\u8bb8\u52a8\u6001\u8c03\u6574\u4ee3\u7406\u529f\u80fd\uff0c\u5f3a\u8c03 CrewAI \u7684\u7075\u6d3b\u6027\u3002</p>"},{"location":"core-concepts/Tasks/#_16","title":"\u9519\u8bef\u5904\u7406\u548c\u9a8c\u8bc1\u673a\u5236","text":"<p>\u5728\u521b\u5efa\u548c\u6267\u884c\u4efb\u52a1\u65f6\uff0c\u4f1a\u91c7\u7528\u67d0\u4e9b\u9a8c\u8bc1\u673a\u5236\u6765\u786e\u4fdd\u4efb\u52a1\u5c5e\u6027\u7684\u5065\u58ee\u6027\u548c\u53ef\u9760\u6027\u3002\u8fd9\u4e9b\u673a\u5236\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a</p> <ul> <li>\u786e\u4fdd\u6bcf\u4e2a\u4efb\u52a1\u53ea\u8bbe\u7f6e\u4e00\u79cd\u8f93\u51fa\u7c7b\u578b\uff0c\u4ee5\u4fdd\u6301\u6e05\u6670\u7684\u8f93\u51fa\u9884\u671f\u3002</li> <li>\u9632\u6b62\u624b\u52a8\u5206\u914d <code>id</code> \u5c5e\u6027\uff0c\u4ee5\u7ef4\u62a4\u552f\u4e00\u6807\u8bc6\u7b26\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\u3002</li> </ul> <p>\u8fd9\u4e9b\u9a8c\u8bc1\u6709\u52a9\u4e8e\u7ef4\u62a4 crewAI \u6846\u67b6\u5185\u4efb\u52a1\u6267\u884c\u7684\u4e00\u81f4\u6027\u548c\u53ef\u9760\u6027\u3002</p>"},{"location":"core-concepts/Tasks/#_17","title":"\u4fdd\u5b58\u6587\u4ef6\u65f6\u521b\u5efa\u76ee\u5f55","text":"<p>\u60a8\u73b0\u5728\u53ef\u4ee5\u6307\u5b9a\u4efb\u52a1\u5728\u5c06\u5176\u8f93\u51fa\u4fdd\u5b58\u5230\u6587\u4ef6\u65f6\u662f\u5426\u5e94\u521b\u5efa\u76ee\u5f55\u3002\u8fd9\u5bf9\u4e8e\u7ec4\u7ec7\u8f93\u51fa\u548c\u786e\u4fdd\u6587\u4ef6\u8def\u5f84\u7ed3\u6784\u6b63\u786e\u7279\u522b\u6709\u7528\u3002</p> <pre><code># ...\n\nsave_output_task = Task(\n    description='\u5c06\u6c47\u603b\u7684 AI \u65b0\u95fb\u4fdd\u5b58\u5230\u6587\u4ef6',\n    expected_output='\u6587\u4ef6\u4fdd\u5b58\u6210\u529f',\n    agent=research_agent,\n    tools=[file_save_tool],\n    output_file='outputs/ai_news_summary.txt',\n    create_directory=True\n)\n\n#...\n</code></pre>"},{"location":"core-concepts/Tasks/#_18","title":"\u7ed3\u8bba","text":"<p>\u4efb\u52a1\u662f crewAI \u4e2d\u4ee3\u7406\u884c\u52a8\u7684\u9a71\u52a8\u529b\u3002\u901a\u8fc7\u6b63\u786e\u5b9a\u4e49\u4efb\u52a1\u53ca\u5176\u7ed3\u679c\uff0c\u60a8\u4e3a AI \u4ee3\u7406\u6709\u6548\u5730\u72ec\u7acb\u5de5\u4f5c\u6216\u4f5c\u4e3a\u534f\u4f5c\u5355\u5143\u5de5\u4f5c\u5960\u5b9a\u4e86\u57fa\u7840\u3002\u4e3a\u4efb\u52a1\u914d\u5907\u9002\u5f53\u7684\u5de5\u5177\u3001\u4e86\u89e3\u6267\u884c\u8fc7\u7a0b\u4ee5\u53ca\u9075\u5faa\u53ef\u9760\u7684\u9a8c\u8bc1\u5b9e\u8df5\u5bf9\u4e8e\u6700\u5927\u9650\u5ea6\u5730\u53d1\u6325 CrewAI \u7684\u6f5c\u529b\u81f3\u5173\u91cd\u8981\uff0c\u786e\u4fdd\u4ee3\u7406\u4e3a\u5176\u5206\u914d\u7684\u4efb\u52a1\u505a\u597d\u5145\u5206\u51c6\u5907\uff0c\u5e76\u6309\u9884\u671f\u6267\u884c\u4efb\u52a1\u3002</p>"},{"location":"core-concepts/Tools/","title":"crewAI \u5de5\u5177","text":""},{"location":"core-concepts/Tools/#_1","title":"\u7b80\u4ecb","text":"<p>crewAI \u5de5\u5177\u8d4b\u4e88 agent \u5404\u79cd\u80fd\u529b\uff0c\u4ece\u7f51\u7edc\u641c\u7d22\u548c\u6570\u636e\u5206\u6790\u5230\u534f\u4f5c\u4ee5\u53ca\u5728\u540c\u4e8b\u4e4b\u95f4\u59d4\u6d3e\u4efb\u52a1\u3002\u672c\u6587\u6863\u6982\u8ff0\u4e86\u5982\u4f55\u5728 crewAI \u6846\u67b6\u5185\u521b\u5efa\u3001\u96c6\u6210\u548c\u5229\u7528\u8fd9\u4e9b\u5de5\u5177\uff0c\u5305\u62ec\u5bf9\u534f\u4f5c\u5de5\u5177\u7684\u65b0\u5173\u6ce8\u3002</p>"},{"location":"core-concepts/Tools/#_2","title":"\u4ec0\u4e48\u662f\u5de5\u5177\uff1f","text":"<p>\u5b9a\u4e49</p> <p>crewAI \u4e2d\u7684\u5de5\u5177\u662f agent \u53ef\u4ee5\u5229\u7528\u7684\u6280\u80fd\u6216\u529f\u80fd\uff0c\u7528\u4e8e\u6267\u884c\u5404\u79cd\u64cd\u4f5c\u3002\u8fd9\u5305\u62ec\u6765\u81ea crewAI \u5de5\u5177\u5305 \u548c LangChain \u5de5\u5177 \u7684\u5de5\u5177\uff0c\u652f\u6301\u4ece\u7b80\u5355\u641c\u7d22\u5230\u590d\u6742\u4ea4\u4e92\u4ee5\u53ca agent \u4e4b\u95f4\u7684\u6709\u6548\u56e2\u961f\u5408\u4f5c\u3002</p>"},{"location":"core-concepts/Tools/#_3","title":"\u5de5\u5177\u7684\u4e3b\u8981\u7279\u70b9","text":"<ul> <li>\u5b9e\u7528\u6027: \u4e3a\u7f51\u7edc\u641c\u7d22\u3001\u6570\u636e\u5206\u6790\u3001\u5185\u5bb9\u751f\u6210\u548c agent \u534f\u4f5c\u7b49\u4efb\u52a1\u800c\u8bbe\u8ba1\u3002</li> <li>\u96c6\u6210: \u901a\u8fc7\u5c06\u5de5\u5177\u65e0\u7f1d\u96c6\u6210\u5230 agent \u7684\u5de5\u4f5c\u6d41\u7a0b\u4e2d\u6765\u589e\u5f3a\u5176\u80fd\u529b\u3002</li> <li>\u53ef\u5b9a\u5236\u6027: \u63d0\u4f9b\u5f00\u53d1\u81ea\u5b9a\u4e49\u5de5\u5177\u6216\u5229\u7528\u73b0\u6709\u5de5\u5177\u7684\u7075\u6d3b\u6027\uff0c\u4ee5\u6ee1\u8db3 agent \u7684\u7279\u5b9a\u9700\u6c42\u3002</li> <li>\u9519\u8bef\u5904\u7406:  \u7ed3\u5408\u4e86\u5f3a\u5927\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\uff0c\u4ee5\u786e\u4fdd\u5e73\u7a33\u8fd0\u884c\u3002</li> <li>\u7f13\u5b58\u673a\u5236:  \u5177\u6709\u667a\u80fd\u7f13\u5b58\u529f\u80fd\uff0c\u53ef\u4f18\u5316\u6027\u80fd\u5e76\u51cf\u5c11\u5197\u4f59\u64cd\u4f5c\u3002</li> </ul>"},{"location":"core-concepts/Tools/#crewai","title":"\u4f7f\u7528 crewAI \u5de5\u5177","text":"<p>\u8981\u4f7f\u7528 crewAI \u5de5\u5177\u589e\u5f3a\u60a8\u7684 agent \u7684\u80fd\u529b\uff0c\u8bf7\u5148\u5b89\u88c5\u6211\u4eec\u7684\u989d\u5916\u5de5\u5177\u5305\uff1a</p> <pre><code>pip install 'crewai[tools]'\n</code></pre> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u7684\u793a\u4f8b\uff1a</p> <pre><code>import os\nfrom crewai import Agent, Task, Crew\n# \u5bfc\u5165 crewAI \u5de5\u5177\nfrom crewai_tools import (\n    DirectoryReadTool,\n    FileReadTool,\n    SerperDevTool,\n    WebsiteSearchTool\n)\n\n# \u8bbe\u7f6e API \u5bc6\u94a5\nos.environ[\"SERPER_API_KEY\"] = \"\u60a8\u7684\u5bc6\u94a5\" # serper.dev API \u5bc6\u94a5\nos.environ[\"OPENAI_API_KEY\"] = \"\u60a8\u7684\u5bc6\u94a5\"\n\n# \u5b9e\u4f8b\u5316\u5de5\u5177\ndocs_tool = DirectoryReadTool(directory='./blog-posts')\nfile_tool = FileReadTool()\nsearch_tool = SerperDevTool()\nweb_rag_tool = WebsiteSearchTool()\n\n# \u521b\u5efa agent\nresearcher = Agent(\n    role='\u5e02\u573a\u7814\u7a76\u5206\u6790\u5e08',\n    goal='\u63d0\u4f9b\u6700\u65b0\u7684 AI \u884c\u4e1a\u5e02\u573a\u5206\u6790',\n    backstory='\u4e00\u4f4d\u5bf9\u5e02\u573a\u8d8b\u52bf\u6709\u654f\u9510\u6d1e\u5bdf\u529b\u7684\u4e13\u5bb6\u5206\u6790\u5e08\u3002',\n    tools=[search_tool, web_rag_tool],\n    verbose=True\n)\n\nwriter = Agent(\n    role='\u5185\u5bb9\u64b0\u7a3f\u4eba',\n    goal='\u64b0\u5199\u6709\u5173 AI \u884c\u4e1a\u7684\u5f15\u4eba\u5165\u80dc\u7684\u535a\u5ba2\u6587\u7ae0',\n    backstory='\u4e00\u4f4d\u70ed\u7231\u6280\u672f\u7684\u719f\u7ec3\u4f5c\u5bb6\u3002',\n    tools=[docs_tool, file_tool],\n    verbose=True\n)\n\n# \u5b9a\u4e49\u4efb\u52a1\nresearch = Task(\n    description='\u7814\u7a76 AI \u884c\u4e1a\u7684\u6700\u65b0\u8d8b\u52bf\u5e76\u63d0\u4f9b\u6458\u8981\u3002',\n    expected_output='\u5bf9 AI \u884c\u4e1a\u6392\u540d\u524d 3 \u4f4d\u7684\u8d8b\u52bf\u53d1\u5c55\u8fdb\u884c\u603b\u7ed3\uff0c\u5e76\u5bf9\u5176\u610f\u4e49\u63d0\u51fa\u72ec\u7279\u7684\u89c1\u89e3\u3002',\n    agent=researcher\n)\n\nwrite = Task(\n    description='\u6839\u636e\u7814\u7a76\u5206\u6790\u5e08\u7684\u6458\u8981\uff0c\u64b0\u5199\u4e00\u7bc7\u5173\u4e8e AI \u884c\u4e1a\u7684\u5f15\u4eba\u5165\u80dc\u7684\u535a\u5ba2\u6587\u7ae0\u3002\u4ece\u76ee\u5f55\u4e2d\u6700\u65b0\u535a\u5ba2\u6587\u7ae0\u4e2d\u6c72\u53d6\u7075\u611f\u3002',\n    expected_output='\u4e00\u7bc7 4 \u6bb5\u5f0f\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u91c7\u7528 markdown \u683c\u5f0f\uff0c\u5185\u5bb9\u5f15\u4eba\u5165\u80dc\u3001\u4fe1\u606f\u4e30\u5bcc\u4e14\u901a\u4fd7\u6613\u61c2\uff0c\u907f\u514d\u4f7f\u7528\u590d\u6742\u7684\u672f\u8bed\u3002',\n    agent=writer,\n    output_file='blog-posts/new_post.md'  # \u6700\u7ec8\u7684\u535a\u5ba2\u6587\u7ae0\u5c06\u4fdd\u5b58\u5728\u6b64\u5904\n)\n\n# \u7ec4\u5efa crew\ncrew = Crew(\n    agents=[researcher, writer],\n    tasks=[research, write],\n    verbose=2\n)\n\n# \u6267\u884c\u4efb\u52a1\ncrew.kickoff()\n</code></pre>"},{"location":"core-concepts/Tools/#crewai_1","title":"\u53ef\u7528\u7684 crewAI \u5de5\u5177","text":"<ul> <li>\u9519\u8bef\u5904\u7406: \u6240\u6709\u5de5\u5177\u90fd\u5185\u7f6e\u4e86\u9519\u8bef\u5904\u7406\u529f\u80fd\uff0c\u5141\u8bb8 agent \u4f18\u96c5\u5730\u7ba1\u7406\u5f02\u5e38\u5e76\u7ee7\u7eed\u6267\u884c\u4efb\u52a1\u3002</li> <li>\u7f13\u5b58\u673a\u5236: \u6240\u6709\u5de5\u5177\u90fd\u652f\u6301\u7f13\u5b58\uff0c\u4f7f agent \u80fd\u591f\u6709\u6548\u5730\u91cd\u7528\u4ee5\u524d\u83b7\u5f97\u7684\u7ed3\u679c\uff0c\u4ece\u800c\u51cf\u5c11\u5916\u90e8\u8d44\u6e90\u7684\u8d1f\u8f7d\u5e76\u52a0\u5feb\u6267\u884c\u65f6\u95f4\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5de5\u5177\u4e0a\u7684 <code>cache_function</code> \u5c5e\u6027\u5bf9\u7f13\u5b58\u673a\u5236\u8fdb\u884c\u66f4\u7cbe\u7ec6\u7684\u63a7\u5236\u3002</li> </ul> <p>\u4ee5\u4e0b\u662f\u53ef\u7528\u5de5\u5177\u53ca\u5176\u63cf\u8ff0\u7684\u5217\u8868\uff1a</p> \u5de5\u5177 \u63cf\u8ff0 BrowserbaseLoadTool \u7528\u4e8e\u4e0e\u7f51\u7edc\u6d4f\u89c8\u5668\u4ea4\u4e92\u548c\u4ece\u4e2d\u63d0\u53d6\u6570\u636e\u7684\u5de5\u5177\u3002 CodeDocsSearchTool \u9488\u5bf9\u641c\u7d22\u4ee3\u7801\u6587\u6863\u548c\u76f8\u5173\u6280\u672f\u6587\u6863\u8fdb\u884c\u4e86\u4f18\u5316\u7684 RAG \u5de5\u5177\u3002 CodeInterpreterTool \u7528\u4e8e\u89e3\u91ca Python \u4ee3\u7801\u7684\u5de5\u5177\u3002 ComposioTool \u652f\u6301\u4f7f\u7528 Composio \u5de5\u5177\u3002 CSVSearchTool \u4e13\u4e3a\u5728 CSV \u6587\u4ef6\u4e2d\u641c\u7d22\u800c\u8bbe\u8ba1\u7684 RAG \u5de5\u5177\uff0c\u4e13\u4e3a\u5904\u7406\u7ed3\u6784\u5316\u6570\u636e\u800c\u5b9a\u5236\u3002 DirectorySearchTool \u7528\u4e8e\u5728\u76ee\u5f55\u4e2d\u641c\u7d22\u7684 RAG \u5de5\u5177\uff0c\u53ef\u7528\u4e8e\u6d4f\u89c8\u6587\u4ef6\u7cfb\u7edf\u3002 DOCXSearchTool \u65e8\u5728\u5728 DOCX \u6587\u6863\u4e2d\u641c\u7d22\u7684 RAG \u5de5\u5177\uff0c\u975e\u5e38\u9002\u5408\u5904\u7406 Word \u6587\u4ef6\u3002 DirectoryReadTool \u4fc3\u8fdb\u5bf9\u76ee\u5f55\u7ed3\u6784\u53ca\u5176\u5185\u5bb9\u7684\u8bfb\u53d6\u548c\u5904\u7406\u3002 EXASearchTool \u4e13\u4e3a\u8de8\u5404\u79cd\u6570\u636e\u6e90\u6267\u884c\u8be6\u5c3d\u641c\u7d22\u800c\u8bbe\u8ba1\u7684\u5de5\u5177\u3002 FileReadTool \u652f\u6301\u8bfb\u53d6\u5404\u79cd\u6587\u4ef6\u683c\u5f0f\u5e76\u4ece\u4e2d\u63d0\u53d6\u6570\u636e\u3002 FirecrawlSearchTool \u4f7f\u7528 Firecrawl \u641c\u7d22\u7f51\u9875\u5e76\u8fd4\u56de\u7ed3\u679c\u7684\u5de5\u5177\u3002 FirecrawlCrawlWebsiteTool \u4f7f\u7528 Firecrawl \u6293\u53d6\u7f51\u9875\u7684\u5de5\u5177\u3002 FirecrawlScrapeWebsiteTool \u4f7f\u7528 Firecrawl \u6293\u53d6\u7f51\u9875 url \u5e76\u8fd4\u56de\u5176\u5185\u5bb9\u7684\u5de5\u5177\u3002 GithubSearchTool \u7528\u4e8e\u5728 GitHub \u5b58\u50a8\u5e93\u4e2d\u641c\u7d22\u7684 RAG \u5de5\u5177\uff0c\u53ef\u7528\u4e8e\u4ee3\u7801\u548c\u6587\u6863\u641c\u7d22\u3002 SerperDevTool \u7528\u4e8e\u5f00\u53d1\u76ee\u7684\u7684\u4e13\u7528\u5de5\u5177\uff0c\u5177\u6709\u6b63\u5728\u5f00\u53d1\u7684\u7279\u5b9a\u529f\u80fd\u3002 TXTSearchTool \u4e13\u6ce8\u4e8e\u5728\u6587\u672c (.txt) \u6587\u4ef6\u4e2d\u641c\u7d22\u7684 RAG \u5de5\u5177\uff0c\u9002\u7528\u4e8e\u975e\u7ed3\u6784\u5316\u6570\u636e\u3002 JSONSearchTool \u4e13\u4e3a\u5728 JSON \u6587\u4ef6\u4e2d\u641c\u7d22\u800c\u8bbe\u8ba1\u7684 RAG \u5de5\u5177\uff0c\u9002\u7528\u4e8e\u7ed3\u6784\u5316\u6570\u636e\u5904\u7406\u3002 LlamaIndexTool \u652f\u6301\u4f7f\u7528 LlamaIndex \u5de5\u5177\u3002 MDXSearchTool \u4e13\u4e3a\u5728 Markdown (MDX) \u6587\u4ef6\u4e2d\u641c\u7d22\u800c\u5b9a\u5236\u7684 RAG \u5de5\u5177\uff0c\u9002\u7528\u4e8e\u6587\u6863\u3002 PDFSearchTool \u65e8\u5728\u5728 PDF \u6587\u6863\u4e2d\u641c\u7d22\u7684 RAG \u5de5\u5177\uff0c\u975e\u5e38\u9002\u5408\u5904\u7406\u626b\u63cf\u6587\u6863\u3002 PGSearchTool \u9488\u5bf9\u5728 PostgreSQL \u6570\u636e\u5e93\u4e2d\u641c\u7d22\u8fdb\u884c\u4e86\u4f18\u5316\u7684 RAG \u5de5\u5177\uff0c\u9002\u7528\u4e8e\u6570\u636e\u5e93\u67e5\u8be2\u3002 RagTool \u80fd\u591f\u5904\u7406\u5404\u79cd\u6570\u636e\u6e90\u548c\u7c7b\u578b\u7684\u901a\u7528 RAG \u5de5\u5177\u3002 ScrapeElementFromWebsiteTool \u652f\u6301\u4ece\u7f51\u7ad9\u6293\u53d6\u7279\u5b9a\u5143\u7d20\uff0c\u9002\u7528\u4e8e\u5b9a\u5411\u6570\u636e\u63d0\u53d6\u3002 ScrapeWebsiteTool \u4fc3\u8fdb\u6293\u53d6\u6574\u4e2a\u7f51\u7ad9\uff0c\u975e\u5e38\u9002\u5408\u5168\u9762\u6536\u96c6\u6570\u636e\u3002 WebsiteSearchTool \u7528\u4e8e\u641c\u7d22\u7f51\u7ad9\u5185\u5bb9\u7684 RAG \u5de5\u5177\uff0c\u9488\u5bf9\u7f51\u7edc\u6570\u636e\u63d0\u53d6\u8fdb\u884c\u4e86\u4f18\u5316\u3002 XMLSearchTool \u4e13\u4e3a\u5728 XML \u6587\u4ef6\u4e2d\u641c\u7d22\u800c\u8bbe\u8ba1\u7684 RAG \u5de5\u5177\uff0c\u9002\u7528\u4e8e\u7ed3\u6784\u5316\u6570\u636e\u683c\u5f0f\u3002 YoutubeChannelSearchTool \u7528\u4e8e\u5728 YouTube \u9891\u9053\u4e2d\u641c\u7d22\u7684 RAG \u5de5\u5177\uff0c\u9002\u7528\u4e8e\u89c6\u9891\u5185\u5bb9\u5206\u6790\u3002 YoutubeVideoSearchTool \u65e8\u5728\u5728 YouTube \u89c6\u9891\u4e2d\u641c\u7d22\u7684 RAG \u5de5\u5177\uff0c\u975e\u5e38\u9002\u5408\u89c6\u9891\u6570\u636e\u63d0\u53d6\u3002"},{"location":"core-concepts/Tools/#_4","title":"\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u5de5\u5177","text":"<p>\u81ea\u5b9a\u4e49\u5de5\u5177\u521b\u5efa</p> <p>\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u6839\u636e\u5176 agent \u7684\u9700\u6c42\u5b9a\u5236\u5de5\u5177\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528\u9884\u5148\u6784\u5efa\u7684\u9009\u9879\uff1a</p> <p>\u8981\u521b\u5efa\u60a8\u81ea\u5df1\u7684 crewAI \u5de5\u5177\uff0c\u60a8\u9700\u8981\u5b89\u88c5\u6211\u4eec\u7684\u989d\u5916\u5de5\u5177\u5305\uff1a</p> <pre><code>pip install 'crewai[tools]'\n</code></pre> <p>\u5b8c\u6210\u6b64\u64cd\u4f5c\u540e\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u4e3b\u8981\u65b9\u5f0f\u521b\u5efa crewAI \u5de5\u5177\uff1a</p>"},{"location":"core-concepts/Tools/#basetool","title":"\u5b50\u7c7b\u5316 <code>BaseTool</code>","text":"<pre><code>from crewai_tools import BaseTool\n\nclass MyCustomTool(BaseTool):\n    name: str = \"\u6211\u7684\u5de5\u5177\u7684\u540d\u79f0\"\n    description: str = \"\u6e05\u695a\u5730\u63cf\u8ff0\u6b64\u5de5\u5177\u7684\u7528\u9014\uff0c\u60a8\u7684 agent \u5c06\u9700\u8981\u6b64\u4fe1\u606f\u624d\u80fd\u4f7f\u7528\u5b83\u3002\"\n\n    def _run(self, argument: str) -&gt; str:\n        # \u5b9e\u73b0\u4ee3\u7801\u5728\u6b64\u5904\n        return \"\u81ea\u5b9a\u4e49\u5de5\u5177\u7684\u7ed3\u679c\"\n</code></pre>"},{"location":"core-concepts/Tools/#tool","title":"\u5229\u7528 <code>tool</code> \u88c5\u9970\u5668","text":"<pre><code>from crewai_tools import tool\n@tool(\"\u6211\u7684\u5de5\u5177\u7684\u540d\u79f0\")\ndef my_tool(question: str) -&gt; str:\n    \"\"\"\u6e05\u695a\u5730\u63cf\u8ff0\u6b64\u5de5\u5177\u7684\u7528\u9014\uff0c\u60a8\u7684 agent \u5c06\u9700\u8981\u6b64\u4fe1\u606f\u624d\u80fd\u4f7f\u7528\u5b83\u3002\"\"\"\n    # \u51fd\u6570\u903b\u8f91\u5728\u6b64\u5904\n    return \"\u60a8\u7684\u81ea\u5b9a\u4e49\u5de5\u5177\u7684\u7ed3\u679c\"\n</code></pre>"},{"location":"core-concepts/Tools/#_5","title":"\u81ea\u5b9a\u4e49\u7f13\u5b58\u673a\u5236","text":"<p>\u7f13\u5b58</p> <p>\u5de5\u5177\u53ef\u4ee5\u9009\u62e9\u5b9e\u73b0 <code>cache_function</code> \u4ee5\u5fae\u8c03\u7f13\u5b58\u884c\u4e3a\u3002\u6b64\u51fd\u6570\u6839\u636e\u7279\u5b9a\u6761\u4ef6\u786e\u5b9a\u4f55\u65f6\u7f13\u5b58\u7ed3\u679c\uff0c\u4ece\u800c\u63d0\u4f9b\u5bf9\u7f13\u5b58\u903b\u8f91\u7684\u7cbe\u7ec6\u63a7\u5236\u3002</p> <pre><code>from crewai_tools import tool\n\n@tool\ndef multiplication_tool(first_number: int, second_number: int) -&gt; str:\n    \"\"\"\u5f53\u60a8\u9700\u8981\u5c06\u4e24\u4e2a\u6570\u5b57\u76f8\u4e58\u65f6\u5f88\u6709\u7528\u3002\"\"\"\n    return first_number * second_number\n\ndef cache_func(args, result):\n    # \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4ec5\u5728\u7ed3\u679c\u662f 2 \u7684\u500d\u6570\u65f6\u624d\u7f13\u5b58\u7ed3\u679c\n    cache = result % 2 == 0\n    return cache\n\nmultiplication_tool.cache_function = cache_func\n\nwriter1 = Agent(\n        role=\"\u4f5c\u5bb6\",\n        goal=\"\u60a8\u4e3a\u5b69\u5b50\u4eec\u7f16\u5199\u6570\u5b66\u8bfe\u672c\u3002\",\n        backstory=\"\u60a8\u662f\u5199\u4f5c\u4e13\u5bb6\uff0c\u5e76\u4e14\u559c\u6b22\u6559\u5b69\u5b50\u4eec\uff0c\u4f46\u60a8\u5bf9\u6570\u5b66\u4e00\u65e0\u6240\u77e5\u3002\",\n        tools=[multiplication_tool],\n        allow_delegation=False,\n    )\n    #...\n</code></pre>"},{"location":"core-concepts/Tools/#_6","title":"\u7ed3\u8bba","text":"<p>\u5de5\u5177\u5bf9\u4e8e\u6269\u5c55 crewAI agent \u7684\u80fd\u529b\u81f3\u5173\u91cd\u8981\uff0c\u4f7f\u5b83\u4eec\u80fd\u591f\u627f\u62c5\u5e7f\u6cdb\u7684\u4efb\u52a1\u5e76\u6709\u6548\u5730\u534f\u4f5c\u3002\u4f7f\u7528 crewAI \u6784\u5efa\u89e3\u51b3\u65b9\u6848\u65f6\uff0c\u8bf7\u5229\u7528\u81ea\u5b9a\u4e49\u5de5\u5177\u548c\u73b0\u6709\u5de5\u5177\u6765\u589e\u5f3a\u60a8\u7684 agent \u7684\u80fd\u529b\u5e76\u589e\u5f3a AI \u751f\u6001\u7cfb\u7edf\u3002\u8003\u8651\u5229\u7528\u9519\u8bef\u5904\u7406\u3001\u7f13\u5b58\u673a\u5236\u548c\u5de5\u5177\u53c2\u6570\u7684\u7075\u6d3b\u6027\u6765\u4f18\u5316 agent \u7684\u6027\u80fd\u548c\u80fd\u529b\u3002</p>"},{"location":"core-concepts/Training-Crew/","title":"crewAI \u8bad\u7ec3","text":""},{"location":"core-concepts/Training-Crew/#_1","title":"\u7b80\u4ecb","text":"<p>CrewAI \u4e2d\u7684\u8bad\u7ec3\u529f\u80fd\u5141\u8bb8\u60a8\u4f7f\u7528\u547d\u4ee4\u884c\u754c\u9762 (CLI) \u8bad\u7ec3\u60a8\u7684 AI \u4ee3\u7406\u3002\u901a\u8fc7\u8fd0\u884c\u547d\u4ee4 <code>crewai train -n &lt;n_iterations&gt;</code>\uff0c\u60a8\u53ef\u4ee5\u6307\u5b9a\u8bad\u7ec3\u8fc7\u7a0b\u7684\u8fed\u4ee3\u6b21\u6570\u3002</p> <p>\u5728\u8bad\u7ec3\u671f\u95f4\uff0cCrewAI \u5229\u7528\u5404\u79cd\u6280\u672f\u6765\u4f18\u5316\u60a8\u7684\u4ee3\u7406\u7684\u6027\u80fd\u4ee5\u53ca\u4eba\u7c7b\u53cd\u9988\u3002\u8fd9\u6709\u52a9\u4e8e\u4ee3\u7406\u63d0\u9ad8\u4ed6\u4eec\u7684\u7406\u89e3\u529b\u3001\u51b3\u7b56\u80fd\u529b\u548c\u89e3\u51b3\u95ee\u9898\u7684\u80fd\u529b\u3002</p>"},{"location":"core-concepts/Training-Crew/#cli-crew","title":"\u4f7f\u7528 CLI \u8bad\u7ec3\u60a8\u7684 Crew","text":"<p>\u8981\u4f7f\u7528\u8bad\u7ec3\u529f\u80fd\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a</p> <ol> <li>\u6253\u5f00\u60a8\u7684\u7ec8\u7aef\u6216\u547d\u4ee4\u63d0\u793a\u7b26\u3002</li> <li>\u5bfc\u822a\u5230\u60a8\u7684 CrewAI \u9879\u76ee\u6240\u5728\u7684\u76ee\u5f55\u3002</li> <li>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</li> </ol> <pre><code>crewai train -n &lt;n_iterations&gt;\n</code></pre>"},{"location":"core-concepts/Training-Crew/#crew","title":"\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u8bad\u7ec3\u60a8\u7684 Crew","text":"<p>\u8981\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u8bad\u7ec3\u60a8\u7684 crew\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li>\u5b9a\u4e49\u8bad\u7ec3\u7684\u8fed\u4ee3\u6b21\u6570\u3002</li> <li>\u6307\u5b9a\u8bad\u7ec3\u8fc7\u7a0b\u7684\u8f93\u5165\u53c2\u6570\u3002</li> <li>\u5728 try-except \u5757\u4e2d\u6267\u884c\u8bad\u7ec3\u547d\u4ee4\u4ee5\u5904\u7406\u6f5c\u5728\u7684\u9519\u8bef\u3002</li> </ol> <pre><code>    n_iterations = 2\n    inputs = {\"topic\": \"CrewAI Training\"}\n\n    try:\n        YourCrewName_Crew().crew().train(n_iterations= n_iterations, inputs=inputs)\n\n    except Exception as e:\n        raise Exception(f\"An error occurred while training the crew: {e}\")\n</code></pre> <p>\u5c06 <code>&lt;n_iterations&gt;</code> \u66ff\u6362\u4e3a\u6240\u9700\u7684\u8bad\u7ec3\u8fed\u4ee3\u6b21\u6570\u3002\u8fd9\u51b3\u5b9a\u4e86\u4ee3\u7406\u5c06\u7ecf\u5386\u591a\u5c11\u6b21\u8bad\u7ec3\u8fc7\u7a0b\u3002</p>"},{"location":"core-concepts/Training-Crew/#_2","title":"\u9700\u8981\u6ce8\u610f\u7684\u5173\u952e\u70b9\uff1a","text":"<ul> <li>\u6b63\u6574\u6570\u8981\u6c42\uff1a \u786e\u4fdd\u8fed\u4ee3\u6b21\u6570 (<code>n_iterations</code>) \u662f\u4e00\u4e2a\u6b63\u6574\u6570\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\u6b64\u6761\u4ef6\uff0c\u4ee3\u7801\u5c06\u5f15\u53d1 <code>ValueError</code>\u3002</li> <li>\u9519\u8bef\u5904\u7406\uff1a \u4ee3\u7801\u5904\u7406\u5b50\u8fdb\u7a0b\u9519\u8bef\u548c\u610f\u5916\u5f02\u5e38\uff0c\u5411\u7528\u6237\u63d0\u4f9b\u9519\u8bef\u6d88\u606f\u3002</li> </ul> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8bad\u7ec3\u8fc7\u7a0b\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u7684\u4ee3\u7406\u7684\u590d\u6742\u6027\uff0c\u5e76\u4e14\u8fd8\u9700\u8981\u60a8\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u63d0\u4f9b\u53cd\u9988\u3002</p> <p>\u8bad\u7ec3\u5b8c\u6210\u540e\uff0c\u60a8\u7684\u4ee3\u7406\u5c06\u5177\u5907\u589e\u5f3a\u7684\u80fd\u529b\u548c\u77e5\u8bc6\uff0c\u51c6\u5907\u597d\u5e94\u5bf9\u590d\u6742\u7684\u4efb\u52a1\u5e76\u63d0\u4f9b\u66f4\u52a0\u4e00\u81f4\u548c\u6709\u4ef7\u503c\u7684\u89c1\u89e3\u3002</p> <p>\u8bf7\u8bb0\u4f4f\u5b9a\u671f\u66f4\u65b0\u548c\u91cd\u65b0\u8bad\u7ec3\u60a8\u7684\u4ee3\u7406\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u4e0e\u8be5\u9886\u57df\u7684\u6700\u65b0\u4fe1\u606f\u548c\u8fdb\u6b65\u4fdd\u6301\u540c\u6b65\u3002</p> <p>\u795d\u60a8\u5728 CrewAI \u4e2d\u8bad\u7ec3\u6109\u5feb\uff01</p>"},{"location":"core-concepts/Using-LangChain-Tools/","title":"\u4f7f\u7528 LangChain \u5de5\u5177","text":""},{"location":"core-concepts/Using-LangChain-Tools/#langchain","title":"\u4f7f\u7528 LangChain \u5de5\u5177","text":"<p>LangChain \u96c6\u6210</p> <p>CrewAI \u4e0e LangChain \u7528\u4e8e\u57fa\u4e8e\u641c\u7d22\u7684\u67e5\u8be2\u7b49\u7684\u7efc\u5408\u5de5\u5177\u5305\u65e0\u7f1d\u96c6\u6210\uff0c\u4ee5\u4e0b\u662f Langchain \u63d0\u4f9b\u7684\u53ef\u7528\u5185\u7f6e\u5de5\u5177 LangChain \u5de5\u5177\u5305</p> <pre><code>from crewai import Agent\nfrom langchain.agents import Tool\nfrom langchain.utilities import GoogleSerperAPIWrapper\n\n# \u8bbe\u7f6e API \u5bc6\u94a5\nos.environ[\"SERPER_API_KEY\"] = \"\u60a8\u7684\u5bc6\u94a5\"\n\nsearch = GoogleSerperAPIWrapper()\n\n# \u521b\u5efa\u641c\u7d22\u5de5\u5177\u5e76\u5c06\u5176\u5206\u914d\u7ed9\u4ee3\u7406\nserper_tool = Tool(\n  name=\"\u4e2d\u95f4\u7b54\u6848\",\n  func=search.run,\n  description=\"\u5bf9\u57fa\u4e8e\u641c\u7d22\u7684\u67e5\u8be2\u5f88\u6709\u7528\",\n)\n\nagent = Agent(\n  role='\u7814\u7a76\u5206\u6790\u5e08',\n  goal='\u63d0\u4f9b\u6700\u65b0\u7684\u5e02\u573a\u5206\u6790',\n  backstory='\u4e00\u4f4d\u5bf9\u5e02\u573a\u8d8b\u52bf\u6709\u654f\u9510\u773c\u5149\u7684\u4e13\u5bb6\u5206\u6790\u5e08\u3002',\n  tools=[serper_tool]\n)\n\n# \u4ee3\u7801\u7684\u5176\u4f59\u90e8\u5206...\n</code></pre>"},{"location":"core-concepts/Using-LangChain-Tools/#_1","title":"\u7ed3\u8bba","text":"<p>\u5de5\u5177\u5bf9\u4e8e\u6269\u5c55 CrewAI \u4ee3\u7406\u7684\u529f\u80fd\u81f3\u5173\u91cd\u8981\uff0c\u4f7f\u5176\u80fd\u591f\u6267\u884c\u5e7f\u6cdb\u7684\u4efb\u52a1\u5e76\u6709\u6548\u534f\u4f5c\u3002\u5728\u4f7f\u7528 CrewAI \u6784\u5efa\u89e3\u51b3\u65b9\u6848\u65f6\uff0c\u8bf7\u5229\u7528\u81ea\u5b9a\u4e49\u5de5\u5177\u548c\u73b0\u6709\u5de5\u5177\u6765\u589e\u5f3a\u60a8\u7684\u4ee3\u7406\u5e76\u589e\u5f3a AI \u751f\u6001\u7cfb\u7edf\u3002\u8003\u8651\u5229\u7528\u9519\u8bef\u5904\u7406\u3001\u7f13\u5b58\u673a\u5236\u548c\u5de5\u5177\u53c2\u6570\u7684\u7075\u6d3b\u6027\u6765\u4f18\u5316\u60a8\u7684\u4ee3\u7406\u7684\u6027\u80fd\u548c\u529f\u80fd\u3002</p>"},{"location":"core-concepts/Using-LlamaIndex-Tools/","title":"\u4f7f\u7528 LlamaIndex \u5de5\u5177","text":""},{"location":"core-concepts/Using-LlamaIndex-Tools/#llamaindex","title":"\u4f7f\u7528 LlamaIndex \u5de5\u5177","text":"<p>LlamaIndex \u96c6\u6210</p> <p>CrewAI \u4e0e LlamaIndex \u7528\u4e8e RAG\uff08\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff09\u548c\u4ee3\u7406\u7ba1\u9053\u7684\u7efc\u5408\u5de5\u5177\u5305\u65e0\u7f1d\u96c6\u6210\uff0c\u652f\u6301\u9ad8\u7ea7\u57fa\u4e8e\u641c\u7d22\u7684\u67e5\u8be2\u7b49\u529f\u80fd\u3002\u4ee5\u4e0b\u662f LlamaIndex \u63d0\u4f9b\u7684\u53ef\u7528\u5185\u7f6e\u5de5\u5177\u3002</p> <pre><code>from crewai import Agent\nfrom crewai_tools import LlamaIndexTool\n\n# \u793a\u4f8b 1\uff1a\u4ece FunctionTool \u521d\u59cb\u5316\nfrom llama_index.core.tools import FunctionTool\n\nyour_python_function = lambda ...: ...\nog_tool = FunctionTool.from_defaults(your_python_function, name=\"&lt;\u540d\u79f0&gt;\", description='&lt;\u63cf\u8ff0&gt;')\ntool = LlamaIndexTool.from_tool(og_tool)\n\n# \u793a\u4f8b 2\uff1a\u4ece LlamaHub \u5de5\u5177\u521d\u59cb\u5316\nfrom llama_index.tools.wolfram_alpha import WolframAlphaToolSpec\nwolfram_spec = WolframAlphaToolSpec(app_id=\"&lt;app_id&gt;\")\nwolfram_tools = wolfram_spec.to_tool_list()\ntools = [LlamaIndexTool.from_tool(t) for t in wolfram_tools]\n\n# \u793a\u4f8b 3\uff1a\u4ece LlamaIndex \u67e5\u8be2\u5f15\u64ce\u521d\u59cb\u5316\u5de5\u5177\nquery_engine = index.as_query_engine()\nquery_tool = LlamaIndexTool.from_query_engine(\n    query_engine,\n    name=\"Uber 2019 \u5e74 10K \u67e5\u8be2\u5de5\u5177\",\n    description=\"\u4f7f\u7528\u6b64\u5de5\u5177\u67e5\u627e 2019 \u5e74 Uber 10K \u5e74\u5ea6\u62a5\u544a\"\n)\n\n# \u521b\u5efa\u5de5\u5177\u5e76\u5c06\u5176\u5206\u914d\u7ed9\u4ee3\u7406\nagent = Agent(\n  role='\u7814\u7a76\u5206\u6790\u5e08',\n  goal='\u63d0\u4f9b\u6700\u65b0\u7684\u5e02\u573a\u5206\u6790',\n  backstory='\u4e00\u4f4d\u5bf9\u5e02\u573a\u8d8b\u52bf\u6709\u654f\u9510\u773c\u5149\u7684\u4e13\u5bb6\u5206\u6790\u5e08\u3002',\n  tools=[tool, *tools, query_tool]\n)\n\n# \u4ee3\u7801\u7684\u5176\u4f59\u90e8\u5206...\n</code></pre>"},{"location":"core-concepts/Using-LlamaIndex-Tools/#_1","title":"\u5165\u95e8\u6b65\u9aa4","text":"<p>\u8981\u6709\u6548\u4f7f\u7528 LlamaIndexTool\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a</p> <ol> <li> <p>\u8f6f\u4ef6\u5305\u5b89\u88c5: \u786e\u8ba4\u60a8\u7684 Python \u73af\u5883\u4e2d\u5df2\u5b89\u88c5 <code>crewai[tools]</code> \u8f6f\u4ef6\u5305\u3002</p> <pre><code>pip install 'crewai[tools]'\n</code></pre> </li> <li> <p>\u5b89\u88c5\u548c\u4f7f\u7528 LlamaIndex: \u6309\u7167 LlamaIndex \u6587\u6863 LlamaIndex \u6587\u6863 \u8bbe\u7f6e RAG/\u4ee3\u7406\u7ba1\u9053\u3002</p> </li> </ol>"},{"location":"how-to/AgentOps-Observability/","title":"\u7b80\u4ecb","text":"<p>\u53ef\u89c2\u5bdf\u6027\u662f\u5f00\u53d1\u548c\u90e8\u7f72\u5bf9\u8bdd\u5f0f AI \u4ee3\u7406\u7684\u4e00\u4e2a\u5173\u952e\u65b9\u9762\u3002\u5b83\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u4e86\u89e3\u5176\u4ee3\u7406\u7684\u6267\u884c\u60c5\u51b5\u3001\u4ee3\u7406\u4e0e\u7528\u6237\u7684\u4ea4\u4e92\u65b9\u5f0f\u4ee5\u53ca\u4ee3\u7406\u5982\u4f55\u4f7f\u7528\u5916\u90e8\u5de5\u5177\u548c API\u3002AgentOps \u662f\u4e00\u6b3e\u72ec\u7acb\u4e8e CrewAI \u7684\u4ea7\u54c1\uff0c\u4e3a\u4ee3\u7406\u63d0\u4f9b\u4e86\u5168\u9762\u7684\u53ef\u89c2\u5bdf\u6027\u89e3\u51b3\u65b9\u6848\u3002</p>"},{"location":"how-to/AgentOps-Observability/#agentops","title":"AgentOps","text":"<p>AgentOps \u4e3a\u4ee3\u7406\u63d0\u4f9b\u4f1a\u8bdd\u56de\u653e\u3001\u6307\u6807\u548c\u76d1\u63a7\u3002</p> <p>\u5728\u8f83\u9ad8\u7684\u5c42\u6b21\u4e0a\uff0cAgentOps \u4f7f\u60a8\u80fd\u591f\u76d1\u63a7\u6210\u672c\u3001\u4ee4\u724c\u4f7f\u7528\u60c5\u51b5\u3001\u5ef6\u8fdf\u3001\u4ee3\u7406\u6545\u969c\u3001\u4f1a\u8bdd\u8303\u56f4\u7684\u7edf\u8ba1\u6570\u636e\u7b49\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b AgentOps \u4ed3\u5e93\u3002</p>"},{"location":"how-to/AgentOps-Observability/#_2","title":"\u6982\u8ff0","text":"<p>AgentOps \u63d0\u4f9b\u5bf9\u5f00\u53d1\u548c\u751f\u4ea7\u73af\u5883\u4e2d\u4ee3\u7406\u7684\u76d1\u63a7\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u8ddf\u8e2a\u4ee3\u7406\u6027\u80fd\u3001\u4f1a\u8bdd\u56de\u653e\u548c\u81ea\u5b9a\u4e49\u62a5\u544a\u7684\u4eea\u8868\u677f\u3002</p> <p>\u6b64\u5916\uff0cAgentOps \u8fd8\u63d0\u4f9b\u4f1a\u8bdd\u94bb\u53d6\u529f\u80fd\uff0c\u7528\u4e8e\u5b9e\u65f6\u67e5\u770b Crew \u4ee3\u7406\u4ea4\u4e92\u3001LLM \u8c03\u7528\u548c\u5de5\u5177\u4f7f\u7528\u60c5\u51b5\u3002\u6b64\u529f\u80fd\u5bf9\u4e8e\u8c03\u8bd5\u548c\u4e86\u89e3\u4ee3\u7406\u5982\u4f55\u4e0e\u7528\u6237\u4ee5\u53ca\u5176\u4ed6\u4ee3\u7406\u4ea4\u4e92\u975e\u5e38\u6709\u7528\u3002</p> <p> </p>"},{"location":"how-to/AgentOps-Observability/#_3","title":"\u7279\u6027","text":"<ul> <li>LLM \u6210\u672c\u7ba1\u7406\u548c\u8ddf\u8e2a\uff1a\u8ddf\u8e2a\u4e0e\u57fa\u7840\u6a21\u578b\u63d0\u4f9b\u5546\u7684\u652f\u51fa\u3002</li> <li>\u56de\u653e\u5206\u6790\uff1a\u89c2\u770b\u9010\u6b65\u4ee3\u7406\u6267\u884c\u56fe\u3002</li> <li>\u9012\u5f52\u601d\u7ef4\u68c0\u6d4b\uff1a\u8bc6\u522b\u4ee3\u7406\u4f55\u65f6\u9677\u5165\u65e0\u9650\u5faa\u73af\u3002</li> <li>\u81ea\u5b9a\u4e49\u62a5\u544a\uff1a\u521b\u5efa\u6709\u5173\u4ee3\u7406\u6027\u80fd\u7684\u81ea\u5b9a\u4e49\u5206\u6790\u3002</li> <li>\u5206\u6790\u4eea\u8868\u677f\uff1a\u76d1\u63a7\u6709\u5173\u5f00\u53d1\u548c\u751f\u4ea7\u73af\u5883\u4e2d\u4ee3\u7406\u7684\u9ad8\u7ea7\u7edf\u8ba1\u4fe1\u606f\u3002</li> <li>\u516c\u5171\u6a21\u578b\u6d4b\u8bd5\uff1a\u6839\u636e\u57fa\u51c6\u548c\u6392\u884c\u699c\u6d4b\u8bd5\u60a8\u7684\u4ee3\u7406\u3002</li> <li>\u81ea\u5b9a\u4e49\u6d4b\u8bd5\uff1a\u9488\u5bf9\u7279\u5b9a\u9886\u57df\u7684\u6d4b\u8bd5\u8fd0\u884c\u60a8\u7684\u4ee3\u7406\u3002</li> <li>\u65f6\u95f4\u65c5\u884c\u8c03\u8bd5\uff1a\u4ece\u68c0\u67e5\u70b9\u91cd\u65b0\u542f\u52a8\u60a8\u7684\u4f1a\u8bdd\u3002</li> <li>\u5408\u89c4\u6027\u548c\u5b89\u5168\u6027\uff1a\u521b\u5efa\u5ba1\u8ba1\u65e5\u5fd7\u5e76\u68c0\u6d4b\u6f5c\u5728\u5a01\u80c1\uff0c\u4f8b\u5982\u4eb5\u6e0e\u548c PII \u6cc4\u9732\u3002</li> <li>\u63d0\u793a\u6ce8\u5165\u68c0\u6d4b\uff1a\u8bc6\u522b\u6f5c\u5728\u7684\u4ee3\u7801\u6ce8\u5165\u548c\u79d8\u5bc6\u6cc4\u9732\u3002</li> </ul>"},{"location":"how-to/AgentOps-Observability/#agentops_1","title":"\u4f7f\u7528 AgentOps","text":"<ol> <li> <p>\u521b\u5efa API \u5bc6\u94a5\uff1a    \u5728\u6b64\u5904\u521b\u5efa\u7528\u6237 API \u5bc6\u94a5\uff1a\u521b\u5efa API \u5bc6\u94a5</p> </li> <li> <p>\u914d\u7f6e\u60a8\u7684\u73af\u5883\uff1a    \u5c06\u60a8\u7684 API \u5bc6\u94a5\u6dfb\u52a0\u5230\u60a8\u7684\u73af\u5883\u53d8\u91cf\u4e2d</p> </li> </ol> <pre><code>AGENTOPS_API_KEY=&lt;\u60a8\u7684 AGENTOPS API \u5bc6\u94a5&gt;\n</code></pre> <ol> <li>\u5b89\u88c5 AgentOps\uff1a    \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 AgentOps\uff1a    <pre><code>pip install crewai[agentops]\n</code></pre>    \u6216    <pre><code>pip install agentops\n</code></pre></li> </ol> <p>\u5728\u60a8\u7684\u811a\u672c\u4e2d\u4f7f\u7528 <code>Crew</code> \u4e4b\u524d\uff0c\u8bf7\u5305\u542b\u4ee5\u4e0b\u884c\uff1a</p> <pre><code>import agentops\nagentops.init()\n</code></pre> <p>\u8fd9\u5c06\u542f\u52a8 AgentOps \u4f1a\u8bdd\u5e76\u81ea\u52a8\u8ddf\u8e2a Crew \u4ee3\u7406\u3002\u6709\u5173\u5982\u4f55\u914d\u7f6e\u66f4\u590d\u6742\u7684\u4ee3\u7406\u7cfb\u7edf\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b AgentOps \u6587\u6863 \u6216\u52a0\u5165 Discord\u3002</p>"},{"location":"how-to/AgentOps-Observability/#crew-agentops","title":"Crew + AgentOps \u793a\u4f8b","text":"<ul> <li>\u804c\u4f4d\u53d1\u5e03</li> <li>Markdown \u9a8c\u8bc1\u5668</li> <li>Instagram \u5e16\u5b50</li> </ul>"},{"location":"how-to/AgentOps-Observability/#_4","title":"\u66f4\u591a\u4fe1\u606f","text":"<p>\u8981\u5f00\u59cb\u4f7f\u7528\uff0c\u8bf7\u521b\u5efa\u4e00\u4e2a AgentOps \u5e10\u6237\u3002</p> <p>\u6709\u5173\u529f\u80fd\u8bf7\u6c42\u6216\u9519\u8bef\u62a5\u544a\uff0c\u8bf7\u5728 AgentOps \u4ed3\u5e93 \u4e0a\u8054\u7cfb AgentOps \u56e2\u961f\u3002</p>"},{"location":"how-to/AgentOps-Observability/#_5","title":"\u5176\u4ed6\u94fe\u63a5","text":"<p>\ud83d\udc26 Twitter \u00a0\u00a0\u2022\u00a0\u00a0 \ud83d\udce2 Discord \u00a0\u00a0\u2022\u00a0\u00a0 \ud83d\udd87\ufe0f AgentOps \u4eea\u8868\u677f \u00a0\u00a0\u2022\u00a0\u00a0 \ud83d\udcd9 \u6587\u6863</p>"},{"location":"how-to/Coding-Agents/","title":"\u7f16\u7801\u4ee3\u7406","text":""},{"location":"how-to/Coding-Agents/#_1","title":"\u7b80\u4ecb","text":"<p>crewAI \u4ee3\u7406\u73b0\u5728\u62e5\u6709\u5f3a\u5927\u7684\u7f16\u5199\u548c\u6267\u884c\u4ee3\u7801\u7684\u80fd\u529b\uff0c\u4ece\u800c\u663e\u8457\u589e\u5f3a\u4e86\u5176\u89e3\u51b3\u95ee\u9898\u7684\u80fd\u529b\u3002\u6b64\u529f\u80fd\u5bf9\u4e8e\u9700\u8981\u8ba1\u7b97\u6216\u7f16\u7a0b\u89e3\u51b3\u65b9\u6848\u7684\u4efb\u52a1\u7279\u522b\u6709\u7528\u3002</p>"},{"location":"how-to/Coding-Agents/#_2","title":"\u542f\u7528\u4ee3\u7801\u6267\u884c","text":"<p>\u8981\u4e3a\u4ee3\u7406\u542f\u7528\u4ee3\u7801\u6267\u884c\uff0c\u8bf7\u5728\u521b\u5efa\u4ee3\u7406\u65f6\u5c06 <code>allow_code_execution</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>True</code>\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff1a</p> <pre><code>from crewai import Agent\n\ncoding_agent = Agent(\n    role=\"\u9ad8\u7ea7 Python \u5f00\u53d1\u4eba\u5458\",\n    goal=\"\u7f16\u5199\u8bbe\u8ba1\u826f\u597d\u4e14\u7ecf\u8fc7\u6df1\u601d\u719f\u8651\u7684\u4ee3\u7801\",\n    backstory=\"\u4f60\u662f\u4e00\u4f4d\u9ad8\u7ea7 Python \u5f00\u53d1\u4eba\u5458\uff0c\u5728\u8f6f\u4ef6\u67b6\u6784\u548c\u6700\u4f73\u5b9e\u8df5\u65b9\u9762\u62e5\u6709\u4e30\u5bcc\u7684\u7ecf\u9a8c\u3002\",\n    allow_code_execution=True\n)\n</code></pre>"},{"location":"how-to/Coding-Agents/#_3","title":"\u91cd\u8981\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li> <p>\u6a21\u578b\u9009\u62e9\uff1a\u5f3a\u70c8\u5efa\u8bae\u5728\u542f\u7528\u4ee3\u7801\u6267\u884c\u65f6\u4f7f\u7528\u529f\u80fd\u66f4\u5f3a\u5927\u7684\u6a21\u578b\uff0c\u4f8b\u5982 Claude 3.5 Sonnet \u548c GPT-4\u3002\u8fd9\u4e9b\u6a21\u578b\u5bf9\u7f16\u7a0b\u6982\u5ff5\u6709\u66f4\u597d\u7684\u7406\u89e3\uff0c\u5e76\u4e14\u66f4\u6709\u53ef\u80fd\u751f\u6210\u6b63\u786e\u4e14\u9ad8\u6548\u7684\u4ee3\u7801\u3002</p> </li> <li> <p>\u9519\u8bef\u5904\u7406\uff1a\u4ee3\u7801\u6267\u884c\u529f\u80fd\u5305\u62ec\u9519\u8bef\u5904\u7406\u3002\u5982\u679c\u6267\u884c\u7684\u4ee3\u7801\u5f15\u53d1\u5f02\u5e38\uff0c\u4ee3\u7406\u5c06\u6536\u5230\u9519\u8bef\u6d88\u606f\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c1d\u8bd5\u66f4\u6b63\u4ee3\u7801\u6216\u63d0\u4f9b\u66ff\u4ee3\u89e3\u51b3\u65b9\u6848\u3002</p> </li> <li> <p>\u4f9d\u8d56\u9879\uff1a\u8981\u4f7f\u7528\u4ee3\u7801\u6267\u884c\u529f\u80fd\uff0c\u60a8\u9700\u8981\u5b89\u88c5 <code>crewai_tools</code> \u5305\u3002\u5982\u679c\u672a\u5b89\u88c5\uff0c\u4ee3\u7406\u5c06\u8bb0\u5f55\u4e00\u6761\u4fe1\u606f\u6d88\u606f\uff1a\u201c\u7f16\u7801\u5de5\u5177\u4e0d\u53ef\u7528\u3002\u8bf7\u5b89\u88c5 crewai_tools\u3002\u201d</p> </li> </ol>"},{"location":"how-to/Coding-Agents/#_4","title":"\u4ee3\u7801\u6267\u884c\u8fc7\u7a0b","text":"<p>\u5f53\u542f\u7528\u4e86\u4ee3\u7801\u6267\u884c\u7684\u4ee3\u7406\u9047\u5230\u9700\u8981\u7f16\u7a0b\u7684\u4efb\u52a1\u65f6\uff1a</p> <ol> <li>\u4ee3\u7406\u5206\u6790\u4efb\u52a1\u5e76\u786e\u5b9a\u9700\u8981\u6267\u884c\u4ee3\u7801\u3002</li> <li>\u5b83\u7f16\u5199\u89e3\u51b3\u95ee\u9898\u6240\u9700\u7684 Python \u4ee3\u7801\u3002</li> <li>\u4ee3\u7801\u88ab\u53d1\u9001\u5230\u5185\u90e8\u4ee3\u7801\u6267\u884c\u5de5\u5177\uff08<code>CodeInterpreterTool</code>\uff09\u3002</li> <li>\u8be5\u5de5\u5177\u5728\u53d7\u63a7\u73af\u5883\u4e2d\u6267\u884c\u4ee3\u7801\u5e76\u8fd4\u56de\u7ed3\u679c\u3002</li> <li>\u4ee3\u7406\u89e3\u91ca\u7ed3\u679c\u5e76\u5c06\u5176\u5408\u5e76\u5230\u5176\u54cd\u5e94\u4e2d\uff0c\u6216\u5c06\u5176\u7528\u4e8e\u8fdb\u4e00\u6b65\u89e3\u51b3\u95ee\u9898\u3002</li> </ol>"},{"location":"how-to/Coding-Agents/#_5","title":"\u7528\u6cd5\u793a\u4f8b","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u521b\u5efa\u5177\u6709\u4ee3\u7801\u6267\u884c\u529f\u80fd\u7684\u4ee3\u7406\u5e76\u5728\u4efb\u52a1\u4e2d\u4f7f\u7528\u5b83\u7684\u8be6\u7ec6\u793a\u4f8b\uff1a</p> <pre><code>from crewai import Agent, Task, Crew\n\n# \u521b\u5efa\u542f\u7528\u4e86\u4ee3\u7801\u6267\u884c\u7684\u4ee3\u7406\ncoding_agent = Agent(\n    role=\"Python \u6570\u636e\u5206\u6790\u5e08\",\n    goal=\"\u4f7f\u7528 Python \u5206\u6790\u6570\u636e\u5e76\u63d0\u4f9b\u89c1\u89e3\",\n    backstory=\"\u4f60\u662f\u4e00\u4f4d\u7ecf\u9a8c\u4e30\u5bcc\u7684\u6570\u636e\u5206\u6790\u5e08\uff0c\u62e5\u6709\u5f3a\u5927\u7684 Python \u6280\u80fd\u3002\",\n    allow_code_execution=True\n)\n\n# \u521b\u5efa\u9700\u8981\u6267\u884c\u4ee3\u7801\u7684\u4efb\u52a1\ndata_analysis_task = Task(\n    description=\"\u5206\u6790\u7ed9\u5b9a\u7684\u6570\u636e\u96c6\u5e76\u8ba1\u7b97\u53c2\u4e0e\u8005\u7684\u5e73\u5747\u5e74\u9f84\u3002\",\n    agent=coding_agent\n)\n\n# \u521b\u5efa\u4e00\u4e2a\u56e2\u961f\u5e76\u6dfb\u52a0\u4efb\u52a1\nanalysis_crew = Crew(\n    agents=[coding_agent],\n    tasks=[data_analysis_task]\n)\n\n# \u6267\u884c\u56e2\u961f\nresult = analysis_crew.kickoff()\n\nprint(result)\n</code></pre> <p>\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c<code>coding_agent</code> \u53ef\u4ee5\u7f16\u5199\u548c\u6267\u884c Python \u4ee3\u7801\u6765\u6267\u884c\u6570\u636e\u5206\u6790\u4efb\u52a1\u3002</p>"},{"location":"how-to/Conditional-Tasks/","title":"\u6761\u4ef6\u4efb\u52a1","text":""},{"location":"how-to/Conditional-Tasks/#_1","title":"\u7b80\u4ecb","text":"<p>crewAI \u4e2d\u7684\u6761\u4ef6\u4efb\u52a1\u5141\u8bb8\u6839\u636e\u5148\u524d\u4efb\u52a1\u7684\u7ed3\u679c\u52a8\u6001\u8c03\u6574\u5de5\u4f5c\u6d41\u7a0b\u3002\u6b64\u5f3a\u5927\u529f\u80fd\u4f7f\u56e2\u961f\u80fd\u591f\u6709\u9009\u62e9\u5730\u505a\u51fa\u51b3\u7b56\u548c\u6267\u884c\u4efb\u52a1\uff0c\u4ece\u800c\u63d0\u9ad8 AI \u9a71\u52a8\u6d41\u7a0b\u7684\u7075\u6d3b\u6027\u548c\u6548\u7387\u3002</p> <pre><code>from typing import List\n\nfrom pydantic import BaseModel\nfrom crewai import Agent, Crew\nfrom crewai.tasks.conditional_task import ConditionalTask\nfrom crewai.tasks.task_output import TaskOutput\nfrom crewai.task import Task\nfrom crewai_tools import SerperDevTool\n\n\n# \u4e3a\u6761\u4ef6\u4efb\u52a1\u5b9a\u4e49\u6761\u4ef6\u51fd\u6570\n# \u5982\u679c\u4e3a false\uff0c\u5219\u8df3\u8fc7\u4efb\u52a1\uff0c\u5982\u679c\u4e3a true\uff0c\u5219\u6267\u884c\u4efb\u52a1\ndef is_data_missing(output: TaskOutput) -&gt; bool:\n    return len(output.pydantic.events) &lt; 10: # \u8fd9\u5c06\u8df3\u8fc7\u6b64\u4efb\u52a1\n\n# \u5b9a\u4e49\u4ee3\u7406\ndata_fetcher_agent = Agent(\n    role=\"\u6570\u636e\u83b7\u53d6\u5668\",\n    goal=\"\u4f7f\u7528 Serper \u5de5\u5177\u5728\u7ebf\u83b7\u53d6\u6570\u636e\",\n    backstory=\"\u80cc\u666f\u6545\u4e8b 1\",\n    verbose=True,\n    tools=[SerperDevTool()],\n)\n\ndata_processor_agent = Agent(\n    role=\"\u6570\u636e\u5904\u7406\u5668\",\n    goal=\"\u5904\u7406\u83b7\u53d6\u7684\u6570\u636e\",\n    backstory=\"\u80cc\u666f\u6545\u4e8b 2\",\n    verbose=True,\n)\n\nsummary_generator_agent = Agent(\n    role=\"\u6458\u8981\u751f\u6210\u5668\",\n    goal=\"\u4ece\u83b7\u53d6\u7684\u6570\u636e\u751f\u6210\u6458\u8981\",\n    backstory=\"\u80cc\u666f\u6545\u4e8b 3\",\n    verbose=True,\n)\n\n\nclass EventOutput(BaseModel):\n    events: List[str]\n\n\ntask1 = Task(\n    description=\"\u4f7f\u7528 Serper \u5de5\u5177\u83b7\u53d6\u6709\u5173\u65e7\u91d1\u5c71\u4e8b\u4ef6\u7684\u6570\u636e\",\n    expected_output=\"\u672c\u5468\u5728\u65e7\u91d1\u5c71\u8981\u505a\u7684 10 \u4ef6\u4e8b\u7684\u5217\u8868\",\n    agent=data_fetcher_agent,\n    output_pydantic=EventOutput,\n)\n\nconditional_task = ConditionalTask(\n    description=\"\"\"\n        \u68c0\u67e5\u6570\u636e\u662f\u5426\u7f3a\u5931\u3002\u5982\u679c\u6211\u4eec\u7684\u6d3b\u52a8\u5c11\u4e8e 10 \u4e2a\uff0c\n        \u5219\u4f7f\u7528 Serper \u5de5\u5177\u83b7\u53d6\u66f4\u591a\u6d3b\u52a8\uff0c\u4ee5\u4fbf\n        \u6211\u4eec\u672c\u5468\u5728\u65e7\u91d1\u5c71\u603b\u5171\u6709 10 \u4e2a\u6d3b\u52a8\u3002\n        \"\"\",\n    expected_output=\"\u672c\u5468\u5728\u65e7\u91d1\u5c71\u8981\u505a\u7684 10 \u4ef6\u4e8b\u7684\u5217\u8868\",\n    condition=is_data_missing,\n    agent=data_processor_agent,\n)\n\ntask3 = Task(\n    description=\"\u4ece\u83b7\u53d6\u7684\u6570\u636e\u4e2d\u751f\u6210\u65e7\u91d1\u5c71\u4e8b\u4ef6\u7684\u6458\u8981\",\n    expected_output=\"summary_generated\",\n    agent=summary_generator_agent,\n)\n\n# \u4f7f\u7528\u4efb\u52a1\u521b\u5efa\u4e00\u4e2a\u56e2\u961f\ncrew = Crew(\n    agents=[data_fetcher_agent, data_processor_agent, summary_generator_agent],\n    tasks=[task1, conditional_task, task3],\n    verbose=2,\n)\n\nresult = crew.kickoff()\nprint(\"\u7ed3\u679c\", result)\n</code></pre>"},{"location":"how-to/Create-Custom-Tools/","title":"\u5728 crewAI \u4e2d\u521b\u5efa\u548c\u4f7f\u7528\u5de5\u5177","text":""},{"location":"how-to/Create-Custom-Tools/#crewai","title":"\u5728 crewAI \u4e2d\u521b\u5efa\u548c\u4f7f\u7528\u5de5\u5177","text":"<p>\u672c\u6307\u5357\u63d0\u4f9b\u4e86\u6709\u5173\u4e3a crewAI \u6846\u67b6\u521b\u5efa\u81ea\u5b9a\u4e49\u5de5\u5177\u4ee5\u53ca\u5982\u4f55\u6709\u6548\u7ba1\u7406\u548c\u5229\u7528\u8fd9\u4e9b\u5de5\u5177\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5de5\u5177\u59d4\u6258\u3001\u9519\u8bef\u5904\u7406\u548c\u52a8\u6001\u5de5\u5177\u8c03\u7528\u7b49\u6700\u65b0\u529f\u80fd\u3002\u5b83\u8fd8\u5f3a\u8c03\u4e86\u534f\u4f5c\u5de5\u5177\u7684\u91cd\u8981\u6027\uff0c\u4f7f\u4ee3\u7406\u80fd\u591f\u6267\u884c\u5404\u79cd\u64cd\u4f5c\u3002</p>"},{"location":"how-to/Create-Custom-Tools/#_1","title":"\u5148\u51b3\u6761\u4ef6","text":"<p>\u5728\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u5de5\u5177\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u5b89\u88c5 crewAI \u989d\u5916\u5de5\u5177\u5305\uff1a</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"how-to/Create-Custom-Tools/#basetool","title":"\u5b50\u7c7b\u5316 <code>BaseTool</code>","text":"<p>\u8981\u521b\u5efa\u4e2a\u6027\u5316\u5de5\u5177\uff0c\u8bf7\u7ee7\u627f <code>BaseTool</code> \u5e76\u5b9a\u4e49\u5fc5\u8981\u7684\u5c5e\u6027\u548c <code>_run</code> \u65b9\u6cd5\u3002</p> <pre><code>from crewai_tools import BaseTool\n\nclass MyCustomTool(BaseTool):\n    name: str = \"\u6211\u7684\u5de5\u5177\u7684\u540d\u79f0\"\n    description: str = \"\u6b64\u5de5\u5177\u7684\u4f5c\u7528\u3002\u8fd9\u5bf9\u4e8e\u6709\u6548\u5229\u7528\u81f3\u5173\u91cd\u8981\u3002\"\n\n    def _run(self, argument: str) -&gt; str:\n        # \u60a8\u7684\u5de5\u5177\u903b\u8f91\n        return \"\u5de5\u5177\u7684\u7ed3\u679c\"\n</code></pre>"},{"location":"how-to/Create-Custom-Tools/#tool","title":"\u4f7f\u7528 <code>tool</code> \u88c5\u9970\u5668","text":"<p>\u6216\u8005\uff0c\u4f7f\u7528 <code>tool</code> \u88c5\u9970\u5668\u76f4\u63a5\u521b\u5efa\u5de5\u5177\u3002\u8fd9\u9700\u8981\u5728\u51fd\u6570\u4e2d\u6307\u5b9a\u5c5e\u6027\u548c\u5de5\u5177\u7684\u903b\u8f91\u3002</p> <pre><code>from crewai_tools import tool\n\n@tool(\"\u5de5\u5177\u540d\u79f0\")\ndef my_simple_tool(question: str) -&gt; str:\n    \"\"\"\u5de5\u5177\u63cf\u8ff0\uff0c\u4ee5\u63d0\u9ad8\u6e05\u6670\u5ea6\u3002\"\"\"\n    # \u5de5\u5177\u903b\u8f91\n    return \"\u5de5\u5177\u8f93\u51fa\"\n</code></pre>"},{"location":"how-to/Create-Custom-Tools/#_2","title":"\u4e3a\u5de5\u5177\u5b9a\u4e49\u7f13\u5b58\u51fd\u6570","text":"<p>\u8981\u4f7f\u7528\u7f13\u5b58\u4f18\u5316\u5de5\u5177\u6027\u80fd\uff0c\u8bf7\u4f7f\u7528 <code>cache_function</code> \u5c5e\u6027\u5b9a\u4e49\u81ea\u5b9a\u4e49\u7f13\u5b58\u7b56\u7565\u3002</p> <pre><code>@tool(\"\u5e26\u7f13\u5b58\u7684\u5de5\u5177\")\ndef cached_tool(argument: str) -&gt; str:\n    \"\"\"\u5de5\u5177\u529f\u80fd\u63cf\u8ff0\u3002\"\"\"\n    return \"\u53ef\u7f13\u5b58\u7684\u7ed3\u679c\"\n\ndef my_cache_strategy(arguments: dict, result: str) -&gt; bool:\n    # \u5b9a\u4e49\u81ea\u5b9a\u4e49\u7f13\u5b58\u903b\u8f91\n    return True if some_condition else False\n\ncached_tool.cache_function = my_cache_strategy\n</code></pre> <p>\u901a\u8fc7\u9075\u5faa\u8fd9\u4e9b\u51c6\u5219\u5e76\u5c06\u65b0\u529f\u80fd\u548c\u534f\u4f5c\u5de5\u5177\u7eb3\u5165\u60a8\u7684\u5de5\u5177\u521b\u5efa\u548c\u7ba1\u7406\u6d41\u7a0b\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5145\u5206\u5229\u7528 crewAI \u6846\u67b6\u7684\u529f\u80fd\uff0c\u4ece\u800c\u589e\u5f3a\u5f00\u53d1\u4f53\u9a8c\u548c AI \u4ee3\u7406\u7684\u6548\u7387\u3002</p>"},{"location":"how-to/Creating-a-Crew-and-kick-it-off/","title":"\u7ec4\u5efa\u548c\u6fc0\u6d3b\u60a8\u7684 CrewAI \u56e2\u961f","text":""},{"location":"how-to/Creating-a-Crew-and-kick-it-off/#_1","title":"\u7b80\u4ecb","text":"<p>\u901a\u8fc7\u8bbe\u7f6e\u60a8\u7684\u73af\u5883\u5e76\u4f7f\u7528\u6700\u65b0\u529f\u80fd\u542f\u52a8\u60a8\u7684 AI \u56e2\u961f\uff0c\u5f00\u59cb\u60a8\u7684 CrewAI \u4e4b\u65c5\u3002\u672c\u6307\u5357\u786e\u4fdd\u987a\u5229\u5f00\u59cb\uff0c\u5e76\u7ed3\u5408\u6240\u6709\u6700\u65b0\u66f4\u65b0\u4ee5\u83b7\u5f97\u589e\u5f3a\u7684\u4f53\u9a8c\uff0c\u5305\u62ec\u4ee3\u7801\u6267\u884c\u529f\u80fd\u3001\u4e0e\u7b2c\u4e09\u65b9\u4ee3\u7406\u96c6\u6210\u4ee5\u53ca\u9ad8\u7ea7\u4efb\u52a1\u7ba1\u7406\u3002</p>"},{"location":"how-to/Creating-a-Crew-and-kick-it-off/#0","title":"\u7b2c 0 \u6b65\uff1a\u5b89\u88c5","text":"<p>\u5b89\u88c5 CrewAI \u548c\u60a8\u7684\u9879\u76ee\u6240\u9700\u7684\u4efb\u4f55\u8f6f\u4ef6\u5305\u3002CrewAI \u4e0e Python &gt;=3.10,&lt;=3.13 \u517c\u5bb9\u3002</p> <pre><code>pip install crewai\npip install 'crewai[tools]'\n</code></pre>"},{"location":"how-to/Creating-a-Crew-and-kick-it-off/#1","title":"\u7b2c 1 \u6b65\uff1a\u7ec4\u5efa\u60a8\u7684\u4ee3\u7406","text":"<p>\u4f7f\u7528\u4e0d\u540c\u7684\u89d2\u8272\u3001\u80cc\u666f\u6545\u4e8b\u548c\u589e\u5f3a\u529f\u80fd\u5b9a\u4e49\u60a8\u7684\u4ee3\u7406\u3002Agent \u7c7b\u73b0\u5728\u652f\u6301\u5e7f\u6cdb\u7684\u5c5e\u6027\uff0c\u7528\u4e8e\u5fae\u8c03\u5bf9\u4ee3\u7406\u884c\u4e3a\u548c\u4ea4\u4e92\u7684\u63a7\u5236\uff0c\u5305\u62ec\u4ee3\u7801\u6267\u884c\u548c\u4e0e\u7b2c\u4e09\u65b9\u4ee3\u7406\u96c6\u6210\u3002</p> <pre><code>import os\nfrom langchain.llms import OpenAI\nfrom crewai import Agent\nfrom crewai_tools import SerperDevTool, BrowserbaseLoadTool, EXASearchTool\n\nos.environ[\"OPENAI_API_KEY\"] = \"Your OpenAI Key\"\nos.environ[\"SERPER_API_KEY\"] = \"Your Serper Key\"\nos.environ[\"BROWSERBASE_API_KEY\"] = \"Your BrowserBase Key\"\nos.environ[\"BROWSERBASE_PROJECT_ID\"] = \"Your BrowserBase Project Id\"\n\nsearch_tool = SerperDevTool()\nbrowser_tool = BrowserbaseLoadTool()\nexa_search_tool = EXASearchTool()\n\n# \u521b\u5efa\u5177\u6709\u9ad8\u7ea7\u914d\u7f6e\u7684\u9ad8\u7ea7\u7814\u7a76\u5458\u4ee3\u7406\nresearcher = Agent(\n    role='\u9ad8\u7ea7\u7814\u7a76\u5458',\n    goal='\u53d1\u73b0 {topic} \u4e2d\u7684\u7a81\u7834\u6027\u6280\u672f',\n    backstory=(\"\u5728\u597d\u5947\u5fc3\u7684\u9a71\u4f7f\u4e0b\uff0c\u60a8\u5904\u4e8e\u521b\u65b0\u7684\u6700\u524d\u6cbf\uff0c \"\n               \"\u6e34\u671b\u63a2\u7d22\u548c\u5206\u4eab\u53ef\u4ee5\u6539\u53d8\u4e16\u754c\u7684\u77e5\u8bc6\u3002\"),\n    memory=True,\n    verbose=True,\n    allow_delegation=False,\n    tools=[search_tool, browser_tool],\n    allow_code_execution=False,  # \u7528\u4e8e\u542f\u7528\u4ee3\u7801\u6267\u884c\u7684\u65b0\u5c5e\u6027\n    max_iter=15,  # \u4efb\u52a1\u6267\u884c\u7684\u6700\u5927\u8fed\u4ee3\u6b21\u6570\n    max_rpm=100,  # \u6bcf\u5206\u949f\u6700\u5927\u8bf7\u6c42\u6570\n    max_execution_time=3600,  # \u6700\u5927\u6267\u884c\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\n    system_template=\"\u60a8\u7684\u81ea\u5b9a\u4e49\u7cfb\u7edf\u6a21\u677f\",  # \u81ea\u5b9a\u4e49\u7cfb\u7edf\u6a21\u677f\n    prompt_template=\"\u60a8\u7684\u81ea\u5b9a\u4e49\u63d0\u793a\u6a21\u677f\",  # \u81ea\u5b9a\u4e49\u63d0\u793a\u6a21\u677f\n    response_template=\"\u60a8\u7684\u81ea\u5b9a\u4e49\u54cd\u5e94\u6a21\u677f\",  # \u81ea\u5b9a\u4e49\u54cd\u5e94\u6a21\u677f\n)\n\n# \u521b\u5efa\u5177\u6709\u81ea\u5b9a\u4e49\u5de5\u5177\u548c\u7279\u5b9a\u914d\u7f6e\u7684\u4f5c\u8005\u4ee3\u7406\nwriter = Agent(\n    role='\u4f5c\u8005',\n    goal='\u8bb2\u8ff0\u5173\u4e8e {topic} \u7684\u5f15\u4eba\u5165\u80dc\u7684\u6280\u672f\u6545\u4e8b',\n    backstory=(\"\u51ed\u501f\u7b80\u5316\u590d\u6742\u4e3b\u9898\u7684\u624d\u80fd\uff0c\u60a8\u7cbe\u5fc3\u5236\u4f5c\u5f15\u4eba\u5165\u80dc\u7684 \"\n               \"\u53d9\u8ff0\uff0c\u4ee5\u5438\u5f15\u548c\u6559\u80b2\uff0c\u5c06\u65b0\u53d1\u73b0\u516c\u4e4b\u4e8e\u4f17\u3002\"),\n    verbose=True,\n    allow_delegation=False,\n    memory=True,\n    tools=[exa_search_tool],\n    function_calling_llm=OpenAI(model_name=\"gpt-3.5-turbo\"),  # \u7528\u4e8e\u51fd\u6570\u8c03\u7528\u7684\u5355\u72ec LLM\n)\n\n# \u8bbe\u7f6e\u7279\u5b9a\u7684\u7ecf\u7406\u4ee3\u7406\nmanager = Agent(\n  role='\u7ecf\u7406',\n  goal='\u786e\u4fdd\u56e2\u961f\u7684\u987a\u5229\u8fd0\u4f5c\u548c\u534f\u8c03',\n  verbose=True,\n  backstory=(\n    \"\u4f5c\u4e3a\u4e00\u540d\u7ecf\u9a8c\u4e30\u5bcc\u7684\u9879\u76ee\u7ecf\u7406\uff0c\u60a8\u64c5\u957f\u7ec4\u7ec7 \"\n    \"\u4efb\u52a1\u3001\u7ba1\u7406\u65f6\u95f4\u7ebf\u5e76\u786e\u4fdd\u56e2\u961f\u6309\u8ba1\u5212\u8fdb\u884c\u3002\"\n  ),\n  allow_code_execution=True,  # \u4e3a\u7ecf\u7406\u542f\u7528\u4ee3\u7801\u6267\u884c\n)\n</code></pre>"},{"location":"how-to/Creating-a-Crew-and-kick-it-off/#_2","title":"\u65b0\u7684\u4ee3\u7406\u5c5e\u6027\u548c\u529f\u80fd","text":"<ol> <li><code>allow_code_execution</code>\uff1a\u542f\u7528\u6216\u7981\u7528\u4ee3\u7406\u7684\u4ee3\u7801\u6267\u884c\u529f\u80fd\uff08\u9ed8\u8ba4\u4e3a False\uff09\u3002</li> <li><code>max_execution_time</code>\uff1a\u8bbe\u7f6e\u4ee3\u7406\u5b8c\u6210\u4efb\u52a1\u7684\u6700\u5927\u6267\u884c\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002</li> <li><code>function_calling_llm</code>\uff1a\u6307\u5b9a\u7528\u4e8e\u51fd\u6570\u8c03\u7528\u7684\u5355\u72ec\u8bed\u8a00\u6a21\u578b\u3002</li> </ol>"},{"location":"how-to/Customize-Prompts/","title":"CrewAI \u521d\u6b65\u652f\u6301\u81ea\u5e26\u63d0\u793a","text":"<p>CrewAI \u73b0\u5728\u652f\u6301\u81ea\u5e26\u63d0\u793a\u529f\u80fd\uff0c\u53ef\u5b9e\u73b0\u5e7f\u6cdb\u7684\u5b9a\u5236\u5316\u548c\u56fd\u9645\u5316\u3002\u6b64\u529f\u80fd\u5141\u8bb8\u7528\u6237\u5b9a\u5236\u5176\u4ee3\u7406\u7684\u5185\u90e8\u5de5\u4f5c\u673a\u5236\uff0c\u4ee5\u66f4\u597d\u5730\u6ee1\u8db3\u7279\u5b9a\u9700\u6c42\uff0c\u5305\u62ec\u5bf9\u591a\u8bed\u8a00\u7684\u652f\u6301\u3002</p>"},{"location":"how-to/Customize-Prompts/#_1","title":"\u56fd\u9645\u5316\u548c\u5b9a\u5236\u5316\u652f\u6301","text":""},{"location":"how-to/Customize-Prompts/#prompt_file","title":"\u4f7f\u7528 <code>prompt_file</code> \u81ea\u5b9a\u4e49\u63d0\u793a","text":"<p><code>prompt_file</code> \u5c5e\u6027\u6709\u52a9\u4e8e\u5b8c\u5168\u81ea\u5b9a\u4e49\u4ee3\u7406\u63d0\u793a\uff0c\u4ece\u800c\u589e\u5f3a CrewAI \u7684\u5168\u7403\u53ef\u7528\u6027\u3002\u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u4ed6\u4eec\u7684\u63d0\u793a\u6a21\u677f\uff0c\u786e\u4fdd\u4ee3\u7406\u4ee5\u7b26\u5408\u7279\u5b9a\u9879\u76ee\u8981\u6c42\u6216\u8bed\u8a00\u504f\u597d\u7684\u65b9\u5f0f\u8fdb\u884c\u6c9f\u901a\u3002</p>"},{"location":"how-to/Customize-Prompts/#_2","title":"\u81ea\u5b9a\u4e49\u63d0\u793a\u6587\u4ef6\u793a\u4f8b","text":"<p>\u81ea\u5b9a\u4e49\u63d0\u793a\u53ef\u4ee5\u5728 JSON \u6587\u4ef6\u4e2d\u5b9a\u4e49\uff0c\u7c7b\u4f3c\u4e8e \u6b64\u5904 \u63d0\u4f9b\u7684\u793a\u4f8b\u3002</p>"},{"location":"how-to/Customize-Prompts/#_3","title":"\u652f\u6301\u7684\u8bed\u8a00","text":"<p>CrewAI \u7684\u81ea\u5b9a\u4e49\u63d0\u793a\u652f\u6301\u5305\u62ec\u56fd\u9645\u5316\uff0c\u5141\u8bb8\u4ee5\u4e0d\u540c\u8bed\u8a00\u7f16\u5199\u63d0\u793a\u3002\u8fd9\u5bf9\u4e8e\u9700\u8981\u591a\u8bed\u8a00\u652f\u6301\u7684\u5168\u7403\u56e2\u961f\u6216\u9879\u76ee\u7279\u522b\u6709\u7528\u3002</p>"},{"location":"how-to/Customize-Prompts/#prompt_file_1","title":"\u5982\u4f55\u4f7f\u7528 <code>prompt_file</code> \u5c5e\u6027","text":"<p>\u8981\u4f7f\u7528 <code>prompt_file</code> \u5c5e\u6027\uff0c\u8bf7\u5c06\u5176\u5305\u542b\u5728\u60a8\u7684 Crew \u5b9a\u4e49\u4e2d\u3002\u4ee5\u4e0b\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49\u63d0\u793a\u8bbe\u7f6e\u4ee3\u7406\u548c\u4efb\u52a1\u3002</p>"},{"location":"how-to/Customize-Prompts/#_4","title":"\u793a\u4f8b","text":"<pre><code>import os\nfrom crewai import Agent, Task, Crew\n\n# \u5b9a\u4e49\u60a8\u7684\u4ee3\u7406\nresearcher = Agent(\n    role=\"Researcher\",\n    goal=\"\u5bf9\u6709\u5173\u4eba\u5de5\u667a\u80fd\u548c\u4eba\u5de5\u667a\u80fd\u4ee3\u7406\u7684\u5185\u5bb9\u8fdb\u884c\u6700\u4f73\u7814\u7a76\u548c\u5206\u6790\",\n    backstory=\"\u60a8\u662f\u4e00\u4f4d\u4e13\u5bb6\u7814\u7a76\u5458\uff0c\u4e13\u95e8\u7814\u7a76\u6280\u672f\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u4eba\u5de5\u667a\u80fd\u548c\u521d\u521b\u516c\u53f8\u3002\u60a8\u4f5c\u4e3a\u81ea\u7531\u804c\u4e1a\u8005\u5de5\u4f5c\uff0c\u73b0\u5728\u6b63\u5728\u4e3a\u65b0\u5ba2\u6237\u8fdb\u884c\u7814\u7a76\u548c\u5206\u6790\u3002\",\n    allow_delegation=False,\n)\n\nwriter = Agent(\n    role=\"Senior Writer\",\n    goal=\"\u64b0\u5199\u6709\u5173\u4eba\u5de5\u667a\u80fd\u548c\u4eba\u5de5\u667a\u80fd\u4ee3\u7406\u7684\u6700\u4f73\u5185\u5bb9\u3002\",\n    backstory=\"\u60a8\u662f\u4e00\u4f4d\u9ad8\u7ea7\u4f5c\u5bb6\uff0c\u4e13\u95e8\u7814\u7a76\u6280\u672f\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u4eba\u5de5\u667a\u80fd\u548c\u521d\u521b\u516c\u53f8\u3002\u60a8\u4f5c\u4e3a\u81ea\u7531\u804c\u4e1a\u8005\u5de5\u4f5c\uff0c\u73b0\u5728\u6b63\u5728\u4e3a\u65b0\u5ba2\u6237\u64b0\u5199\u5185\u5bb9\u3002\",\n    allow_delegation=False,\n)\n\n# \u5b9a\u4e49\u60a8\u7684\u4efb\u52a1\ntasks = [\n    Task(\n        description=\"\u6253\u62db\u547c\",\n        expected_output=\"\u8bcd\u8bed\uff1a\u4f60\u597d\",\n        agent=researcher,\n    )\n]\n\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u63d0\u793a\u5b9e\u4f8b\u5316\u60a8\u7684 Crew\ncrew = Crew(\n    agents=[researcher],\n    tasks=tasks,\n    prompt_file=\"prompt.json\",  # \u81ea\u5b9a\u4e49\u63d0\u793a\u6587\u4ef6\u7684\u8def\u5f84\n)\n\n# \u8ba9\u60a8\u7684 Crew \u5f00\u59cb\u5de5\u4f5c\uff01\ncrew.kickoff()\n</code></pre>"},{"location":"how-to/Customize-Prompts/#_5","title":"\u9ad8\u7ea7\u5b9a\u5236\u529f\u80fd","text":""},{"location":"how-to/Customize-Prompts/#language","title":"<code>language</code> \u5c5e\u6027","text":"<p>\u9664\u4e86 <code>prompt_file</code> \u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 <code>language</code> \u5c5e\u6027\u6307\u5b9a\u4ee3\u7406\u63d0\u793a\u7684\u8bed\u8a00\u3002\u8fd9\u786e\u4fdd\u4ee5\u6240\u9700\u7684\u8bed\u8a00\u751f\u6210\u63d0\u793a\uff0c\u8fdb\u4e00\u6b65\u589e\u5f3a CrewAI \u7684\u56fd\u9645\u5316\u80fd\u529b\u3002</p>"},{"location":"how-to/Customize-Prompts/#_6","title":"\u521b\u5efa\u81ea\u5b9a\u4e49\u63d0\u793a\u6587\u4ef6","text":"<p>\u81ea\u5b9a\u4e49\u63d0\u793a\u6587\u4ef6\u5e94\u91c7\u7528 JSON \u683c\u5f0f\uff0c\u5e76\u5305\u542b\u6240\u6709\u5fc5\u8981\u7684\u63d0\u793a\u6a21\u677f\u3002\u4ee5\u4e0b\u662f\u63d0\u793a JSON \u6587\u4ef6\u7684\u7b80\u5316\u793a\u4f8b\uff1a</p> <pre><code>{\n    \"system\": \"\u60a8\u662f\u4e00\u4e2a\u7cfb\u7edf\u6a21\u677f\u3002\",\n    \"prompt\": \"\u8fd9\u662f\u60a8\u7684\u63d0\u793a\u6a21\u677f\u3002\",\n    \"response\": \"\u8fd9\u662f\u60a8\u7684\u54cd\u5e94\u6a21\u677f\u3002\"\n}\n</code></pre>"},{"location":"how-to/Customize-Prompts/#_7","title":"\u81ea\u5b9a\u4e49\u63d0\u793a\u7684\u4f18\u52bf","text":"<ul> <li>\u589e\u5f3a\u7684\u7075\u6d3b\u6027: \u6839\u636e\u7279\u5b9a\u9879\u76ee\u9700\u6c42\u5b9a\u5236\u4ee3\u7406\u6c9f\u901a\u3002</li> <li>\u6539\u8fdb\u7684\u53ef\u7528\u6027: \u652f\u6301\u591a\u79cd\u8bed\u8a00\uff0c\u4f7f\u5176\u9002\u7528\u4e8e\u5168\u7403\u9879\u76ee\u3002</li> <li>\u4e00\u81f4\u6027: \u786e\u4fdd\u4e0d\u540c\u4ee3\u7406\u548c\u4efb\u52a1\u4e4b\u95f4\u63d0\u793a\u7ed3\u6784\u7684\u7edf\u4e00\u6027\u3002</li> </ul> <p>\u901a\u8fc7\u6574\u5408\u8fd9\u4e9b\u66f4\u65b0\uff0cCrewAI \u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u5b8c\u5168\u81ea\u5b9a\u4e49\u548c\u56fd\u9645\u5316\u5176\u4ee3\u7406\u63d0\u793a\u7684\u529f\u80fd\uff0c\u4f7f\u5e73\u53f0\u66f4\u52a0\u901a\u7528\u548c\u7528\u6237\u53cb\u597d\u3002</p>"},{"location":"how-to/Customizing-Agents/","title":"\u5728 CrewAI \u4e2d\u81ea\u5b9a\u4e49\u4ee3\u7406","text":""},{"location":"how-to/Customizing-Agents/#_1","title":"\u53ef\u81ea\u5b9a\u4e49\u5c5e\u6027","text":"<p>\u6253\u9020\u9ad8\u6548\u7684 CrewAI \u56e2\u961f\u7684\u5173\u952e\u5728\u4e8e\u80fd\u591f\u52a8\u6001\u5b9a\u5236\u60a8\u7684 AI \u4ee3\u7406\uff0c\u4ee5\u6ee1\u8db3\u4efb\u4f55\u9879\u76ee\u7684\u72ec\u7279\u9700\u6c42\u3002\u672c\u8282\u4ecb\u7ecd\u60a8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u57fa\u672c\u5c5e\u6027\u3002</p>"},{"location":"how-to/Customizing-Agents/#_2","title":"\u7528\u4e8e\u81ea\u5b9a\u4e49\u7684\u5173\u952e\u5c5e\u6027","text":"<ul> <li>\u89d2\u8272\uff1a<code>role</code> \u6307\u5b9a\u4ee3\u7406\u5728\u56e2\u961f\u4e2d\u7684\u5de5\u4f5c\uff0c\u4f8b\u5982\u201c\u5206\u6790\u5e08\u201d\u6216\u201c\u5ba2\u6237\u670d\u52a1\u4ee3\u8868\u201d\u3002</li> <li>\u76ee\u6807\uff1a<code>goal</code> \u5b9a\u4e49\u4ee3\u7406\u7684\u76ee\u6807\uff0c\u4e0e\u5176\u89d2\u8272\u548c\u56e2\u961f\u7684\u603b\u4f53\u76ee\u6807\u4fdd\u6301\u4e00\u81f4\u3002</li> <li>\u80cc\u666f\u6545\u4e8b\uff1a<code>backstory</code> \u4e3a\u4ee3\u7406\u7684\u89d2\u8272\u63d0\u4f9b\u6df1\u5ea6\uff0c\u4e30\u5bcc\u5176\u5728\u56e2\u961f\u4e2d\u7684\u52a8\u673a\u548c\u53c2\u4e0e\u5ea6\u3002</li> <li>\u5de5\u5177 (\u53ef\u9009)\uff1a<code>tools</code> \u8868\u793a\u4ee3\u7406\u6267\u884c\u4efb\u52a1\u6240\u4f7f\u7528\u7684\u80fd\u529b\u6216\u65b9\u6cd5\uff0c\u4ece\u7b80\u5355\u7684\u51fd\u6570\u5230\u590d\u6742\u7684\u96c6\u6210\u3002</li> <li>\u7f13\u5b58 (\u53ef\u9009)\uff1a<code>memory</code> \u786e\u5b9a\u4ee3\u7406\u662f\u5426\u5e94\u4f7f\u7528\u7f13\u5b58\u6765\u5b58\u50a8\u5de5\u5177\u4f7f\u7528\u60c5\u51b5\u3002</li> <li>\u6700\u5927 RPM\uff1a\u8bbe\u7f6e\u6bcf\u5206\u949f\u6700\u5927\u8bf7\u6c42\u6570 (<code>max_rpm</code>)\u3002\u6b64\u5c5e\u6027\u662f\u53ef\u9009\u7684\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a <code>None</code> \u8868\u793a\u6ca1\u6709\u9650\u5236\uff0c\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u5bf9\u5916\u90e8\u670d\u52a1\u8fdb\u884c\u65e0\u9650\u6b21\u67e5\u8be2\u3002</li> <li>\u8be6\u7ec6 (\u53ef\u9009)\uff1a<code>verbose</code> \u542f\u7528\u4ee3\u7406\u64cd\u4f5c\u7684\u8be6\u7ec6\u65e5\u5fd7\u8bb0\u5f55\uff0c\u8fd9\u5bf9\u8c03\u8bd5\u548c\u4f18\u5316\u5f88\u6709\u7528\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u63d0\u4f9b\u4e86\u5bf9\u4ee3\u7406\u6267\u884c\u8fc7\u7a0b\u7684\u6d1e\u5bdf\u529b\uff0c\u6709\u52a9\u4e8e\u4f18\u5316\u6027\u80fd\u3002</li> <li>\u5141\u8bb8\u59d4\u6d3e (\u53ef\u9009)\uff1a<code>allow_delegation</code> \u63a7\u5236\u662f\u5426\u5141\u8bb8\u4ee3\u7406\u5c06\u4efb\u52a1\u59d4\u6d3e\u7ed9\u5176\u4ed6\u4ee3\u7406\u3002</li> <li>\u6700\u5927\u8fed\u4ee3\u6b21\u6570 (\u53ef\u9009)\uff1a<code>max_iter</code> \u5c5e\u6027\u5141\u8bb8\u7528\u6237\u5b9a\u4e49\u4ee3\u7406\u4e3a\u5355\u4e2a\u4efb\u52a1\u6267\u884c\u7684\u6700\u5927\u8fed\u4ee3\u6b21\u6570\uff0c\u9632\u6b62\u65e0\u9650\u5faa\u73af\u6216\u8fc7\u957f\u7684\u6267\u884c\u65f6\u95f4\u3002\u9ed8\u8ba4\u503c\u8bbe\u7f6e\u4e3a 25\uff0c\u5728\u5f7b\u5e95\u6027\u548c\u6548\u7387\u4e4b\u95f4\u53d6\u5f97\u5e73\u8861\u3002\u4e00\u65e6\u4ee3\u7406\u63a5\u8fd1\u6b64\u6570\u5b57\uff0c\u5b83\u5c06\u5c3d\u529b\u7ed9\u51fa\u597d\u7684\u7b54\u6848\u3002</li> <li>\u6700\u5927\u6267\u884c\u65f6\u95f4 (\u53ef\u9009)\uff1a<code>max_execution_time</code> \u8bbe\u7f6e\u4ee3\u7406\u5b8c\u6210\u4efb\u52a1\u7684\u6700\u957f\u65f6\u95f4\u3002</li> <li>\u7cfb\u7edf\u6a21\u677f (\u53ef\u9009)\uff1a<code>system_template</code> \u5b9a\u4e49\u4ee3\u7406\u7684\u7cfb\u7edf\u683c\u5f0f\u3002</li> <li>\u63d0\u793a\u6a21\u677f (\u53ef\u9009)\uff1a<code>prompt_template</code> \u5b9a\u4e49\u4ee3\u7406\u7684\u63d0\u793a\u683c\u5f0f\u3002</li> <li>\u54cd\u5e94\u6a21\u677f (\u53ef\u9009)\uff1a<code>response_template</code> \u5b9a\u4e49\u4ee3\u7406\u7684\u54cd\u5e94\u683c\u5f0f\u3002</li> </ul>"},{"location":"how-to/Customizing-Agents/#_3","title":"\u9ad8\u7ea7\u81ea\u5b9a\u4e49\u9009\u9879","text":"<p>\u9664\u4e86\u57fa\u672c\u5c5e\u6027\u4e4b\u5916\uff0cCrewAI \u8fd8\u5141\u8bb8\u8fdb\u884c\u66f4\u6df1\u5c42\u6b21\u7684\u81ea\u5b9a\u4e49\uff0c\u4ee5\u663e\u7740\u589e\u5f3a\u4ee3\u7406\u7684\u884c\u4e3a\u548c\u80fd\u529b\u3002</p>"},{"location":"how-to/Customizing-Agents/#_4","title":"\u8bed\u8a00\u6a21\u578b\u81ea\u5b9a\u4e49","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u7279\u5b9a\u7684\u8bed\u8a00\u6a21\u578b (<code>llm</code>) \u548c\u51fd\u6570\u8c03\u7528\u8bed\u8a00\u6a21\u578b (<code>function_calling_llm</code>) \u81ea\u5b9a\u4e49\u4ee3\u7406\uff0c\u4ece\u800c\u5bf9\u4ee3\u7406\u7684\u5904\u7406\u548c\u51b3\u7b56\u80fd\u529b\u8fdb\u884c\u9ad8\u7ea7\u63a7\u5236\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8bbe\u7f6e <code>function_calling_llm</code> \u5141\u8bb8\u8986\u76d6\u9ed8\u8ba4\u7684\u56e2\u961f\u51fd\u6570\u8c03\u7528\u8bed\u8a00\u6a21\u578b\uff0c\u4ece\u800c\u63d0\u4f9b\u66f4\u5927\u7a0b\u5ea6\u7684\u81ea\u5b9a\u4e49\u3002</p>"},{"location":"how-to/Customizing-Agents/#_5","title":"\u6027\u80fd\u548c\u8c03\u8bd5\u8bbe\u7f6e","text":"<p>\u8c03\u6574\u4ee3\u7406\u7684\u6027\u80fd\u5e76\u76d1\u63a7\u5176\u64cd\u4f5c\u5bf9\u4e8e\u9ad8\u6548\u6267\u884c\u4efb\u52a1\u81f3\u5173\u91cd\u8981\u3002</p>"},{"location":"how-to/Customizing-Agents/#rpm","title":"\u8be6\u7ec6\u6a21\u5f0f\u548c RPM \u9650\u5236","text":"<ul> <li>\u8be6\u7ec6\u6a21\u5f0f\uff1a<code>verbose</code> \u542f\u7528\u4ee3\u7406\u64cd\u4f5c\u7684\u8be6\u7ec6\u65e5\u5fd7\u8bb0\u5f55\uff0c\u8fd9\u5bf9\u8c03\u8bd5\u548c\u4f18\u5316\u5f88\u6709\u7528\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u63d0\u4f9b\u4e86\u5bf9\u4ee3\u7406\u6267\u884c\u8fc7\u7a0b\u7684\u6d1e\u5bdf\u529b\uff0c\u6709\u52a9\u4e8e\u4f18\u5316\u6027\u80fd\u3002</li> <li>RPM \u9650\u5236\uff1a\u8bbe\u7f6e\u6bcf\u5206\u949f\u6700\u5927\u8bf7\u6c42\u6570 (<code>max_rpm</code>)\u3002\u6b64\u5c5e\u6027\u662f\u53ef\u9009\u7684\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a <code>None</code> \u8868\u793a\u6ca1\u6709\u9650\u5236\uff0c\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u5bf9\u5916\u90e8\u670d\u52a1\u8fdb\u884c\u65e0\u9650\u6b21\u67e5\u8be2\u3002</li> </ul>"},{"location":"how-to/Customizing-Agents/#_6","title":"\u4efb\u52a1\u6267\u884c\u7684\u6700\u5927\u8fed\u4ee3\u6b21\u6570","text":"<p><code>max_iter</code> \u5c5e\u6027\u5141\u8bb8\u7528\u6237\u5b9a\u4e49\u4ee3\u7406\u4e3a\u5355\u4e2a\u4efb\u52a1\u6267\u884c\u7684\u6700\u5927\u8fed\u4ee3\u6b21\u6570\uff0c\u9632\u6b62\u65e0\u9650\u5faa\u73af\u6216\u8fc7\u957f\u7684\u6267\u884c\u65f6\u95f4\u3002\u9ed8\u8ba4\u503c\u8bbe\u7f6e\u4e3a 25\uff0c\u5728\u5f7b\u5e95\u6027\u548c\u6548\u7387\u4e4b\u95f4\u53d6\u5f97\u5e73\u8861\u3002\u4e00\u65e6\u4ee3\u7406\u63a5\u8fd1\u6b64\u6570\u5b57\uff0c\u5b83\u5c06\u5c3d\u529b\u7ed9\u51fa\u597d\u7684\u7b54\u6848\u3002</p>"},{"location":"how-to/Customizing-Agents/#_7","title":"\u81ea\u5b9a\u4e49\u4ee3\u7406\u548c\u5de5\u5177","text":"<p>\u901a\u8fc7\u5728\u521d\u59cb\u5316\u671f\u95f4\u5b9a\u4e49\u4ee3\u7406\u7684\u5c5e\u6027\u548c\u5de5\u5177\u6765\u81ea\u5b9a\u4e49\u4ee3\u7406\u3002\u5de5\u5177\u5bf9\u4e8e\u4ee3\u7406\u7684\u529f\u80fd\u81f3\u5173\u91cd\u8981\uff0c\u4f7f\u4ee3\u7406\u80fd\u591f\u6267\u884c\u4e13\u95e8\u7684\u4efb\u52a1\u3002<code>tools</code> \u5c5e\u6027\u5e94\u8be5\u662f\u4ee3\u7406\u53ef\u4ee5\u4f7f\u7528\u7684\u5de5\u5177\u6570\u7ec4\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u88ab\u521d\u59cb\u5316\u4e3a\u7a7a\u5217\u8868\u3002\u53ef\u4ee5\u5728\u4ee3\u7406\u521d\u59cb\u5316\u540e\u6dfb\u52a0\u6216\u4fee\u6539\u5de5\u5177\uff0c\u4ee5\u9002\u5e94\u65b0\u7684\u9700\u6c42\u3002</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"how-to/Customizing-Agents/#_8","title":"\u793a\u4f8b\uff1a\u4e3a\u4ee3\u7406\u5206\u914d\u5de5\u5177","text":"<pre><code>import os\nfrom crewai import Agent\nfrom crewai_tools import SerperDevTool\n\n# \u8bbe\u7f6e\u5de5\u5177\u521d\u59cb\u5316\u7684 API \u5bc6\u94a5\nos.environ[\"OPENAI_API_KEY\"] = \"\u60a8\u7684\u5bc6\u94a5\"\nos.environ[\"SERPER_API_KEY\"] = \"\u60a8\u7684\u5bc6\u94a5\"\n\n# \u521d\u59cb\u5316\u641c\u7d22\u5de5\u5177\nsearch_tool = SerperDevTool()\n\n# \u4f7f\u7528\u9ad8\u7ea7\u9009\u9879\u521d\u59cb\u5316\u4ee3\u7406\nagent = Agent(\n  role='\u7814\u7a76\u5206\u6790\u5e08',\n  goal='\u63d0\u4f9b\u6700\u65b0\u7684\u5e02\u573a\u5206\u6790',\n  backstory='\u4e00\u4f4d\u5bf9\u5e02\u573a\u8d8b\u52bf\u6709\u654f\u9510\u773c\u5149\u7684\u4e13\u5bb6\u5206\u6790\u5e08\u3002',\n  tools=[search_tool],\n  memory=True, # \u542f\u7528\u5185\u5b58\n  verbose=True,\n  max_rpm=None, # \u6bcf\u5206\u949f\u8bf7\u6c42\u6570\u6ca1\u6709\u9650\u5236\n  max_iter=25, # \u6700\u5927\u8fed\u4ee3\u6b21\u6570\u7684\u9ed8\u8ba4\u503c\n  allow_delegation=False\n)\n</code></pre>"},{"location":"how-to/Customizing-Agents/#_9","title":"\u59d4\u6d3e\u548c\u81ea\u4e3b\u6743","text":"<p>\u63a7\u5236\u4ee3\u7406\u59d4\u6d3e\u4efb\u52a1\u6216\u63d0\u51fa\u95ee\u9898\u7684\u80fd\u529b\u5bf9\u4e8e\u5b9a\u5236\u5176\u81ea\u4e3b\u6743\u548c\u5728 CrewAI \u6846\u67b6\u5185\u7684\u534f\u4f5c\u52a8\u6001\u81f3\u5173\u91cd\u8981\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>allow_delegation</code> \u5c5e\u6027\u8bbe\u7f6e\u4e3a <code>True</code>\uff0c\u4f7f\u4ee3\u7406\u80fd\u591f\u6839\u636e\u9700\u8981\u5bfb\u6c42\u5e2e\u52a9\u6216\u59d4\u6d3e\u4efb\u52a1\u3002\u8fd9\u79cd\u9ed8\u8ba4\u884c\u4e3a\u4fc3\u8fdb\u4e86 CrewAI \u751f\u6001\u7cfb\u7edf\u5185\u7684\u534f\u4f5c\u89e3\u51b3\u95ee\u9898\u548c\u6548\u7387\u3002\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u7981\u7528\u59d4\u6d3e\u4ee5\u6ee1\u8db3\u7279\u5b9a\u7684\u64cd\u4f5c\u8981\u6c42\u3002</p>"},{"location":"how-to/Customizing-Agents/#_10","title":"\u793a\u4f8b\uff1a\u7981\u7528\u4ee3\u7406\u7684\u59d4\u6d3e","text":"<pre><code>agent = Agent(\n  role='\u5185\u5bb9\u4f5c\u8005',\n  goal='\u64b0\u5199\u5173\u4e8e\u5e02\u573a\u8d8b\u52bf\u7684\u5f15\u4eba\u5165\u80dc\u7684\u5185\u5bb9',\n  backstory='\u4e00\u4f4d\u5728\u5e02\u573a\u5206\u6790\u65b9\u9762\u5177\u6709\u4e13\u4e1a\u77e5\u8bc6\u7684\u7ecf\u9a8c\u4e30\u5bcc\u7684\u4f5c\u5bb6\u3002',\n  allow_delegation=False # \u7981\u7528\u59d4\u6d3e\n)\n</code></pre>"},{"location":"how-to/Customizing-Agents/#_11","title":"\u7ed3\u8bba","text":"<p>\u901a\u8fc7\u8bbe\u7f6e\u89d2\u8272\u3001\u76ee\u6807\u3001\u80cc\u666f\u6545\u4e8b\u548c\u5de5\u5177\uff0c\u4ee5\u53ca\u8bed\u8a00\u6a21\u578b\u81ea\u5b9a\u4e49\u3001\u5185\u5b58\u3001\u6027\u80fd\u8bbe\u7f6e\u548c\u59d4\u6d3e\u504f\u597d\u7b49\u9ad8\u7ea7\u9009\u9879\uff0c\u5728 CrewAI \u4e2d\u81ea\u5b9a\u4e49\u4ee3\u7406\uff0c\u53ef\u4ee5\u6253\u9020\u51fa\u4e00\u652f\u7ec6\u81f4\u5165\u5fae\u4e14\u80fd\u529b\u5f3a\u5927\u7684 AI \u56e2\u961f\uff0c\u968f\u65f6\u51c6\u5907\u8fce\u63a5\u590d\u6742\u6311\u6218\u3002</p>"},{"location":"how-to/Force-Tool-Ouput-as-Result/","title":"\u5f3a\u5236\u5de5\u5177\u8f93\u51fa\u4f5c\u4e3a\u7ed3\u679c","text":""},{"location":"how-to/Force-Tool-Ouput-as-Result/#_1","title":"\u7b80\u4ecb","text":"<p>\u5728 CrewAI \u4e2d\uff0c\u60a8\u53ef\u4ee5\u5f3a\u5236\u5c06\u5de5\u5177\u8f93\u51fa\u4f5c\u4e3a\u4ee3\u7406\u4efb\u52a1\u7684\u7ed3\u679c\u3002\u5f53\u60a8\u5e0c\u671b\u786e\u4fdd\u6355\u83b7\u5de5\u5177\u8f93\u51fa\u5e76\u5c06\u5176\u4f5c\u4e3a\u4efb\u52a1\u7ed3\u679c\u8fd4\u56de\uff0c\u5e76\u907f\u514d\u4ee3\u7406\u5728\u4efb\u52a1\u6267\u884c\u671f\u95f4\u4fee\u6539\u8f93\u51fa\u65f6\uff0c\u6b64\u529f\u80fd\u975e\u5e38\u6709\u7528\u3002</p>"},{"location":"how-to/Force-Tool-Ouput-as-Result/#_2","title":"\u5f3a\u5236\u5de5\u5177\u8f93\u51fa\u4f5c\u4e3a\u7ed3\u679c","text":"<p>\u8981\u5f3a\u5236\u5c06\u5de5\u5177\u8f93\u51fa\u4f5c\u4e3a\u4ee3\u7406\u4efb\u52a1\u7684\u7ed3\u679c\uff0c\u60a8\u53ef\u4ee5\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u5c06 <code>result_as_answer</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>True</code>\u3002\u6b64\u53c2\u6570\u53ef\u786e\u4fdd\u6355\u83b7\u5de5\u5177\u8f93\u51fa\u5e76\u5c06\u5176\u4f5c\u4e3a\u4efb\u52a1\u7ed3\u679c\u8fd4\u56de\uff0c\u800c\u65e0\u9700\u4ee3\u7406\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u3002</p> <p>\u4ee5\u4e0b\u662f\u5982\u4f55\u5f3a\u5236\u5c06\u5de5\u5177\u8f93\u51fa\u4f5c\u4e3a\u4ee3\u7406\u4efb\u52a1\u7684\u7ed3\u679c\u7684\u793a\u4f8b\uff1a</p> <pre><code># ...\n# \u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5de5\u5177\uff0c\u5c06\u7ed3\u679c\u4f5c\u4e3a\u7b54\u6848\u8fd4\u56de\ncoding_agent = Agent(\n        role=\"\u6570\u636e\u79d1\u5b66\u5bb6\",\n        goal=\"\u751f\u6210\u5173\u4e8e AI \u7684\u7cbe\u5f69\u62a5\u544a\",\n        backstory=\"\u60a8\u4f7f\u7528\u6570\u636e\u548c AI\",\n        tools=[MyCustomTool(result_as_answer=True)],\n    )\n# ...\n</code></pre>"},{"location":"how-to/Force-Tool-Ouput-as-Result/#_3","title":"\u5de5\u4f5c\u6d41\u7a0b\u5b9e\u9645\u5e94\u7528","text":"<ol> <li>\u4efb\u52a1\u6267\u884c\uff1a\u4ee3\u7406\u4f7f\u7528\u63d0\u4f9b\u7684\u5de5\u5177\u6267\u884c\u4efb\u52a1\u3002</li> <li>\u5de5\u5177\u8f93\u51fa\uff1a\u5de5\u5177\u751f\u6210\u8f93\u51fa\uff0c\u8be5\u8f93\u51fa\u88ab\u6355\u83b7\u4e3a\u4efb\u52a1\u7ed3\u679c\u3002</li> <li>\u4ee3\u7406\u4ea4\u4e92\uff1a\u4ee3\u7406\u53ef\u4ee5\u4ece\u5de5\u5177\u4e2d\u53cd\u601d\u548c\u5b66\u4e60\uff0c\u4f46\u4e0d\u4f1a\u4fee\u6539\u8f93\u51fa\u3002</li> <li>\u7ed3\u679c\u8fd4\u56de\uff1a\u5de5\u5177\u8f93\u51fa\u4f5c\u4e3a\u4efb\u52a1\u7ed3\u679c\u8fd4\u56de\uff0c\u6ca1\u6709\u4efb\u4f55\u4fee\u6539\u3002</li> </ol>"},{"location":"how-to/Hierarchical/","title":"\u5728 CrewAI \u4e2d\u5b9e\u73b0\u5206\u5c42\u6d41\u7a0b","text":""},{"location":"how-to/Hierarchical/#_1","title":"\u7b80\u4ecb","text":"<p>CrewAI \u4e2d\u7684\u5206\u5c42\u6d41\u7a0b\u5f15\u5165\u4e86\u4e00\u79cd\u7ed3\u6784\u5316\u7684\u4efb\u52a1\u7ba1\u7406\u65b9\u6cd5\uff0c\u6a21\u62df\u4e86\u4f20\u7edf\u7ec4\u7ec7\u5c42\u7ea7\u7ed3\u6784\uff0c\u4ee5\u5b9e\u73b0\u9ad8\u6548\u7684\u4efb\u52a1\u59d4\u6d3e\u548c\u6267\u884c\u3002\u8fd9\u79cd\u7cfb\u7edf\u5316\u7684\u5de5\u4f5c\u6d41\u7a0b\u901a\u8fc7\u786e\u4fdd\u4ee5\u6700\u4f73\u6548\u7387\u548c\u51c6\u786e\u6027\u5904\u7406\u4efb\u52a1\u6765\u589e\u5f3a\u9879\u76ee\u6210\u679c\u3002</p> <p>\u590d\u6742\u6027\u548c\u6548\u7387</p> <p>\u5206\u5c42\u6d41\u7a0b\u65e8\u5728\u5229\u7528 GPT-4 \u7b49\u9ad8\u7ea7\u6a21\u578b\uff0c\u5728\u5904\u7406\u590d\u6742\u4efb\u52a1\u65f6\u4f18\u5316\u4ee4\u724c\u4f7f\u7528\uff0c\u540c\u65f6\u63d0\u9ad8\u6548\u7387\u3002</p>"},{"location":"how-to/Hierarchical/#_2","title":"\u5206\u5c42\u6d41\u7a0b\u6982\u8ff0","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCrewAI \u4e2d\u7684\u4efb\u52a1\u662f\u901a\u8fc7\u987a\u5e8f\u6d41\u7a0b\u7ba1\u7406\u7684\u3002\u4f46\u662f\uff0c\u91c7\u7528\u5206\u5c42\u65b9\u6cd5\u53ef\u4ee5\u5728\u4efb\u52a1\u7ba1\u7406\u4e2d\u5b9e\u73b0\u6e05\u6670\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u5176\u4e2d\u201c\u7ecf\u7406\u201d\u4ee3\u7406\u534f\u8c03\u5de5\u4f5c\u6d41\u7a0b\u3001\u59d4\u6d3e\u4efb\u52a1\u5e76\u9a8c\u8bc1\u7ed3\u679c\uff0c\u4ee5\u5b9e\u73b0\u7b80\u5316\u548c\u6709\u6548\u7684\u6267\u884c\u3002\u8be5\u7ecf\u7406\u4ee3\u7406\u73b0\u5728\u53ef\u4ee5\u7531 CrewAI \u81ea\u52a8\u521b\u5efa\uff0c\u4e5f\u53ef\u4ee5\u7531\u7528\u6237\u660e\u786e\u8bbe\u7f6e\u3002</p>"},{"location":"how-to/Hierarchical/#_3","title":"\u4e3b\u8981\u7279\u70b9","text":"<ul> <li>\u4efb\u52a1\u59d4\u6d3e\uff1a\u7ecf\u7406\u4ee3\u7406\u6839\u636e\u56e2\u961f\u6210\u5458\u7684\u89d2\u8272\u548c\u80fd\u529b\u5206\u914d\u4efb\u52a1\u3002</li> <li>\u7ed3\u679c\u9a8c\u8bc1\uff1a\u7ecf\u7406\u8bc4\u4f30\u7ed3\u679c\u4ee5\u786e\u4fdd\u5176\u7b26\u5408\u8981\u6c42\u7684\u6807\u51c6\u3002</li> <li>\u9ad8\u6548\u7684\u5de5\u4f5c\u6d41\u7a0b\uff1a\u6a21\u62df\u4f01\u4e1a\u7ed3\u6784\uff0c\u63d0\u4f9b\u6709\u6761\u7406\u7684\u4efb\u52a1\u7ba1\u7406\u65b9\u6cd5\u3002</li> </ul>"},{"location":"how-to/Hierarchical/#_4","title":"\u5b9e\u65bd\u5206\u5c42\u6d41\u7a0b","text":"<p>\u8981\u5229\u7528\u5206\u5c42\u6d41\u7a0b\uff0c\u5fc5\u987b\u5c06\u6d41\u7a0b\u5c5e\u6027\u660e\u786e\u8bbe\u7f6e\u4e3a <code>Process.hierarchical</code>\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u884c\u4e3a\u662f <code>Process.sequential</code>\u3002\u5b9a\u4e49\u4e00\u4e2a\u5177\u6709\u6307\u5b9a\u7ecf\u7406\u7684\u56e2\u961f\uff0c\u5e76\u5efa\u7acb\u6e05\u6670\u7684\u6307\u6325\u94fe\u3002</p> <p>\u5de5\u5177\u548c\u4ee3\u7406\u5206\u914d</p> <p>\u5728\u4ee3\u7406\u7ea7\u522b\u5206\u914d\u5de5\u5177\uff0c\u4ee5\u65b9\u4fbf\u5728\u7ecf\u7406\u7684\u6307\u5bfc\u4e0b\u7531\u6307\u5b9a\u7684\u4ee3\u7406\u6267\u884c\u4efb\u52a1\u59d4\u6d3e\u548c\u6267\u884c\u3002\u8fd8\u53ef\u4ee5\u5728\u4efb\u52a1\u7ea7\u522b\u6307\u5b9a\u5de5\u5177\uff0c\u4ee5\u4fbf\u5728\u4efb\u52a1\u6267\u884c\u671f\u95f4\u7cbe\u786e\u63a7\u5236\u5de5\u5177\u7684\u53ef\u7528\u6027\u3002</p> <p>\u7ecf\u7406 LLM \u8981\u6c42</p> <p>\u914d\u7f6e <code>manager_llm</code> \u53c2\u6570\u5bf9\u4e8e\u5206\u5c42\u6d41\u7a0b\u81f3\u5173\u91cd\u8981\u3002\u7cfb\u7edf\u9700\u8981\u8bbe\u7f6e\u7ecf\u7406 LLM \u624d\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u786e\u4fdd\u91cf\u8eab\u5b9a\u5236\u7684\u51b3\u7b56\u3002</p> <pre><code>from langchain_openai import ChatOpenAI\nfrom crewai import Crew, Process, Agent\n\n# \u4f7f\u7528\u80cc\u666f\u6545\u4e8b\u3001\u7f13\u5b58\u548c\u8be6\u7ec6\u6a21\u5f0f\u7684\u5c5e\u6027\u5b9a\u4e49\u4ee3\u7406\nresearcher = Agent(\n    role='\u7814\u7a76\u5458',\n    goal='\u8fdb\u884c\u6df1\u5165\u5206\u6790',\n    backstory='\u7ecf\u9a8c\u4e30\u5bcc\u7684\u6570\u636e\u5206\u6790\u5e08\uff0c\u5584\u4e8e\u53d1\u73b0\u9690\u85cf\u8d8b\u52bf\u3002',\n    cache=True,\n    verbose=False,\n    # tools=[]  # \u53ef\u4ee5\u9009\u62e9\u6307\u5b9a\uff1b\u9ed8\u8ba4\u4e3a\u7a7a\u5217\u8868\n)\nwriter = Agent(\n    role='\u4f5c\u5bb6',\n    goal='\u521b\u5efa\u5f15\u4eba\u5165\u80dc\u7684\u5185\u5bb9',\n    backstory='\u5bcc\u6709\u521b\u9020\u529b\u7684\u4f5c\u5bb6\uff0c\u70ed\u8877\u4e8e\u5728\u6280\u672f\u9886\u57df\u8bb2\u6545\u4e8b\u3002',\n    cache=True,\n    verbose=False,\n    # tools=[]  # \u53ef\u9009\u62e9\u6307\u5b9a\u5de5\u5177\uff1b\u9ed8\u8ba4\u4e3a\u7a7a\u5217\u8868\n)\n\n# \u5efa\u7acb\u5177\u6709\u5206\u5c42\u6d41\u7a0b\u548c\u9644\u52a0\u914d\u7f6e\u7684\u56e2\u961f\nproject_crew = Crew(\n    tasks=[...],  # \u5728\u7ecf\u7406\u7684\u76d1\u7763\u4e0b\u59d4\u6d3e\u548c\u6267\u884c\u7684\u4efb\u52a1\n    agents=[researcher, writer],\n    manager_llm=ChatOpenAI(temperature=0, model=\"gpt-4\"),  # \u5982\u679c\u672a\u8bbe\u7f6e manager_agent\uff0c\u5219\u4e3a\u5fc5\u586b\u9879\n    process=Process.hierarchical,  # \u6307\u5b9a\u5206\u5c42\u7ba1\u7406\u65b9\u6cd5\n    memory=True,  # \u542f\u7528\u5185\u5b58\u4f7f\u7528\u4ee5\u589e\u5f3a\u4efb\u52a1\u6267\u884c\n    manager_agent=None,  # \u53ef\u9009\uff1a\u660e\u786e\u8bbe\u7f6e\u7279\u5b9a\u4ee3\u7406\u4f5c\u4e3a\u7ecf\u7406\uff0c\u800c\u4e0d\u662f manager_llm\n)\n</code></pre>"},{"location":"how-to/Hierarchical/#_5","title":"\u5de5\u4f5c\u6d41\u7a0b\u5b9e\u9645\u5e94\u7528","text":"<ol> <li>\u4efb\u52a1\u5206\u914d\uff1a\u7ecf\u7406\u4ece\u6218\u7565\u4e0a\u5206\u914d\u4efb\u52a1\uff0c\u540c\u65f6\u8003\u8651\u6bcf\u4e2a\u4ee3\u7406\u7684\u80fd\u529b\u548c\u53ef\u7528\u5de5\u5177\u3002</li> <li>\u6267\u884c\u548c\u5ba1\u67e5\uff1a\u4ee3\u7406\u5b8c\u6210\u5176\u4efb\u52a1\uff0c\u53ef\u4ee5\u9009\u62e9\u5f02\u6b65\u6267\u884c\u548c\u56de\u8c03\u51fd\u6570\u4ee5\u7b80\u5316\u5de5\u4f5c\u6d41\u7a0b\u3002</li> <li>\u987a\u5e8f\u4efb\u52a1\u8fdb\u5c55\uff1a\u5c3d\u7ba1\u662f\u4e00\u4e2a\u5206\u5c42\u6d41\u7a0b\uff0c\u4f46\u4efb\u52a1\u9075\u5faa\u903b\u8f91\u987a\u5e8f\u4ee5\u987a\u5229\u8fdb\u884c\uff0c\u5e76\u7531\u7ecf\u7406\u8fdb\u884c\u76d1\u7763\u3002</li> </ol>"},{"location":"how-to/Hierarchical/#_6","title":"\u7ed3\u8bba","text":"<p>\u5728 CrewAI \u4e2d\u91c7\u7528\u5206\u5c42\u6d41\u7a0b\uff0c\u5e76\u8fdb\u884c\u6b63\u786e\u7684\u914d\u7f6e\u548c\u7406\u89e3\u7cfb\u7edf\u7684\u80fd\u529b\uff0c\u53ef\u4ee5\u4fc3\u8fdb\u6709\u6761\u7406\u548c\u9ad8\u6548\u7684\u9879\u76ee\u7ba1\u7406\u65b9\u6cd5\u3002\u5229\u7528\u9ad8\u7ea7\u529f\u80fd\u548c\u81ea\u5b9a\u4e49\u9879\u6839\u636e\u60a8\u7684\u7279\u5b9a\u9700\u6c42\u5b9a\u5236\u5de5\u4f5c\u6d41\u7a0b\uff0c\u786e\u4fdd\u6700\u4f73\u7684\u4efb\u52a1\u6267\u884c\u548c\u9879\u76ee\u6210\u529f\u3002</p>"},{"location":"how-to/Human-Input-on-Execution/","title":"\u4ee3\u7406\u6267\u884c\u4e2d\u7684\u4eba\u5de5\u8f93\u5165","text":"<p>\u5728\u4ee3\u7406\u6267\u884c\u7684\u51e0\u79cd\u60c5\u51b5\u4e0b\uff0c\u4eba\u5de5\u8f93\u5165\u81f3\u5173\u91cd\u8981\uff0c\u5b83\u5141\u8bb8\u4ee3\u7406\u5728\u5fc5\u8981\u65f6\u8bf7\u6c42\u66f4\u591a\u4fe1\u606f\u6216\u6f84\u6e05\u3002\u6b64\u529f\u80fd\u5728\u590d\u6742\u51b3\u7b56\u8fc7\u7a0b\u6216\u4ee3\u7406\u9700\u8981\u66f4\u591a\u7ec6\u8282\u624d\u80fd\u6709\u6548\u5b8c\u6210\u4efb\u52a1\u65f6\u7279\u522b\u6709\u7528\u3002</p>"},{"location":"how-to/Human-Input-on-Execution/#crewai","title":"\u5728 CrewAI \u4e2d\u4f7f\u7528\u4eba\u5de5\u8f93\u5165","text":"<p>\u8981\u5c06\u4eba\u5de5\u8f93\u5165\u96c6\u6210\u5230\u4ee3\u7406\u6267\u884c\u4e2d\uff0c\u8bf7\u5728\u4efb\u52a1\u5b9a\u4e49\u4e2d\u8bbe\u7f6e <code>human_input</code> \u6807\u5fd7\u3002\u542f\u7528\u540e\uff0c\u4ee3\u7406\u4f1a\u5728\u7ed9\u51fa\u6700\u7ec8\u7b54\u6848\u4e4b\u524d\u63d0\u793a\u7528\u6237\u8f93\u5165\u3002\u6b64\u8f93\u5165\u53ef\u4ee5\u63d0\u4f9b\u989d\u5916\u7684\u4e0a\u4e0b\u6587\u3001\u6f84\u6e05\u6b67\u4e49\u6216\u9a8c\u8bc1\u4ee3\u7406\u7684\u8f93\u51fa\u3002</p>"},{"location":"how-to/Human-Input-on-Execution/#_2","title":"\u793a\u4f8b","text":"<pre><code>pip install crewai\n</code></pre> <pre><code>import os\nfrom crewai import Agent, Task, Crew\nfrom crewai_tools import SerperDevTool\n\nos.environ[\"SERPER_API_KEY\"] = \"\u60a8\u7684\u5bc6\u94a5\"  # serper.dev API \u5bc6\u94a5\nos.environ[\"OPENAI_API_KEY\"] = \"\u60a8\u7684\u5bc6\u94a5\"\n\n# \u52a0\u8f7d\u5de5\u5177\nsearch_tool = SerperDevTool()\n\n# \u4f7f\u7528\u89d2\u8272\u3001\u76ee\u6807\u3001\u5de5\u5177\u548c\u5176\u4ed6\u5c5e\u6027\u5b9a\u4e49\u60a8\u7684\u4ee3\u7406\nresearcher = Agent(\n    role='\u9ad8\u7ea7\u7814\u7a76\u5206\u6790\u5e08',\n    goal='\u53d1\u73b0\u4eba\u5de5\u667a\u80fd\u548c\u6570\u636e\u79d1\u5b66\u9886\u57df\u7684\u5c16\u7aef\u53d1\u5c55',\n    backstory=(\n        \"\u60a8\u662f\u4e00\u5bb6\u9886\u5148\u79d1\u6280\u667a\u5e93\u7684\u9ad8\u7ea7\u7814\u7a76\u5206\u6790\u5e08\u3002\"\n        \"\u60a8\u7684\u4e13\u957f\u5728\u4e8e\u8bc6\u522b\u4eba\u5de5\u667a\u80fd\u548c\u6570\u636e\u79d1\u5b66\u9886\u57df\u7684\u65b0\u5174\u8d8b\u52bf\u548c\u6280\u672f\u3002\"\n        \"\u60a8\u5177\u6709\u5256\u6790\u590d\u6742\u6570\u636e\u548c\u63d0\u51fa\u53ef\u64cd\u4f5c\u89c1\u89e3\u7684\u8bc0\u7a8d\u3002\"\n    ),\n    verbose=True,\n    allow_delegation=False,\n    tools=[search_tool]\n)\nwriter = Agent(\n    role='\u79d1\u6280\u5185\u5bb9\u7b56\u7565\u5e08',\n    goal='\u5236\u4f5c\u5173\u4e8e\u6280\u672f\u8fdb\u6b65\u7684\u5f15\u4eba\u5165\u80dc\u7684\u5185\u5bb9',\n    backstory=(\n        \"\u60a8\u662f\u4e00\u4f4d\u8457\u540d\u7684\u79d1\u6280\u5185\u5bb9\u7b56\u7565\u5e08\uff0c\u4ee5\u60a8\u5bf9\u6280\u672f\u548c\u521b\u65b0\u7684\u6df1\u523b\u89c1\u89e3\u548c\u5f15\u4eba\u5165\u80dc\u7684\u6587\u7ae0\u800c\u95fb\u540d\u3002\"\n        \"\u51ed\u501f\u5bf9\u79d1\u6280\u884c\u4e1a\u7684\u6df1\u5165\u4e86\u89e3\uff0c\u60a8\u5c06\u590d\u6742\u7684\u6982\u5ff5\u8f6c\u5316\u4e3a\u5f15\u4eba\u5165\u80dc\u7684\u53d9\u8ff0\u3002\"\n    ),\n    verbose=True,\n    allow_delegation=True,\n    tools=[search_tool],\n    cache=False,  # \u7981\u7528\u6b64\u4ee3\u7406\u7684\u7f13\u5b58\n)\n\n# \u4e3a\u60a8\u7684\u4ee3\u7406\u521b\u5efa\u4efb\u52a1\ntask1 = Task(\n    description=(\n        \"\u5bf9 2024 \u5e74\u4eba\u5de5\u667a\u80fd\u7684\u6700\u65b0\u8fdb\u5c55\u8fdb\u884c\u5168\u9762\u5206\u6790\u3002\"\n        \"\u786e\u5b9a\u5173\u952e\u8d8b\u52bf\u3001\u7a81\u7834\u6027\u6280\u672f\u548c\u6f5c\u5728\u7684\u884c\u4e1a\u5f71\u54cd\u3002\"\n        \"\u5c06\u60a8\u7684\u53d1\u73b0\u6c47\u7f16\u6210\u4e00\u4efd\u8be6\u7ec6\u7684\u62a5\u544a\u3002\"\n        \"\u5728\u6700\u7ec8\u786e\u5b9a\u7b54\u6848\u4e4b\u524d\uff0c\u8bf7\u52a1\u5fc5\u4e0e\u4eba\u5de5\u6838\u5b9e\u8349\u7a3f\u662f\u5426\u5408\u683c\u3002\"\n    ),\n    expected_output='\u4e00\u4efd\u5173\u4e8e 2024 \u5e74\u4eba\u5de5\u667a\u80fd\u6700\u65b0\u8fdb\u5c55\u7684\u5b8c\u6574\u62a5\u544a\uff0c\u4e0d\u8981\u9057\u6f0f\u4efb\u4f55\u5185\u5bb9',\n    agent=researcher,\n    human_input=True\n)\n\ntask2 = Task(\n    description=(\n        \"\u5229\u7528\u7814\u7a76\u4eba\u5458\u62a5\u544a\u4e2d\u7684\u89c1\u89e3\uff0c\u64b0\u5199\u4e00\u7bc7\u5f15\u4eba\u5165\u80dc\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u91cd\u70b9\u4ecb\u7ecd\u6700\u91cd\u5927\u7684 AI \u8fdb\u5c55\u3002\"\n        \"\u60a8\u7684\u6587\u7ae0\u5e94\u8be5\u5185\u5bb9\u4e30\u5bcc\u4e14\u901a\u4fd7\u6613\u61c2\uff0c\u4ee5\u6ee1\u8db3\u7cbe\u901a\u6280\u672f\u7684\u53d7\u4f17\u7684\u9700\u6c42\u3002\"\n        \"\u529b\u6c42\u4ee5\u4e00\u79cd\u6355\u6349\u8fd9\u4e9b\u7a81\u7834\u7684\u672c\u8d28\u53ca\u5176\u5bf9\u672a\u6765\u5f71\u54cd\u7684\u65b9\u5f0f\u8fdb\u884c\u53d9\u8ff0\u3002\"\n    ),\n    expected_output='\u4e00\u7bc7\u5173\u4e8e 2024 \u5e74\u4eba\u5de5\u667a\u80fd\u6700\u65b0\u8fdb\u5c55\u7684\u5f15\u4eba\u5165\u80dc\u7684 3 \u6bb5\u535a\u5ba2\u6587\u7ae0\uff0c\u683c\u5f0f\u4e3a markdown',\n    agent=writer\n)\n\n# \u4f7f\u7528\u987a\u5e8f\u6d41\u7a0b\u5b9e\u4f8b\u5316\u60a8\u7684\u56e2\u961f\ncrew = Crew(\n    agents=[researcher, writer],\n    tasks=[task1, task2],\n    verbose=2,\n    memory=True,\n)\n\n# \u8ba9\u60a8\u7684\u56e2\u961f\u5f00\u59cb\u5de5\u4f5c\uff01\nresult = crew.kickoff()\n\nprint(\"######################\")\nprint(result)\n</code></pre>"},{"location":"how-to/Installing-CrewAI/","title":"\u5b89\u88c5 crewAI","text":"<p>\u6b22\u8fce\u4f7f\u7528 crewAI\uff01\u672c\u6307\u5357\u5c06\u6307\u5bfc\u60a8\u5b8c\u6210 crewAI \u53ca\u5176\u4f9d\u8d56\u9879\u7684\u5b89\u88c5\u8fc7\u7a0b\u3002crewAI \u662f\u4e00\u4e2a\u7075\u6d3b\u4e14\u5f3a\u5927\u7684 AI \u6846\u67b6\uff0c\u4f7f\u60a8\u80fd\u591f\u9ad8\u6548\u5730\u521b\u5efa\u548c\u7ba1\u7406 AI \u4ee3\u7406\u3001\u5de5\u5177\u548c\u4efb\u52a1\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff01</p>"},{"location":"how-to/Installing-CrewAI/#_1","title":"\u5b89\u88c5","text":"<p>\u8981\u5b89\u88c5 crewAI\uff0c\u60a8\u9700\u8981\u5728\u7cfb\u7edf\u4e0a\u5b89\u88c5 Python &gt;=3.10 \u4e14 &lt;=3.13\uff1a</p> <pre><code># \u5b89\u88c5\u4e3b\u8981\u7684 crewAI \u5305\npip install crewai\n\n# \u5b89\u88c5\u4e3b\u8981\u7684 crewAI \u5305\u548c\u5de5\u5177\u5305\n# \u5176\u4e2d\u5305\u62ec\u4e00\u7cfb\u5217\u5bf9\u60a8\u7684\u4ee3\u7406\u6709\u7528\u7684\u5de5\u5177\npip install 'crewai[tools]'\n</code></pre>"},{"location":"how-to/Kickoff-async/","title":"\u5f02\u6b65\u542f\u52a8","text":""},{"location":"how-to/Kickoff-async/#_1","title":"\u7b80\u4ecb","text":"<p>CrewAI \u63d0\u4f9b\u4e86\u5f02\u6b65\u542f\u52a8 Crew \u7684\u80fd\u529b\uff0c\u5141\u8bb8\u60a8\u4ee5\u975e\u963b\u585e\u7684\u65b9\u5f0f\u542f\u52a8 Crew \u6267\u884c\u3002\u5f53\u60a8\u5e0c\u671b\u540c\u65f6\u8fd0\u884c\u591a\u4e2a Crew \u6216\u5728 Crew \u6267\u884c\u65f6\u9700\u8981\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u65f6\uff0c\u6b64\u529f\u80fd\u7279\u522b\u6709\u7528\u3002</p>"},{"location":"how-to/Kickoff-async/#crew","title":"\u5f02\u6b65 Crew \u6267\u884c","text":"<p>\u8981\u5f02\u6b65\u542f\u52a8 Crew\uff0c\u8bf7\u4f7f\u7528 <code>kickoff_async()</code> \u65b9\u6cd5\u3002\u6b64\u65b9\u6cd5\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u7ebf\u7a0b\u4e2d\u542f\u52a8 Crew \u6267\u884c\uff0c\u5141\u8bb8\u4e3b\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002</p> <p>\u4ee5\u4e0b\u662f\u5982\u4f55\u5f02\u6b65\u542f\u52a8 Crew \u7684\u793a\u4f8b\uff1a</p> <pre><code>from crewai import Crew, Agent, Task\n\n# \u521b\u5efa\u542f\u7528\u4e86\u4ee3\u7801\u6267\u884c\u7684\u4ee3\u7406\ncoding_agent = Agent(\n    role=\"Python \u6570\u636e\u5206\u6790\u5e08\",\n    goal=\"\u4f7f\u7528 Python \u5206\u6790\u6570\u636e\u5e76\u63d0\u4f9b\u89c1\u89e3\",\n    backstory=\"\u4f60\u662f\u4e00\u4f4d\u7ecf\u9a8c\u4e30\u5bcc\u7684\u6570\u636e\u5206\u6790\u5e08\uff0c\u62e5\u6709\u5f3a\u5927\u7684 Python \u6280\u80fd\u3002\",\n    allow_code_execution=True\n)\n\n# \u521b\u5efa\u9700\u8981\u6267\u884c\u4ee3\u7801\u7684\u4efb\u52a1\ndata_analysis_task = Task(\n    description=\"\u5206\u6790\u7ed9\u5b9a\u7684\u6570\u636e\u96c6\u5e76\u8ba1\u7b97\u53c2\u4e0e\u8005\u7684\u5e73\u5747\u5e74\u9f84\u3002\u5e74\u9f84\uff1a{ages}\",\n    agent=coding_agent\n)\n\n# \u521b\u5efa\u4e00\u4e2a\u56e2\u961f\u5e76\u6dfb\u52a0\u4efb\u52a1\nanalysis_crew = Crew(\n    agents=[coding_agent],\n    tasks=[data_analysis_task]\n)\n\n# \u6267\u884c\u56e2\u961f\nresult = analysis_crew.kickoff_async(inputs={\"ages\": [25, 30, 35, 40, 45]})\n</code></pre>"},{"location":"how-to/Kickoff-for-each/","title":"\u4e3a\u6bcf\u4e2a\u9879\u76ee\u542f\u52a8","text":""},{"location":"how-to/Kickoff-for-each/#_1","title":"\u7b80\u4ecb","text":"<p>CrewAI \u63d0\u4f9b\u4e86\u4e3a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u9879\u76ee\u542f\u52a8 Crew \u7684\u80fd\u529b\uff0c\u5141\u8bb8\u60a8\u4e3a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u9879\u76ee\u6267\u884c Crew\u3002\u5f53\u60a8\u9700\u8981\u5bf9\u591a\u4e2a\u9879\u76ee\u6267\u884c\u76f8\u540c\u7684\u4efb\u52a1\u96c6\u65f6\uff0c\u6b64\u529f\u80fd\u7279\u522b\u6709\u7528\u3002</p>"},{"location":"how-to/Kickoff-for-each/#crew","title":"\u4e3a\u6bcf\u4e2a\u9879\u76ee\u542f\u52a8 Crew","text":"<p>\u8981\u4e3a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u9879\u76ee\u542f\u52a8 Crew\uff0c\u8bf7\u4f7f\u7528 <code>kickoff_for_each()</code> \u65b9\u6cd5\u3002\u6b64\u65b9\u6cd5\u5c06\u4e3a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u9879\u76ee\u6267\u884c Crew\uff0c\u4ece\u800c\u5141\u8bb8\u60a8\u9ad8\u6548\u5730\u5904\u7406\u591a\u4e2a\u9879\u76ee\u3002</p> <p>\u4ee5\u4e0b\u662f\u5982\u4f55\u4e3a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u9879\u76ee\u542f\u52a8 Crew \u7684\u793a\u4f8b\uff1a</p> <pre><code>from crewai import Crew, Agent, Task\n\n# \u521b\u5efa\u542f\u7528\u4e86\u4ee3\u7801\u6267\u884c\u7684\u4ee3\u7406\ncoding_agent = Agent(\n    role=\"Python \u6570\u636e\u5206\u6790\u5e08\",\n    goal=\"\u4f7f\u7528 Python \u5206\u6790\u6570\u636e\u5e76\u63d0\u4f9b\u89c1\u89e3\",\n    backstory=\"\u4f60\u662f\u4e00\u4f4d\u7ecf\u9a8c\u4e30\u5bcc\u7684\u6570\u636e\u5206\u6790\u5e08\uff0c\u62e5\u6709\u5f3a\u5927\u7684 Python \u6280\u80fd\u3002\",\n    allow_code_execution=True\n)\n\n# \u521b\u5efa\u9700\u8981\u6267\u884c\u4ee3\u7801\u7684\u4efb\u52a1\ndata_analysis_task = Task(\n    description=\"\u5206\u6790\u7ed9\u5b9a\u7684\u6570\u636e\u96c6\u5e76\u8ba1\u7b97\u53c2\u4e0e\u8005\u7684\u5e73\u5747\u5e74\u9f84\u3002\u5e74\u9f84\uff1a{ages}\",\n    agent=coding_agent\n)\n\n# \u521b\u5efa\u4e00\u4e2a\u56e2\u961f\u5e76\u6dfb\u52a0\u4efb\u52a1\nanalysis_crew = Crew(\n    agents=[coding_agent],\n    tasks=[data_analysis_task]\n)\n\ndatasets = [\n  { \"ages\": [25, 30, 35, 40, 45] },\n  { \"ages\": [20, 25, 30, 35, 40] },\n  { \"ages\": [30, 35, 40, 45, 50] }\n]\n\n# \u6267\u884c\u56e2\u961f\nresult = analysis_crew.kickoff_for_each(inputs=datasets)\n</code></pre>"},{"location":"how-to/LLM-Connections/","title":"\u5c06 CrewAI \u8fde\u63a5\u5230 LLM","text":""},{"location":"how-to/LLM-Connections/#crewai-llm","title":"\u5c06 CrewAI \u8fde\u63a5\u5230 LLM","text":"<p>\u9ed8\u8ba4 LLM</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCrewAI \u4f7f\u7528 OpenAI \u7684 GPT-4 \u6a21\u578b\uff08\u5177\u4f53\u6765\u8bf4\uff0c\u662f\u7531 OPENAI_MODEL_NAME \u73af\u5883\u53d8\u91cf\u6307\u5b9a\u7684\u6a21\u578b\uff0c\u9ed8\u8ba4\u4e3a\u201cgpt-4o\u201d\uff09\u8fdb\u884c\u8bed\u8a00\u5904\u7406\u3002\u60a8\u53ef\u4ee5\u6309\u7167\u672c\u6307\u5357\u4e2d\u7684\u8bf4\u660e\u914d\u7f6e\u60a8\u7684\u4ee3\u7406\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u6a21\u578b\u6216 API\u3002</p> <p>CrewAI \u63d0\u4f9b\u4e86\u8fde\u63a5\u5230\u5404\u79cd LLM \u7684\u7075\u6d3b\u6027\uff0c\u5305\u62ec\u901a\u8fc7 Ollama \u8fde\u63a5\u5230\u672c\u5730\u6a21\u578b\u4ee5\u53ca\u8fde\u63a5\u5230 Azure \u7b49\u4e0d\u540c\u7684 API\u3002\u5b83\u4e0e\u6240\u6709 LangChain LLM \u7ec4\u4ef6\u517c\u5bb9\uff0c\u652f\u6301\u5404\u79cd\u96c6\u6210\u4ee5\u5b9e\u73b0\u5b9a\u5236\u7684 AI \u89e3\u51b3\u65b9\u6848\u3002</p>"},{"location":"how-to/LLM-Connections/#crewai","title":"CrewAI \u4ee3\u7406\u6982\u8ff0","text":"<p><code>Agent</code> \u7c7b\u662f\u5728 CrewAI \u4e2d\u5b9e\u73b0 AI \u89e3\u51b3\u65b9\u6848\u7684\u57fa\u77f3\u3002\u4ee5\u4e0b\u662f Agent \u7c7b\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u5168\u9762\u6982\u8ff0\uff1a</p> <ul> <li>\u5c5e\u6027\uff1a<ul> <li><code>role</code>\uff1a\u5b9a\u4e49\u4ee3\u7406\u5728\u89e3\u51b3\u65b9\u6848\u4e2d\u7684\u89d2\u8272\u3002</li> <li><code>goal</code>\uff1a\u6307\u5b9a\u4ee3\u7406\u7684\u76ee\u6807\u3002</li> <li><code>backstory</code>\uff1a\u63d0\u4f9b\u4ee3\u7406\u7684\u80cc\u666f\u6545\u4e8b\u3002</li> <li><code>cache</code> \u53ef\u9009\uff1a\u786e\u5b9a\u4ee3\u7406\u662f\u5426\u5e94\u4f7f\u7528\u7f13\u5b58\u6765\u5b58\u50a8\u5de5\u5177\u4f7f\u7528\u60c5\u51b5\u3002\u9ed8\u8ba4\u4e3a <code>True</code>\u3002</li> <li><code>max_rpm</code> \u53ef\u9009\uff1a\u4ee3\u7406\u6267\u884c\u5e94\u9075\u5faa\u7684\u6bcf\u5206\u949f\u6700\u5927\u8bf7\u6c42\u6570\u3002\u53ef\u9009\u3002</li> <li><code>verbose</code> \u53ef\u9009\uff1a\u542f\u7528\u4ee3\u7406\u6267\u884c\u7684\u8be6\u7ec6\u65e5\u5fd7\u8bb0\u5f55\u3002\u9ed8\u8ba4\u4e3a <code>False</code>\u3002</li> <li><code>allow_delegation</code> \u53ef\u9009\uff1a\u5141\u8bb8\u4ee3\u7406\u5c06\u4efb\u52a1\u59d4\u6d3e\u7ed9\u5176\u4ed6\u4ee3\u7406\uff0c\u9ed8\u8ba4\u4e3a <code>True</code>\u3002</li> <li><code>tools</code>\uff1a\u6307\u5b9a\u4ee3\u7406\u53ef\u7528\u4e8e\u6267\u884c\u4efb\u52a1\u7684\u5de5\u5177\u3002\u53ef\u9009\u3002</li> <li><code>max_iter</code> \u53ef\u9009\uff1a\u4ee3\u7406\u6267\u884c\u4efb\u52a1\u7684\u6700\u5927\u8fed\u4ee3\u6b21\u6570\uff0c\u9ed8\u8ba4\u4e3a 25\u3002</li> <li><code>max_execution_time</code> \u53ef\u9009\uff1a\u4ee3\u7406\u6267\u884c\u4efb\u52a1\u7684\u6700\u957f\u65f6\u95f4\u3002\u53ef\u9009\u3002</li> <li><code>step_callback</code> \u53ef\u9009\uff1a\u63d0\u4f9b\u5728\u6bcf\u4e2a\u6b65\u9aa4\u540e\u6267\u884c\u7684\u56de\u8c03\u51fd\u6570\u3002\u53ef\u9009\u3002</li> <li><code>llm</code> \u53ef\u9009\uff1a\u6307\u793a\u4ee3\u7406\u4f7f\u7528\u7684\u5927\u578b\u8bed\u8a00\u6a21\u578b\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u201cOPENAI_MODEL_NAME\u201d\u4e2d\u5b9a\u4e49\u7684 GPT-4 \u6a21\u578b\u3002</li> <li><code>function_calling_llm</code> \u53ef\u9009\uff1a\u5c06\u628a ReAct CrewAI \u4ee3\u7406\u53d8\u6210\u51fd\u6570\u8c03\u7528\u4ee3\u7406\u3002</li> <li><code>callbacks</code> \u53ef\u9009\uff1aLangChain \u5e93\u4e2d\u7684\u4e00\u7cfb\u5217\u56de\u8c03\u51fd\u6570\uff0c\u5728\u4ee3\u7406\u7684\u6267\u884c\u8fc7\u7a0b\u4e2d\u89e6\u53d1\u3002</li> <li><code>system_template</code> \u53ef\u9009\uff1a\u7528\u4e8e\u5b9a\u4e49\u4ee3\u7406\u7cfb\u7edf\u683c\u5f0f\u7684\u53ef\u9009\u5b57\u7b26\u4e32\u3002</li> <li><code>prompt_template</code> \u53ef\u9009\uff1a\u7528\u4e8e\u5b9a\u4e49\u4ee3\u7406\u63d0\u793a\u683c\u5f0f\u7684\u53ef\u9009\u5b57\u7b26\u4e32\u3002</li> <li><code>response_template</code> \u53ef\u9009\uff1a\u7528\u4e8e\u5b9a\u4e49\u4ee3\u7406\u54cd\u5e94\u683c\u5f0f\u7684\u53ef\u9009\u5b57\u7b26\u4e32\u3002</li> </ul> </li> </ul> <pre><code># \u5fc5\u586b\nos.environ[\"OPENAI_MODEL_NAME\"]=\"gpt-4-0125-preview\"\n\n# \u4ee3\u7406\u5c06\u81ea\u52a8\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u4e2d\u5b9a\u4e49\u7684\u6a21\u578b\nexample_agent = Agent(\n  role='\u5f53\u5730\u4e13\u5bb6',\n  goal='\u63d0\u4f9b\u6709\u5173\u57ce\u5e02\u7684\u89c1\u89e3',\n  backstory=\"\u77e5\u8bc6\u6e0a\u535a\u7684\u5f53\u5730\u5bfc\u6e38\u3002\",\n  verbose=True\n)\n</code></pre>"},{"location":"how-to/LLM-Connections/#ollama","title":"Ollama \u96c6\u6210","text":"<p>Ollama \u662f\u672c\u5730 LLM \u96c6\u6210\u7684\u9996\u9009\uff0c\u5b83\u63d0\u4f9b\u4e86\u81ea\u5b9a\u4e49\u548c\u9690\u79c1\u4f18\u52bf\u3002\u8981\u5c06 Ollama \u4e0e CrewAI \u96c6\u6210\uff0c\u8bf7\u8bbe\u7f6e\u9002\u5f53\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5982\u4e0b\u6240\u793a\u3002</p>"},{"location":"how-to/LLM-Connections/#ollama_1","title":"\u8bbe\u7f6e Ollama","text":"<ul> <li>\u73af\u5883\u53d8\u91cf\u914d\u7f6e\uff1a\u8981\u96c6\u6210 Ollama\uff0c\u8bf7\u8bbe\u7f6e\u4ee5\u4e0b\u73af\u5883\u53d8\u91cf\uff1a <pre><code>OPENAI_API_BASE='http://localhost:11434'\nOPENAI_MODEL_NAME='llama2'  # \u6839\u636e\u53ef\u7528\u6a21\u578b\u8fdb\u884c\u8c03\u6574\nOPENAI_API_KEY=''\n</code></pre></li> </ul>"},{"location":"how-to/LLM-Connections/#ollama-llama-2","title":"Ollama \u96c6\u6210\uff08\u4f8b\u5982\uff0c\u5728\u672c\u5730\u4f7f\u7528 Llama 2\uff09","text":"<ol> <li>\u4e0b\u8f7d Ollama\u3002</li> <li>\u8bbe\u7f6e\u597d Ollama \u540e\uff0c\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165\u4ee5\u4e0b\u884c\u6765\u62c9\u53d6 Llama2 <code>ollama pull llama2</code>\u3002</li> <li>\u4eab\u53d7\u7531 crewai \u7684\u4f18\u79c0\u4ee3\u7406\u63d0\u4f9b\u652f\u6301\u7684\u514d\u8d39 Llama2 \u6a21\u578b\u3002 <pre><code>from crewai import Agent, Task, Crew\nfrom langchain.llms import Ollama\nimport os\nos.environ[\"OPENAI_API_KEY\"] = \"NA\"\n\nllm = Ollama(\n    model = \"llama2\",\n    base_url = \"http://localhost:11434\")\n\ngeneral_agent = Agent(role = \"\u6570\u5b66\u6559\u6388\",\n                      goal = \"\"\"\u4e3a\u63d0\u51fa\u6570\u5b66\u95ee\u9898\u7684\u5b66\u751f\u63d0\u4f9b\u89e3\u51b3\u65b9\u6848\u5e76\u7ed9\u51fa\u7b54\u6848\u3002\"\"\",\n                      backstory = \"\"\"\u60a8\u662f\u4e00\u4f4d\u4f18\u79c0\u7684\u6570\u5b66\u6559\u6388\uff0c\u559c\u6b22\u4ee5\u6bcf\u4e2a\u4eba\u90fd\u80fd\u7406\u89e3\u60a8\u7684\u89e3\u51b3\u65b9\u6848\u7684\u65b9\u5f0f\u89e3\u51b3\u6570\u5b66\u95ee\u9898\"\"\",\n                      allow_delegation = False,\n                      verbose = True,\n                      llm = llm)\n\ntask = Task(description=\"\"\"3 + 5 \u7b49\u4e8e\u591a\u5c11\"\"\",\n             agent = general_agent,\n             expected_output=\"\u4e00\u4e2a\u6570\u5b57\u7b54\u6848\u3002\")\n\ncrew = Crew(\n            agents=[general_agent],\n            tasks=[task],\n            verbose=2\n        )\n\nresult = crew.kickoff()\n\nprint(result)\n</code></pre></li> </ol>"},{"location":"how-to/LLM-Connections/#huggingface","title":"HuggingFace \u96c6\u6210","text":"<p>\u60a8\u53ef\u4ee5\u901a\u8fc7\u51e0\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u4f7f\u7528 HuggingFace \u6765\u6258\u7ba1\u60a8\u7684 LLM\u3002</p>"},{"location":"how-to/LLM-Connections/#huggingface_1","title":"\u60a8\u81ea\u5df1\u7684 HuggingFace \u7aef\u70b9","text":"<pre><code>from langchain_community.llms import HuggingFaceEndpoint\n\nllm = HuggingFaceEndpoint(\n    endpoint_url=\"&lt;\u60a8\u7684\u7aef\u70b9 URL&gt;\",\n    huggingfacehub_api_token=\"&lt;HF \u4ee4\u724c&gt;\",\n    task=\"text-generation\",\n    max_new_tokens=512\n)\n\nagent = Agent(\n    role=\"HuggingFace \u4ee3\u7406\",\n    goal=\"\u4f7f\u7528 HuggingFace \u751f\u6210\u6587\u672c\",\n    backstory=\"GitHub \u6587\u6863\u7684\u52e4\u594b\u63a2\u7d22\u8005\u3002\",\n    llm=llm\n)\n</code></pre>"},{"location":"how-to/LLM-Connections/#huggingfacehub","title":"\u6765\u81ea HuggingFaceHub \u7aef\u70b9","text":"<pre><code>from langchain_community.llms import HuggingFaceHub\n\nllm = HuggingFaceHub(\n    repo_id=\"HuggingFaceH4/zephyr-7b-beta\",\n    huggingfacehub_api_token=\"&lt;HF \u4ee4\u724c&gt;\",\n    task=\"text-generation\",\n)\n</code></pre>"},{"location":"how-to/LLM-Connections/#openai-api","title":"\u4e0e OpenAI \u517c\u5bb9\u7684 API \u7aef\u70b9","text":"<p>\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u5728 API \u548c\u6a21\u578b\u4e4b\u95f4\u65e0\u7f1d\u5207\u6362\uff0c\u652f\u6301 FastChat\u3001LM Studio\u3001Groq \u548c Mistral AI \u7b49\u5e73\u53f0\u3002</p>"},{"location":"how-to/LLM-Connections/#_1","title":"\u914d\u7f6e\u793a\u4f8b","text":""},{"location":"how-to/LLM-Connections/#fastchat","title":"FastChat","text":"<pre><code>OPENAI_API_BASE=\"http://localhost:8001/v1\"\nOPENAI_MODEL_NAME='oh-2.5m7b-q51'\nOPENAI_API_KEY=NA\n</code></pre>"},{"location":"how-to/LLM-Connections/#lm-studio","title":"LM Studio","text":"<p>\u542f\u52a8 LM Studio \u5e76\u8f6c\u5230\u201c\u670d\u52a1\u5668\u201d\u9009\u9879\u5361\u3002\u7136\u540e\u4ece\u4e0b\u62c9\u83dc\u5355\u4e2d\u9009\u62e9\u4e00\u4e2a\u6a21\u578b\u5e76\u7b49\u5f85\u5b83\u52a0\u8f7d\u3002\u52a0\u8f7d\u5b8c\u6210\u540e\uff0c\u5355\u51fb\u7eff\u8272\u7684\u201c\u542f\u52a8\u670d\u52a1\u5668\u201d\u6309\u94ae\uff0c\u7136\u540e\u4f7f\u7528\u663e\u793a\u7684 URL\u3001\u7aef\u53e3\u548c API \u5bc6\u94a5\uff08\u60a8\u53ef\u4ee5\u4fee\u6539\u5b83\u4eec\uff09\u3002\u4ee5\u4e0b\u662f\u622a\u81f3 LM Studio 0.2.19 \u7684\u9ed8\u8ba4\u8bbe\u7f6e\u793a\u4f8b\uff1a <pre><code>OPENAI_API_BASE=\"http://localhost:1234/v1\"\nOPENAI_API_KEY=\"lm-studio\"\n</code></pre></p>"},{"location":"how-to/LLM-Connections/#groq-api","title":"Groq API","text":"<pre><code>OPENAI_API_KEY=your-groq-api-key\nOPENAI_MODEL_NAME='llama3-8b-8192'\nOPENAI_API_BASE=https://api.groq.com/openai/v1\n</code></pre>"},{"location":"how-to/LLM-Connections/#mistral-api","title":"Mistral API","text":"<pre><code>OPENAI_API_KEY=your-mistral-api-key\nOPENAI_API_BASE=https://api.mistral.ai/v1\nOPENAI_MODEL_NAME=\"mistral-small\"\n</code></pre>"},{"location":"how-to/LLM-Connections/#solar","title":"Solar","text":"<pre><code>from langchain_community.chat_models.solar import SolarChat\n# \u521d\u59cb\u5316\u8bed\u8a00\u6a21\u578b\nos.environ[\"SOLAR_API_KEY\"] = \"your-solar-api-key\"\nllm = SolarChat(max_tokens=1024)\n\n# \u514d\u8d39\u5f00\u53d1\u8005 API \u5bc6\u94a5\u53ef\u5728\u6b64\u5904\u83b7\u53d6\uff1ahttps://console.upstage.ai/services/solar\n# Langchain \u793a\u4f8b\uff1ahttps://github.com/langchain-ai/langchain/pull/18556\n</code></pre>"},{"location":"how-to/LLM-Connections/#text-gen-web-ui","title":"text-gen-web-ui","text":"<pre><code>OPENAI_API_BASE=http://localhost:5000/v1\nOPENAI_MODEL_NAME=NA\nOPENAI_API_KEY=NA\n</code></pre>"},{"location":"how-to/LLM-Connections/#cohere","title":"Cohere","text":"<pre><code>from langchain_cohere import ChatCohere\n# \u521d\u59cb\u5316\u8bed\u8a00\u6a21\u578b\nos.environ[\"COHERE_API_KEY\"] = \"your-cohere-api-key\"\nllm = ChatCohere()\n\n# \u514d\u8d39\u5f00\u53d1\u8005 API \u5bc6\u94a5\u53ef\u5728\u6b64\u5904\u83b7\u53d6\uff1ahttps://cohere.com/\n# Langchain \u6587\u6863\uff1ahttps://python.langchain.com/docs/integrations/chat/cohere\n</code></pre>"},{"location":"how-to/LLM-Connections/#azure-open-ai","title":"Azure Open AI \u914d\u7f6e","text":"<p>\u5bf9\u4e8e Azure OpenAI API \u96c6\u6210\uff0c\u8bf7\u8bbe\u7f6e\u4ee5\u4e0b\u73af\u5883\u53d8\u91cf\uff1a <pre><code>AZURE_OPENAI_VERSION=\"2022-12-01\"\nAZURE_OPENAI_DEPLOYMENT=\"\"\nAZURE_OPENAI_ENDPOINT=\"\"\nAZURE_OPENAI_KEY=\"\"\n</code></pre></p>"},{"location":"how-to/LLM-Connections/#azure-llm","title":"\u4f7f\u7528 Azure LLM \u7684\u793a\u4f8b\u4ee3\u7406","text":"<pre><code>from dotenv import load_dotenv\nfrom crewai import Agent\nfrom langchain_openai import AzureChatOpenAI\n\nload_dotenv()\n\nazure_llm = AzureChatOpenAI(\n    azure_endpoint=os.environ.get(\"AZURE_OPENAI_ENDPOINT\"),\n    api_key=os.environ.get(\"AZURE_OPENAI_KEY\")\n)\n\nazure_agent = Agent(\n  role='\u793a\u4f8b\u4ee3\u7406',\n  goal='\u6f14\u793a\u81ea\u5b9a\u4e49 LLM \u914d\u7f6e',\n  backstory='GitHub \u6587\u6863\u7684\u52e4\u594b\u63a2\u7d22\u8005\u3002',\n  llm=azure_llm\n)\n</code></pre>"},{"location":"how-to/LLM-Connections/#_2","title":"\u7ed3\u8bba","text":"<p>\u5c06 CrewAI \u4e0e\u4e0d\u540c\u7684 LLM \u96c6\u6210\u6269\u5c55\u4e86\u8be5\u6846\u67b6\u7684\u591a\u529f\u80fd\u6027\uff0c\u5141\u8bb8\u8de8\u5404\u79cd\u57df\u548c\u5e73\u53f0\u5b9e\u73b0\u5b9a\u5236\u7684\u3001\u9ad8\u6548\u7684 AI \u89e3\u51b3\u65b9\u6848\u3002</p>"},{"location":"how-to/Langtrace-Observability/","title":"Langtrace \u6982\u8ff0","text":"<p>Langtrace \u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u5916\u90e8\u5de5\u5177\uff0c\u53ef\u5e2e\u52a9\u60a8\u4e3a\u5927\u578b\u8bed\u8a00\u6a21\u578b (LLM)\u3001LLM \u6846\u67b6\u548c\u5411\u91cf\u6570\u636e\u5e93\u8bbe\u7f6e\u53ef\u89c2\u5bdf\u6027\u548c\u8bc4\u4f30\u3002\u867d\u7136 Langtrace \u4e0d\u662f\u76f4\u63a5\u5185\u7f6e\u4e8e CrewAI \u4e2d\uff0c\u4f46\u53ef\u4ee5\u4e0e CrewAI \u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u6df1\u5165\u4e86\u89e3 CrewAI \u4ee3\u7406\u7684\u6210\u672c\u3001\u5ef6\u8fdf\u548c\u6027\u80fd\u3002\u8fd9\u79cd\u96c6\u6210\u5141\u8bb8\u60a8\u8bb0\u5f55\u8d85\u53c2\u6570\u3001\u76d1\u63a7\u6027\u80fd\u4e0b\u964d\uff0c\u5e76\u5efa\u7acb\u6301\u7eed\u6539\u8fdb\u4ee3\u7406\u7684\u6d41\u7a0b\u3002</p>"},{"location":"how-to/Langtrace-Observability/#_1","title":"\u8bbe\u7f6e\u8bf4\u660e","text":"<ol> <li>\u8bbf\u95ee https://langtrace.ai/signup \u6ce8\u518c Langtrace\u3002</li> <li>\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\u5e76\u751f\u6210\u4e00\u4e2a API \u5bc6\u94a5\u3002</li> <li>\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5728\u60a8\u7684 CrewAI \u9879\u76ee\u4e2d\u5b89\u88c5 Langtrace\uff1a</li> </ol> <pre><code># \u5b89\u88c5 SDK\npip install langtrace-python-sdk\n</code></pre>"},{"location":"how-to/Langtrace-Observability/#crewai-langtrace","title":"\u5728 CrewAI \u4e2d\u4f7f\u7528 Langtrace","text":"<p>\u8981\u5c06 Langtrace \u4e0e\u60a8\u7684 CrewAI \u9879\u76ee\u96c6\u6210\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a</p> <ol> <li>\u5728\u811a\u672c\u5f00\u5934\u3001\u4efb\u4f55 CrewAI \u5bfc\u5165\u4e4b\u524d\u5bfc\u5165\u5e76\u521d\u59cb\u5316 Langtrace\uff1a</li> </ol> <pre><code>from langtrace_python_sdk import langtrace\nlangtrace.init(api_key='&lt;LANGTRACE_API_KEY&gt;')\n\n# \u73b0\u5728\u5bfc\u5165 CrewAI \u6a21\u5757\nfrom crewai import Agent, Task, Crew\n</code></pre> <ol> <li> <p>\u7167\u5e38\u521b\u5efa\u60a8\u7684 CrewAI \u4ee3\u7406\u548c\u4efb\u52a1\u3002</p> </li> <li> <p>\u4f7f\u7528 Langtrace \u7684\u8ddf\u8e2a\u529f\u80fd\u6765\u76d1\u63a7\u60a8\u7684 CrewAI \u64cd\u4f5c\u3002\u4f8b\u5982\uff1a</p> </li> </ol> <pre><code>with langtrace.trace(\"CrewAI \u4efb\u52a1\u6267\u884c\"):\n    result = crew.kickoff()\n</code></pre>"},{"location":"how-to/Langtrace-Observability/#crewai","title":"\u7279\u6027\u548c\u5b83\u4eec\u5728 CrewAI \u4e2d\u7684\u5e94\u7528","text":"<ol> <li>LLM \u4ee4\u724c\u548c\u6210\u672c\u8ddf\u8e2a</li> <li>\u76d1\u63a7\u6bcf\u4e2a CrewAI \u4ee3\u7406\u4ea4\u4e92\u7684\u4ee4\u724c\u4f7f\u7528\u60c5\u51b5\u548c\u76f8\u5173\u6210\u672c\u3002</li> <li> <p>\u4f8b\u5982\uff1a      <pre><code>with langtrace.trace(\"\u4ee3\u7406\u4ea4\u4e92\"):\n    agent_response = agent.execute(task)\n</code></pre></p> </li> <li> <p>\u6267\u884c\u6b65\u9aa4\u7684\u8ddf\u8e2a\u56fe</p> </li> <li>\u53ef\u89c6\u5316\u60a8\u7684 CrewAI \u4efb\u52a1\u7684\u6267\u884c\u6d41\u7a0b\uff0c\u5305\u62ec\u5ef6\u8fdf\u548c\u65e5\u5fd7\u3002</li> <li> <p>\u5bf9\u4e8e\u8bc6\u522b\u4ee3\u7406\u5de5\u4f5c\u6d41\u7a0b\u4e2d\u7684\u74f6\u9888\u5f88\u6709\u7528\u3002</p> </li> <li> <p>\u4f7f\u7528\u624b\u52a8\u6ce8\u91ca\u8fdb\u884c\u6570\u636e\u96c6\u6574\u7406</p> </li> <li>\u4ece\u60a8\u7684 CrewAI \u4efb\u52a1\u8f93\u51fa\u521b\u5efa\u6570\u636e\u96c6\uff0c\u7528\u4e8e\u672a\u6765\u7684\u8bad\u7ec3\u6216\u8bc4\u4f30\u3002</li> <li> <p>\u4f8b\u5982\uff1a      <pre><code>langtrace.log_dataset_item(task_input, agent_output, {\"task_type\": \"research\"})\n</code></pre></p> </li> <li> <p>\u63d0\u793a\u7248\u672c\u63a7\u5236\u548c\u7ba1\u7406</p> </li> <li>\u8ddf\u8e2a CrewAI \u4ee3\u7406\u4e2d\u4f7f\u7528\u7684\u4e0d\u540c\u7248\u672c\u7684\u63d0\u793a\u3002</li> <li> <p>\u5bf9\u4e8e A/B \u6d4b\u8bd5\u548c\u4f18\u5316\u4ee3\u7406\u6027\u80fd\u5f88\u6709\u7528\u3002</p> </li> <li> <p>\u5e26\u6a21\u578b\u6bd4\u8f83\u7684\u63d0\u793a\u6e38\u4e50\u573a</p> </li> <li> <p>\u5728\u90e8\u7f72\u4e4b\u524d\u6d4b\u8bd5\u548c\u6bd4\u8f83 CrewAI \u4ee3\u7406\u7684\u4e0d\u540c\u63d0\u793a\u548c\u6a21\u578b\u3002</p> </li> <li> <p>\u6d4b\u8bd5\u548c\u8bc4\u4f30</p> </li> <li>\u4e3a\u60a8\u7684 CrewAI \u4ee3\u7406\u548c\u4efb\u52a1\u8bbe\u7f6e\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002</li> <li>\u4f8b\u5982\uff1a      <pre><code>langtrace.evaluate(agent_output, expected_output, \"accuracy\")\n</code></pre></li> </ol>"},{"location":"how-to/Langtrace-Observability/#crewai_1","title":"\u76d1\u63a7\u65b0\u7684 CrewAI \u529f\u80fd","text":"<p>CrewAI \u5f15\u5165\u4e86\u4e00\u4e9b\u53ef\u4ee5\u4f7f\u7528 Langtrace \u76d1\u63a7\u7684\u65b0\u529f\u80fd\uff1a</p> <ol> <li> <p>\u4ee3\u7801\u6267\u884c\uff1a\u76d1\u63a7\u4ee3\u7406\u6267\u884c\u7684\u4ee3\u7801\u7684\u6027\u80fd\u548c\u8f93\u51fa\u3002    <pre><code>with langtrace.trace(\"\u4ee3\u7406\u4ee3\u7801\u6267\u884c\"):\n    code_output = agent.execute_code(code_snippet)\n</code></pre></p> </li> <li> <p>\u7b2c\u4e09\u65b9\u4ee3\u7406\u96c6\u6210\uff1a\u8ddf\u8e2a\u4e0e LlamaIndex\u3001LangChain \u548c Autogen \u4ee3\u7406\u7684\u4ea4\u4e92\u3002</p> </li> </ol>"},{"location":"how-to/Replay-tasks-from-latest-Crew-Kickoff/","title":"\u4ece\u6700\u8fd1\u4e00\u6b21 Crew \u542f\u52a8\u4e2d\u91cd\u653e\u4efb\u52a1","text":""},{"location":"how-to/Replay-tasks-from-latest-Crew-Kickoff/#_1","title":"\u7b80\u4ecb","text":"<p>CrewAI \u63d0\u4f9b\u4e86\u4ece\u6700\u8fd1\u4e00\u6b21 Crew \u542f\u52a8\u4e2d\u6307\u5b9a\u7684\u4efb\u52a1\u5f00\u59cb\u91cd\u653e\u7684\u529f\u80fd\u3002\u5f53\u60a8\u5b8c\u6210\u4e00\u6b21\u542f\u52a8\u540e\uff0c\u53ef\u80fd\u5e0c\u671b\u91cd\u8bd5\u67d0\u4e9b\u4efb\u52a1\uff0c\u6216\u8005\u4e0d\u9700\u8981\u91cd\u65b0\u83b7\u53d6\u6570\u636e\uff0c\u5e76\u4e14\u60a8\u7684\u4ee3\u7406\u5df2\u7ecf\u4ece\u542f\u52a8\u6267\u884c\u4e2d\u4fdd\u5b58\u4e86\u4e0a\u4e0b\u6587\uff0c\u60a8\u53ea\u9700\u8981\u91cd\u653e\u6240\u9700\u7684\u4efb\u52a1\u65f6\uff0c\u6b64\u529f\u80fd\u7279\u522b\u6709\u7528\u3002</p>"},{"location":"how-to/Replay-tasks-from-latest-Crew-Kickoff/#_2","title":"\u6ce8\u610f","text":"<p>\u60a8\u5fc5\u987b\u5148\u8fd0\u884c <code>crew.kickoff()</code>\uff0c\u7136\u540e\u624d\u80fd\u91cd\u653e\u4efb\u52a1\u3002\u76ee\u524d\uff0c\u4ec5\u652f\u6301\u6700\u8fd1\u4e00\u6b21\u542f\u52a8\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u4f7f\u7528 <code>kickoff_for_each</code>\uff0c\u5b83\u5c06\u53ea\u5141\u8bb8\u60a8\u4ece\u6700\u8fd1\u4e00\u6b21 Crew \u8fd0\u884c\u4e2d\u91cd\u653e\u3002</p> <p>\u4ee5\u4e0b\u662f\u91cd\u653e\u4efb\u52a1\u7684\u793a\u4f8b\uff1a</p>"},{"location":"how-to/Replay-tasks-from-latest-Crew-Kickoff/#cli","title":"\u4f7f\u7528 CLI \u4ece\u7279\u5b9a\u4efb\u52a1\u5f00\u59cb\u91cd\u653e","text":"<p>\u8981\u4f7f\u7528\u91cd\u653e\u529f\u80fd\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li>\u6253\u5f00\u60a8\u7684\u7ec8\u7aef\u6216\u547d\u4ee4\u63d0\u793a\u7b26\u3002</li> <li>\u5bfc\u822a\u5230\u60a8\u7684 CrewAI \u9879\u76ee\u6240\u5728\u7684\u76ee\u5f55\u3002</li> <li>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</li> </ol> <p>\u8981\u67e5\u770b\u6700\u8fd1\u4e00\u6b21\u542f\u52a8\u7684 task_id\uff0c\u8bf7\u4f7f\u7528\uff1a <pre><code>crewai log-tasks-outputs\n</code></pre></p> <p>\u83b7\u5f97\u8981\u91cd\u653e\u7684 task_id \u540e\uff0c\u8bf7\u4f7f\u7528\uff1a <pre><code>crewai replay -t &lt;task_id&gt;\n</code></pre></p>"},{"location":"how-to/Replay-tasks-from-latest-Crew-Kickoff/#_3","title":"\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u4ece\u4efb\u52a1\u5f00\u59cb\u91cd\u653e","text":"<p>\u8981\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u4ece\u4efb\u52a1\u5f00\u59cb\u91cd\u653e\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li>\u4e3a\u91cd\u653e\u8fc7\u7a0b\u6307\u5b9a task_id \u548c\u8f93\u5165\u53c2\u6570\u3002</li> <li>\u5728 try-except \u5757\u4e2d\u6267\u884c replay \u547d\u4ee4\u4ee5\u5904\u7406\u6f5c\u5728\u7684\u9519\u8bef\u3002</li> </ol> <pre><code>   def replay_from_task():\n    \"\"\"\n    \u4ece\u7279\u5b9a\u4efb\u52a1\u5f00\u59cb\u91cd\u653e Crew \u6267\u884c\u3002\n    \"\"\"\n    task_id = '&lt;task_id&gt;'\n    inputs = {\"topic\": \"CrewAI Training\"} # \u8fd9\u662f\u53ef\u9009\u7684\uff0c\u60a8\u53ef\u4ee5\u4f20\u5165\u8981\u91cd\u653e\u7684\u8f93\u5165\uff0c\u5426\u5219\u5c06\u4f7f\u7528\u5148\u524d\u542f\u52a8\u7684\u8f93\u5165\n    try:\n        YourCrewName_Crew().crew().replay_from_task(task_id=task_id, inputs=inputs)\n\n    except Exception as e:\n        raise Exception(f\"\u91cd\u653e Crew \u65f6\u53d1\u751f\u9519\u8bef\uff1a{e}\")\n</code></pre>"},{"location":"how-to/Sequential/","title":"\u5728 crewAI \u4e2d\u4f7f\u7528\u987a\u5e8f\u6d41\u7a0b","text":""},{"location":"how-to/Sequential/#_1","title":"\u7b80\u4ecb","text":"<p>CrewAI \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7075\u6d3b\u7684\u6846\u67b6\uff0c\u7528\u4e8e\u4ee5\u7ed3\u6784\u5316\u7684\u65b9\u5f0f\u6267\u884c\u4efb\u52a1\uff0c\u652f\u6301\u987a\u5e8f\u548c\u5206\u5c42\u6d41\u7a0b\u3002\u672c\u6307\u5357\u6982\u8ff0\u4e86\u5982\u4f55\u6709\u6548\u5730\u5b9e\u65bd\u8fd9\u4e9b\u6d41\u7a0b\uff0c\u4ee5\u786e\u4fdd\u9ad8\u6548\u7684\u4efb\u52a1\u6267\u884c\u548c\u9879\u76ee\u5b8c\u6210\u3002</p>"},{"location":"how-to/Sequential/#_2","title":"\u987a\u5e8f\u6d41\u7a0b\u6982\u8ff0","text":"<p>\u987a\u5e8f\u6d41\u7a0b\u786e\u4fdd\u4efb\u52a1\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u6267\u884c\uff0c\u9075\u5faa\u7ebf\u6027\u8fdb\u7a0b\u3002\u8fd9\u79cd\u65b9\u6cd5\u9002\u7528\u4e8e\u9700\u8981\u6309\u7279\u5b9a\u987a\u5e8f\u5b8c\u6210\u4efb\u52a1\u7684\u9879\u76ee\u3002</p>"},{"location":"how-to/Sequential/#_3","title":"\u4e3b\u8981\u7279\u70b9","text":"<ul> <li>\u7ebf\u6027\u4efb\u52a1\u6d41\uff1a\u901a\u8fc7\u6309\u9884\u5b9a\u987a\u5e8f\u5904\u7406\u4efb\u52a1\u6765\u786e\u4fdd\u6709\u5e8f\u8fdb\u884c\u3002</li> <li>\u7b80\u5355\u6027\uff1a\u6700\u9002\u5408\u5177\u6709\u6e05\u6670\u3001\u5faa\u5e8f\u6e10\u8fdb\u7684\u4efb\u52a1\u7684\u9879\u76ee\u3002</li> <li>\u6613\u4e8e\u76d1\u63a7\uff1a\u4fbf\u4e8e\u8f7b\u677e\u8ddf\u8e2a\u4efb\u52a1\u5b8c\u6210\u60c5\u51b5\u548c\u9879\u76ee\u8fdb\u5ea6\u3002</li> </ul>"},{"location":"how-to/Sequential/#_4","title":"\u5b9e\u65bd\u987a\u5e8f\u6d41\u7a0b","text":"<p>\u8981\u4f7f\u7528\u987a\u5e8f\u6d41\u7a0b\uff0c\u8bf7\u7ec4\u5efa\u60a8\u7684\u56e2\u961f\u5e76\u6309\u9700\u8981\u6267\u884c\u7684\u987a\u5e8f\u5b9a\u4e49\u4efb\u52a1\u3002</p> <pre><code>from crewai import Crew, Process, Agent, Task\n\n# \u5b9a\u4e49\u60a8\u7684\u4ee3\u7406\nresearcher = Agent(\n  role='\u7814\u7a76\u5458',\n  goal='\u8fdb\u884c\u57fa\u7840\u7814\u7a76',\n  backstory='\u4e00\u4f4d\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7814\u7a76\u5458\uff0c\u70ed\u8877\u4e8e\u53d1\u73b0\u89c1\u89e3'\n)\nanalyst = Agent(\n  role='\u6570\u636e\u5206\u6790\u5e08',\n  goal='\u5206\u6790\u7814\u7a76\u7ed3\u679c',\n  backstory='\u4e00\u4f4d\u7ec6\u81f4\u7684\u5206\u6790\u5e08\uff0c\u5584\u4e8e\u53d1\u73b0\u89c4\u5f8b'\n)\nwriter = Agent(\n  role='\u4f5c\u5bb6',\n  goal='\u8d77\u8349\u6700\u7ec8\u62a5\u544a',\n  backstory='\u4e00\u4f4d\u719f\u7ec3\u7684\u4f5c\u5bb6\uff0c\u5177\u6709\u64b0\u5199\u5f15\u4eba\u5165\u80dc\u7684\u53d9\u8ff0\u7684\u5929\u8d4b'\n)\n\nresearch_task = Task(description='\u6536\u96c6\u76f8\u5173\u6570\u636e...', agent=researcher, expected_output='\u539f\u59cb\u6570\u636e')\nanalysis_task = Task(description='\u5206\u6790\u6570\u636e...', agent=analyst, expected_output='\u6570\u636e\u89c1\u89e3')\nwriting_task = Task(description='\u64b0\u5199\u62a5\u544a...', agent=writer, expected_output='\u6700\u7ec8\u62a5\u544a')\n\n# \u4f7f\u7528\u987a\u5e8f\u6d41\u7a0b\u7ec4\u5efa\u56e2\u961f\nreport_crew = Crew(\n  agents=[researcher, analyst, writer],\n  tasks=[research_task, analysis_task, writing_task],\n  process=Process.sequential\n)\n\n# \u6267\u884c\u56e2\u961f\nresult = report_crew.kickoff()\n</code></pre>"},{"location":"how-to/Sequential/#_5","title":"\u5de5\u4f5c\u6d41\u7a0b\u5b9e\u9645\u5e94\u7528","text":"<ol> <li>\u521d\u59cb\u4efb\u52a1\uff1a\u5728\u987a\u5e8f\u6d41\u7a0b\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u4ee3\u7406\u5b8c\u6210\u5176\u4efb\u52a1\u5e76\u53d1\u51fa\u5b8c\u6210\u4fe1\u53f7\u3002</li> <li>\u540e\u7eed\u4efb\u52a1\uff1a\u4ee3\u7406\u6839\u636e\u6d41\u7a0b\u7c7b\u578b\u9009\u62e9\u5176\u4efb\u52a1\uff0c\u5e76\u4ee5\u5148\u524d\u4efb\u52a1\u7684\u7ed3\u679c\u6216\u7ecf\u7406\u6307\u4ee4\u6307\u5bfc\u5176\u6267\u884c\u3002</li> <li>\u5b8c\u6210\uff1a\u6700\u7ec8\u4efb\u52a1\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u6d41\u7a0b\u7ed3\u675f\uff0c\u4ece\u800c\u5b8c\u6210\u9879\u76ee\u3002</li> </ol>"},{"location":"how-to/Sequential/#_6","title":"\u9ad8\u7ea7\u529f\u80fd","text":""},{"location":"how-to/Sequential/#_7","title":"\u4efb\u52a1\u59d4\u6d3e","text":"<p>\u5728\u987a\u5e8f\u6d41\u7a0b\u4e2d\uff0c\u5982\u679c\u4ee3\u7406\u7684 <code>allow_delegation</code> \u8bbe\u7f6e\u4e3a <code>True</code>\uff0c\u5219\u4ed6\u4eec\u53ef\u4ee5\u5c06\u4efb\u52a1\u59d4\u6d3e\u7ed9\u56e2\u961f\u4e2d\u7684\u5176\u4ed6\u4ee3\u7406\u3002\u5f53\u56e2\u961f\u4e2d\u6709\u591a\u4e2a\u4ee3\u7406\u65f6\uff0c\u5c06\u81ea\u52a8\u8bbe\u7f6e\u6b64\u529f\u80fd\u3002</p>"},{"location":"how-to/Sequential/#_8","title":"\u5f02\u6b65\u6267\u884c","text":"<p>\u4efb\u52a1\u53ef\u4ee5\u5f02\u6b65\u6267\u884c\uff0c\u4ece\u800c\u5728\u9002\u5f53\u7684\u65f6\u5019\u5141\u8bb8\u5e76\u884c\u5904\u7406\u3002\u8981\u521b\u5efa\u5f02\u6b65\u4efb\u52a1\uff0c\u8bf7\u5728\u5b9a\u4e49\u4efb\u52a1\u65f6\u8bbe\u7f6e <code>async_execution=True</code>\u3002</p>"},{"location":"how-to/Sequential/#_9","title":"\u5185\u5b58\u548c\u7f13\u5b58","text":"<p>CrewAI \u652f\u6301\u5185\u5b58\u548c\u7f13\u5b58\u529f\u80fd\uff1a - \u5185\u5b58\uff1a\u5728\u521b\u5efa\u56e2\u961f\u65f6\u8bbe\u7f6e <code>memory=True</code> \u6765\u542f\u7528\u3002\u8fd9\u5141\u8bb8\u4ee3\u7406\u8de8\u4efb\u52a1\u4fdd\u7559\u4fe1\u606f\u3002 - \u7f13\u5b58\uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7f13\u5b58\u5904\u4e8e\u542f\u7528\u72b6\u6001\u3002\u8bbe\u7f6e <code>cache=False</code> \u4ee5\u7981\u7528\u5b83\u3002</p>"},{"location":"how-to/Sequential/#_10","title":"\u56de\u8c03","text":"<p>\u60a8\u53ef\u4ee5\u5728\u4efb\u52a1\u548c\u6b65\u9aa4\u7ea7\u522b\u8bbe\u7f6e\u56de\u8c03\uff1a - <code>task_callback</code>\uff1a\u5728\u6bcf\u6b21\u4efb\u52a1\u5b8c\u6210\u540e\u6267\u884c\u3002 - <code>step_callback</code>\uff1a\u5728\u4ee3\u7406\u6267\u884c\u7684\u6bcf\u4e2a\u6b65\u9aa4\u540e\u6267\u884c\u3002</p>"},{"location":"how-to/Sequential/#_11","title":"\u4f7f\u7528\u6307\u6807","text":"<p>CrewAI \u8ddf\u8e2a\u6240\u6709\u4efb\u52a1\u548c\u4ee3\u7406\u7684\u4ee4\u724c\u4f7f\u7528\u60c5\u51b5\u3002\u60a8\u53ef\u4ee5\u5728\u6267\u884c\u540e\u8bbf\u95ee\u8fd9\u4e9b\u6307\u6807\u3002</p>"},{"location":"how-to/Sequential/#_12","title":"\u987a\u5e8f\u6d41\u7a0b\u7684\u6700\u4f73\u5b9e\u8df5","text":"<ol> <li>\u987a\u5e8f\u81f3\u5173\u91cd\u8981\uff1a\u6309\u903b\u8f91\u987a\u5e8f\u6392\u5217\u4efb\u52a1\uff0c\u5176\u4e2d\u6bcf\u4e2a\u4efb\u52a1\u90fd\u5efa\u7acb\u5728\u524d\u4e00\u4e2a\u4efb\u52a1\u7684\u57fa\u7840\u4e0a\u3002</li> <li>\u6e05\u6670\u7684\u4efb\u52a1\u63cf\u8ff0\uff1a\u4e3a\u6bcf\u4e2a\u4efb\u52a1\u63d0\u4f9b\u8be6\u7ec6\u7684\u63cf\u8ff0\uff0c\u4ee5\u6709\u6548\u5730\u6307\u5bfc\u4ee3\u7406\u3002</li> <li>\u9002\u5f53\u7684\u4ee3\u7406\u9009\u62e9\uff1a\u4f7f\u4ee3\u7406\u7684\u6280\u80fd\u548c\u89d2\u8272\u4e0e\u6bcf\u4e2a\u4efb\u52a1\u7684\u8981\u6c42\u76f8\u5339\u914d\u3002</li> <li>\u4f7f\u7528\u4e0a\u4e0b\u6587\uff1a\u5229\u7528\u5148\u524d\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u6765\u901a\u77e5\u540e\u7eed\u4efb\u52a1</li> </ol>"},{"location":"how-to/Start-a-New-CrewAI-Project/","title":"\u542f\u52a8\u60a8\u7684 CrewAI \u9879\u76ee","text":"<p>\u6b22\u8fce\u9605\u8bfb\u542f\u52a8\u65b0 CrewAI \u9879\u76ee\u7684\u7ec8\u6781\u6307\u5357\u3002\u672c\u6587\u6863\u5c06\u6307\u5bfc\u60a8\u5b8c\u6210\u521b\u5efa\u3001\u81ea\u5b9a\u4e49\u548c\u8fd0\u884c CrewAI \u9879\u76ee\u7684\u6b65\u9aa4\uff0c\u786e\u4fdd\u60a8\u62e5\u6709\u5165\u95e8\u6240\u9700\u7684\u4e00\u5207\u3002</p>"},{"location":"how-to/Start-a-New-CrewAI-Project/#_1","title":"\u5148\u51b3\u6761\u4ef6","text":"<p>\u6211\u4eec\u5047\u8bbe\u60a8\u5df2\u7ecf\u5b89\u88c5\u4e86 CrewAI\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u53c2\u9605 \u5b89\u88c5\u6307\u5357 \u6765\u5b89\u88c5 CrewAI \u53ca\u5176\u4f9d\u8d56\u9879\u3002</p>"},{"location":"how-to/Start-a-New-CrewAI-Project/#_2","title":"\u521b\u5efa\u65b0\u9879\u76ee","text":"<p>\u8981\u521b\u5efa\u65b0\u9879\u76ee\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b CLI \u547d\u4ee4\uff1a</p> <pre><code>$ crewai create my_project\n</code></pre> <p>\u6b64\u547d\u4ee4\u5c06\u521b\u5efa\u4e00\u4e2a\u5177\u6709\u4ee5\u4e0b\u7ed3\u6784\u7684\u65b0\u9879\u76ee\u6587\u4ef6\u5939\uff1a</p> <pre><code>my_project/\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 src/\n    \u2514\u2500\u2500 my_project/\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 main.py\n        \u251c\u2500\u2500 crew.py\n        \u251c\u2500\u2500 tools/\n        \u2502   \u251c\u2500\u2500 custom_tool.py\n        \u2502   \u2514\u2500\u2500 __init__.py\n        \u2514\u2500\u2500 config/\n            \u251c\u2500\u2500 agents.yaml\n            \u2514\u2500\u2500 tasks.yaml\n</code></pre> <p>\u60a8\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91 <code>src/my_project</code> \u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u6765\u5f00\u59cb\u5f00\u53d1\u60a8\u7684\u9879\u76ee\u3002<code>main.py</code> \u6587\u4ef6\u662f\u60a8\u9879\u76ee\u7684\u5165\u53e3\u70b9\uff0c<code>crew.py</code> \u6587\u4ef6\u662f\u60a8\u5b9a\u4e49\u4ee3\u7406\u548c\u4efb\u52a1\u7684\u5730\u65b9\u3002</p>"},{"location":"how-to/Start-a-New-CrewAI-Project/#_3","title":"\u81ea\u5b9a\u4e49\u60a8\u7684\u9879\u76ee","text":"<p>\u8981\u81ea\u5b9a\u4e49\u60a8\u7684\u9879\u76ee\uff0c\u60a8\u53ef\u4ee5\uff1a - \u4fee\u6539 <code>src/my_project/config/agents.yaml</code> \u6765\u5b9a\u4e49\u60a8\u7684\u4ee3\u7406\u3002 - \u4fee\u6539 <code>src/my_project/config/tasks.yaml</code> \u6765\u5b9a\u4e49\u60a8\u7684\u4efb\u52a1\u3002 - \u4fee\u6539 <code>src/my_project/crew.py</code> \u4ee5\u6dfb\u52a0\u60a8\u81ea\u5df1\u7684\u903b\u8f91\u3001\u5de5\u5177\u548c\u7279\u5b9a\u53c2\u6570\u3002 - \u4fee\u6539 <code>src/my_project/main.py</code> \u4ee5\u6dfb\u52a0\u4ee3\u7406\u548c\u4efb\u52a1\u7684\u81ea\u5b9a\u4e49\u8f93\u5165\u3002 - \u5c06\u60a8\u7684\u73af\u5883\u53d8\u91cf\u6dfb\u52a0\u5230 <code>.env</code> \u6587\u4ef6\u4e2d\u3002</p>"},{"location":"how-to/Start-a-New-CrewAI-Project/#_4","title":"\u793a\u4f8b\uff1a\u5b9a\u4e49\u4ee3\u7406\u548c\u4efb\u52a1","text":""},{"location":"how-to/Start-a-New-CrewAI-Project/#agentsyaml","title":"agents.yaml","text":"<pre><code>researcher:\n  role: &gt;\n    \u6c42\u804c\u8005\u7814\u7a76\u5458\n  goal: &gt;\n    \u5bfb\u627e\u8be5\u804c\u4f4d\u7684\u6f5c\u5728\u5019\u9009\u4eba\n  backstory: &gt;\n    \u60a8\u64c5\u957f\u901a\u8fc7\u63a2\u7d22\u5404\u79cd\u5728\u7ebf\u8d44\u6e90\u6765\u5bfb\u627e\u5408\u9002\u7684\u5019\u9009\u4eba\u3002\u60a8\u8bc6\u522b\u5408\u9002\u5019\u9009\u4eba\u7684\u6280\u80fd\u53ef\u786e\u4fdd\u4e0e\u804c\u4f4d\u6700\u5339\u914d\u3002\n</code></pre>"},{"location":"how-to/Start-a-New-CrewAI-Project/#tasksyaml","title":"tasks.yaml","text":"<pre><code>research_candidates_task:\n  description: &gt;\n    \u8fdb\u884c\u5f7b\u5e95\u7684\u7814\u7a76\u4ee5\u627e\u5230\u6307\u5b9a\u804c\u4f4d\u7684\u6f5c\u5728\u5019\u9009\u4eba\u3002\n    \u5229\u7528\u5404\u79cd\u5728\u7ebf\u8d44\u6e90\u548c\u6570\u636e\u5e93\u6765\u6536\u96c6\u6f5c\u5728\u5019\u9009\u4eba\u7684\u5b8c\u6574\u5217\u8868\u3002\n    \u786e\u4fdd\u5019\u9009\u4eba\u7b26\u5408\u63d0\u4f9b\u7684\u804c\u4f4d\u8981\u6c42\u3002\n\n    \u804c\u4f4d\u8981\u6c42\uff1a\n    {job_requirements}\n  expected_output: &gt;\n    \u5305\u542b 10 \u4e2a\u6f5c\u5728\u5019\u9009\u4eba\u7684\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u4ed6\u4eec\u7684\u8054\u7cfb\u65b9\u5f0f\u548c\u7a81\u51fa\u663e\u793a\u5176\u9002\u5408\u6027\u7684\u7b80\u8981\u8d44\u6599\u3002\n</code></pre>"},{"location":"how-to/Start-a-New-CrewAI-Project/#_5","title":"\u5b89\u88c5\u4f9d\u8d56\u9879","text":"<p>\u8981\u5b89\u88c5\u9879\u76ee\u7684\u4f9d\u8d56\u9879\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Poetry\u3002\u9996\u5148\uff0c\u5bfc\u822a\u5230\u60a8\u7684\u9879\u76ee\u76ee\u5f55\uff1a</p> <pre><code>$ cd my_project\n$ poetry lock\n$ poetry install\n</code></pre> <p>\u8fd9\u5c06\u5b89\u88c5 <code>pyproject.toml</code> \u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u4f9d\u8d56\u9879\u3002</p>"},{"location":"how-to/Start-a-New-CrewAI-Project/#_6","title":"\u63d2\u503c\u53d8\u91cf","text":"<p>\u5728\u60a8\u7684 <code>agents.yaml</code> \u548c <code>tasks.yaml</code> \u6587\u4ef6\u4e2d\u63d2\u5165\u7684\u4efb\u4f55\u53d8\u91cf\uff08\u5982 <code>{variable}</code>\uff09\u90fd\u5c06\u66ff\u6362\u4e3a <code>main.py</code> \u6587\u4ef6\u4e2d\u8be5\u53d8\u91cf\u7684\u503c\u3002</p>"},{"location":"how-to/Start-a-New-CrewAI-Project/#agentsyaml_1","title":"agents.yaml","text":"<pre><code>research_task:\n  description: &gt;\n    \u5728 {customer_domain} \u7684\u80cc\u666f\u4e0b\uff0c\u5bf9\u5ba2\u6237\u548c\u7ade\u4e89\u5bf9\u624b\u8fdb\u884c\u5f7b\u5e95\u7684\u7814\u7a76\u3002\n    \u786e\u4fdd\u60a8\u627e\u5230\u4efb\u4f55\u6709\u8da3\u4e14\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u5f53\u524d\u5e74\u4efd\u662f 2024 \u5e74\u3002\n  expected_output: &gt;\n    \u5173\u4e8e\u5ba2\u6237\u53ca\u5176\u5ba2\u6237\u548c\u7ade\u4e89\u5bf9\u624b\u7684\u5b8c\u6574\u62a5\u544a\uff0c\n    \u5305\u62ec\u4ed6\u4eec\u7684\u4eba\u53e3\u7edf\u8ba1\u3001\u504f\u597d\u3001\u5e02\u573a\u5b9a\u4f4d\u548c\u53d7\u4f17\u53c2\u4e0e\u5ea6\u3002\n</code></pre>"},{"location":"how-to/Start-a-New-CrewAI-Project/#mainpy","title":"main.py","text":"<pre><code># main.py\ndef run():\n    inputs = {\n        \"customer_domain\": \"crewai.com\"\n    }\n    MyProjectCrew(inputs).crew().kickoff(inputs=inputs)\n</code></pre>"},{"location":"how-to/Start-a-New-CrewAI-Project/#_7","title":"\u8fd0\u884c\u60a8\u7684\u9879\u76ee","text":"<p>\u8981\u8fd0\u884c\u60a8\u7684\u9879\u76ee\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>$ poetry run my_project\n</code></pre> <p>\u8fd9\u5c06\u521d\u59cb\u5316\u60a8\u7684 AI \u4ee3\u7406\u56e2\u961f\uff0c\u5e76\u5f00\u59cb\u6267\u884c <code>main.py</code> \u6587\u4ef6\u4e2d\u914d\u7f6e\u4e2d\u5b9a\u4e49\u7684\u4efb\u52a1\u3002</p>"},{"location":"how-to/Start-a-New-CrewAI-Project/#_8","title":"\u90e8\u7f72\u60a8\u7684\u9879\u76ee","text":"<p>\u90e8\u7f72\u60a8\u7684\u56e2\u961f\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u901a\u8fc7 CrewAI+\uff0c\u60a8\u53ea\u9700\u70b9\u51fb\u51e0\u4e0b\u5373\u53ef\u90e8\u7f72\u60a8\u7684\u56e2\u961f\u3002</p>"},{"location":"how-to/Your-Own-Manager-Agent/","title":"\u5728 CrewAI \u4e2d\u8bbe\u7f6e\u7279\u5b9a\u4ee3\u7406\u4f5c\u4e3a\u7ecf\u7406","text":"<p>CrewAI \u5141\u8bb8\u7528\u6237\u8bbe\u7f6e\u7279\u5b9a\u4ee3\u7406\u4f5c\u4e3a\u56e2\u961f\u7684\u7ecf\u7406\uff0c\u4ece\u800c\u66f4\u597d\u5730\u63a7\u5236\u4efb\u52a1\u7684\u7ba1\u7406\u548c\u534f\u8c03\u3002\u6b64\u529f\u80fd\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7ba1\u7406\u89d2\u8272\uff0c\u4ee5\u66f4\u597d\u5730\u6ee1\u8db3\u60a8\u7684\u9879\u76ee\u9700\u6c42\u3002</p>"},{"location":"how-to/Your-Own-Manager-Agent/#manager_agent","title":"\u4f7f\u7528 <code>manager_agent</code> \u5c5e\u6027","text":""},{"location":"how-to/Your-Own-Manager-Agent/#_1","title":"\u81ea\u5b9a\u4e49\u7ecf\u7406\u4ee3\u7406","text":"<p><code>manager_agent</code> \u5c5e\u6027\u5141\u8bb8\u60a8\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4ee3\u7406\u6765\u7ba1\u7406\u56e2\u961f\u3002\u8be5\u4ee3\u7406\u5c06\u76d1\u7763\u6574\u4e2a\u8fc7\u7a0b\uff0c\u786e\u4fdd\u9ad8\u6548\u3001\u9ad8\u8d28\u91cf\u5730\u5b8c\u6210\u4efb\u52a1\u3002</p>"},{"location":"how-to/Your-Own-Manager-Agent/#_2","title":"\u793a\u4f8b","text":"<pre><code>import os\nfrom crewai import Agent, Task, Crew, Process\n\n# \u5b9a\u4e49\u60a8\u7684\u4ee3\u7406\nresearcher = Agent(\n    role=\"\u7814\u7a76\u5458\",\n    goal=\"\u5bf9 AI \u548c AI \u4ee3\u7406\u8fdb\u884c\u6df1\u5165\u7814\u7a76\u548c\u5206\u6790\",\n    backstory=\"\u60a8\u662f\u4e00\u4f4d\u4e13\u5bb6\u7814\u7a76\u5458\uff0c\u4e13\u95e8\u7814\u7a76\u6280\u672f\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001AI \u548c\u521d\u521b\u516c\u53f8\u3002\u60a8\u662f\u4e00\u540d\u81ea\u7531\u804c\u4e1a\u8005\uff0c\u76ee\u524d\u6b63\u5728\u4e3a\u4e00\u4f4d\u65b0\u5ba2\u6237\u8fdb\u884c\u7814\u7a76\u3002\",\n    allow_delegation=False,\n)\n\nwriter = Agent(\n    role=\"\u9ad8\u7ea7\u4f5c\u5bb6\",\n    goal=\"\u521b\u5efa\u5173\u4e8e AI \u548c AI \u4ee3\u7406\u7684\u5f15\u4eba\u5165\u80dc\u7684\u5185\u5bb9\",\n    backstory=\"\u60a8\u662f\u4e00\u4f4d\u9ad8\u7ea7\u4f5c\u5bb6\uff0c\u4e13\u95e8\u7814\u7a76\u6280\u672f\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001AI \u548c\u521d\u521b\u516c\u53f8\u3002\u60a8\u662f\u4e00\u540d\u81ea\u7531\u804c\u4e1a\u8005\uff0c\u76ee\u524d\u6b63\u5728\u4e3a\u4e00\u4f4d\u65b0\u5ba2\u6237\u64b0\u5199\u5185\u5bb9\u3002\",\n    allow_delegation=False,\n)\n\n# \u5b9a\u4e49\u60a8\u7684\u4efb\u52a1\ntask = Task(\n    description=\"\u751f\u6210 5 \u4e2a\u6709\u8da3\u7684\u6587\u7ae0\u521b\u610f\uff0c\u7136\u540e\u4e3a\u6bcf\u4e2a\u521b\u610f\u5199\u4e00\u6bb5\u5f15\u4eba\u5165\u80dc\u7684\u6bb5\u843d\uff0c\u4ee5\u5c55\u793a\u8be5\u4e3b\u9898\u7684\u5b8c\u6574\u6587\u7ae0\u7684\u6f5c\u529b\u3002\u8fd4\u56de\u5305\u542b\u6bb5\u843d\u548c\u6ce8\u91ca\u7684\u521b\u610f\u5217\u8868\u3002\",\n    expected_output=\"5 \u4e2a\u9879\u76ee\u7b26\u53f7\uff0c\u6bcf\u4e2a\u9879\u76ee\u7b26\u53f7\u90fd\u5305\u542b\u4e00\u4e2a\u6bb5\u843d\u548c\u76f8\u5e94\u7684\u6ce8\u91ca\u3002\",\n)\n\n# \u5b9a\u4e49\u7ecf\u7406\u4ee3\u7406\nmanager = Agent(\n    role=\"\u9879\u76ee\u7ecf\u7406\",\n    goal=\"\u9ad8\u6548\u7ba1\u7406\u56e2\u961f\u5e76\u786e\u4fdd\u9ad8\u8d28\u91cf\u5730\u5b8c\u6210\u4efb\u52a1\",\n    backstory=\"\u60a8\u662f\u4e00\u4f4d\u7ecf\u9a8c\u4e30\u5bcc\u7684\u9879\u76ee\u7ecf\u7406\uff0c\u64c5\u957f\u76d1\u7763\u590d\u6742\u9879\u76ee\u5e76\u5f15\u5bfc\u56e2\u961f\u53d6\u5f97\u6210\u529f\u3002\u60a8\u7684\u804c\u8d23\u662f\u534f\u8c03\u56e2\u961f\u6210\u5458\u7684\u5de5\u4f5c\uff0c\u786e\u4fdd\u6bcf\u9879\u4efb\u52a1\u90fd\u6309\u65f6\u5b8c\u6210\u5e76\u8fbe\u5230\u6700\u9ad8\u6807\u51c6\u3002\",\n    allow_delegation=True,\n)\n\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u7ecf\u7406\u5b9e\u4f8b\u5316\u60a8\u7684\u56e2\u961f\ncrew = Crew(\n    agents=[researcher, writer],\n    tasks=[task],\n    manager_agent=manager,\n    process=Process.hierarchical,\n)\n\n# \u5f00\u59cb\u56e2\u961f\u7684\u5de5\u4f5c\nresult = crew.kickoff()\n</code></pre>"},{"location":"how-to/Your-Own-Manager-Agent/#_3","title":"\u81ea\u5b9a\u4e49\u7ecf\u7406\u4ee3\u7406\u7684\u4f18\u52bf","text":"<ul> <li>\u589e\u5f3a\u7684\u63a7\u5236\u529b\uff1a\u6839\u636e\u9879\u76ee\u7684\u7279\u5b9a\u9700\u6c42\u5b9a\u5236\u7ba1\u7406\u65b9\u6cd5\u3002</li> <li>\u6539\u8fdb\u7684\u534f\u8c03\u6027\uff1a\u786e\u4fdd\u7531\u7ecf\u9a8c\u4e30\u5bcc\u7684\u4ee3\u7406\u8fdb\u884c\u9ad8\u6548\u7684\u4efb\u52a1\u534f\u8c03\u548c\u7ba1\u7406\u3002</li> <li>\u53ef\u5b9a\u5236\u7684\u7ba1\u7406\uff1a\u5b9a\u4e49\u4e0e\u9879\u76ee\u76ee\u6807\u4e00\u81f4\u7684\u7ba1\u7406\u89d2\u8272\u548c\u804c\u8d23\u3002</li> </ul>"},{"location":"how-to/Your-Own-Manager-Agent/#llm","title":"\u8bbe\u7f6e\u7ecf\u7406 LLM","text":"<p>\u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528\u5206\u5c42\u6d41\u7a0b\u5e76\u4e14\u4e0d\u60f3\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7ecf\u7406\u4ee3\u7406\uff0c\u5219\u53ef\u4ee5\u4e3a\u7ecf\u7406\u6307\u5b9a\u8bed\u8a00\u6a21\u578b\uff1a</p> <pre><code>from langchain_openai import ChatOpenAI\n\nmanager_llm = ChatOpenAI(model_name=\"gpt-4\")\n\ncrew = Crew(\n    agents=[researcher, writer],\n    tasks=[task],\n    process=Process.hierarchical,\n    manager_llm=manager_llm\n)\n</code></pre> <p>\u6ce8\u610f\uff1a\u4f7f\u7528\u5206\u5c42\u6d41\u7a0b\u65f6\uff0c\u5fc5\u987b\u8bbe\u7f6e <code>manager_agent</code> \u6216 <code>manager_llm</code>\u3002</p>"},{"location":"telemetry/Telemetry/","title":"\u9065\u6d4b","text":""},{"location":"telemetry/Telemetry/#_1","title":"\u9065\u6d4b","text":"<p>CrewAI \u5229\u7528\u533f\u540d\u9065\u6d4b\u6765\u6536\u96c6\u4f7f\u7528\u7edf\u8ba1\u6570\u636e\uff0c\u4e3b\u8981\u76ee\u6807\u662f\u589e\u5f3a\u5e93\u3002\u6211\u4eec\u4e13\u6ce8\u4e8e\u6539\u8fdb\u548c\u5f00\u53d1\u7528\u6237\u6700\u5e38\u4f7f\u7528\u7684\u529f\u80fd\u3001\u96c6\u6210\u548c\u5de5\u5177\u3002</p> <p>\u91cd\u8981\u7684\u662f\u8981\u4e86\u89e3\uff0c**\u4e0d\u4f1a\u6536\u96c6**\u6709\u5173\u63d0\u793a\u3001\u4efb\u52a1\u63cf\u8ff0\u3001\u4ee3\u7406\u80cc\u666f\u6545\u4e8b\u6216\u76ee\u6807\u3001\u5de5\u5177\u4f7f\u7528\u3001API \u8c03\u7528\u3001\u54cd\u5e94\u3001\u4ee3\u7406\u5904\u7406\u7684\u4efb\u4f55\u6570\u636e\u6216\u79d8\u5bc6\u548c\u73af\u5883\u53d8\u91cf\u7684\u4efb\u4f55\u6570\u636e\uff0c\u4f46\u6240\u8ff0\u60c5\u51b5\u9664\u5916\u3002\u542f\u7528 <code>share_crew</code> \u529f\u80fd\u540e\uff0c\u6211\u4eec\u4f1a\u6536\u96c6\u5305\u62ec\u4efb\u52a1\u63cf\u8ff0\u3001\u4ee3\u7406\u80cc\u666f\u6545\u4e8b\u6216\u76ee\u6807\u4ee5\u53ca\u5176\u4ed6\u7279\u5b9a\u5c5e\u6027\u5728\u5185\u7684\u8be6\u7ec6\u6570\u636e\uff0c\u4ee5\u4fbf\u5728\u5c0a\u91cd\u7528\u6237\u9690\u79c1\u7684\u540c\u65f6\u63d0\u4f9b\u66f4\u6df1\u5165\u7684\u89c1\u89e3\u3002</p>"},{"location":"telemetry/Telemetry/#_2","title":"\u6536\u96c6\u7684\u6570\u636e\u5305\u62ec\uff1a","text":"<ul> <li>CrewAI \u7684\u7248\u672c\uff1a\u8bc4\u4f30\u6211\u4eec\u6700\u65b0\u7248\u672c\u7684\u91c7\u7528\u7387\u6709\u52a9\u4e8e\u6211\u4eec\u4e86\u89e3\u7528\u6237\u9700\u6c42\u5e76\u6307\u5bfc\u6211\u4eec\u7684\u66f4\u65b0\u3002</li> <li>Python \u7248\u672c\uff1a\u8bc6\u522b\u7528\u6237\u4f7f\u7528\u7684 Python \u7248\u672c\u6709\u52a9\u4e8e\u6211\u4eec\u4f18\u5148\u4e3a\u8fd9\u4e9b\u7248\u672c\u63d0\u4f9b\u652f\u6301\u3002</li> <li>\u5e38\u89c4\u64cd\u4f5c\u7cfb\u7edf\u4fe1\u606f\uff1aCPU \u6570\u91cf\u548c\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b\uff08macOS\u3001Windows\u3001Linux\uff09\u7b49\u8be6\u7ec6\u4fe1\u606f\u4f7f\u6211\u4eec\u80fd\u591f\u5c06\u5f00\u53d1\u91cd\u70b9\u653e\u5728\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u5e76\u63a2\u7d22\u7279\u5b9a\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7684\u529f\u80fd\u7684\u6f5c\u529b\u3002</li> <li>\u56e2\u961f\u4e2d\u7684\u4ee3\u7406\u548c\u4efb\u52a1\u6570\u91cf\uff1a\u786e\u4fdd\u6211\u4eec\u7684\u5185\u90e8\u6d4b\u8bd5\u53cd\u6620\u73b0\u5b9e\u4e16\u754c\u7684\u573a\u666f\uff0c\u5e2e\u52a9\u6211\u4eec\u6307\u5bfc\u7528\u6237\u91c7\u7528\u6700\u4f73\u5b9e\u8df5\u3002</li> <li>\u56e2\u961f\u6d41\u7a0b\u5229\u7528\u7387\uff1a\u4e86\u89e3\u56e2\u961f\u7684\u4f7f\u7528\u65b9\u5f0f\u6709\u52a9\u4e8e\u6307\u5bfc\u6211\u4eec\u7684\u5f00\u53d1\u91cd\u70b9\u3002</li> <li>\u4ee3\u7406\u7684\u5185\u5b58\u548c\u59d4\u6d3e\u4f7f\u7528\uff1a\u6df1\u5165\u4e86\u89e3\u8fd9\u4e9b\u529f\u80fd\u7684\u4f7f\u7528\u65b9\u5f0f\u6709\u52a9\u4e8e\u8bc4\u4f30\u5176\u6709\u6548\u6027\u548c\u672a\u6765\u53d1\u5c55\u65b9\u5411\u3002</li> <li>\u4efb\u52a1\u6267\u884c\u6a21\u5f0f\uff1a\u4e86\u89e3\u4efb\u52a1\u662f\u5e76\u884c\u6267\u884c\u8fd8\u662f\u987a\u5e8f\u6267\u884c\u4f1a\u5f71\u54cd\u6211\u4eec\u5bf9\u589e\u5f3a\u5e76\u884c\u6267\u884c\u529f\u80fd\u7684\u91cd\u89c6\u7a0b\u5ea6\u3002</li> <li>\u8bed\u8a00\u6a21\u578b\u5229\u7528\u7387\uff1a\u652f\u6301\u6211\u4eec\u6539\u8fdb\u5bf9\u7528\u6237\u4e2d\u6700\u6d41\u884c\u8bed\u8a00\u7684\u652f\u6301\u7684\u76ee\u6807\u3002</li> <li>\u56e2\u961f\u4e2d\u4ee3\u7406\u7684\u89d2\u8272\uff1a\u4e86\u89e3\u4ee3\u7406\u626e\u6f14\u7684\u5404\u79cd\u89d2\u8272\u6709\u52a9\u4e8e\u6253\u9020\u66f4\u597d\u7684\u5de5\u5177\u3001\u96c6\u6210\u548c\u793a\u4f8b\u3002</li> <li>\u5de5\u5177\u4f7f\u7528\uff1a\u8bc6\u522b\u54ea\u4e9b\u5de5\u5177\u6700\u5e38\u4f7f\u7528\u53ef\u4ee5\u8ba9\u6211\u4eec\u4f18\u5148\u6539\u8fdb\u8fd9\u4e9b\u9886\u57df\u3002</li> </ul>"},{"location":"telemetry/Telemetry/#_3","title":"\u9009\u62e9\u52a0\u5165\u8fdb\u4e00\u6b65\u7684\u9065\u6d4b\u5171\u4eab","text":"<p>\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728\u5176\u56e2\u961f\u914d\u7f6e\u4e2d\u5c06 <code>share_crew</code> \u5c5e\u6027\u8bbe\u7f6e\u4e3a <code>True</code> \u6765\u9009\u62e9\u5171\u4eab\u5176\u5b8c\u6574\u7684\u9065\u6d4b\u6570\u636e\u3002\u8fd9\u79cd\u9009\u62e9\u52a0\u5165\u65b9\u6cd5\u5c0a\u91cd\u7528\u6237\u9690\u79c1\uff0c\u5e76\u901a\u8fc7\u786e\u4fdd\u7528\u6237\u80fd\u591f\u63a7\u5236\u5176\u6570\u636e\u5171\u4eab\u504f\u597d\u6765\u7b26\u5408\u6570\u636e\u4fdd\u62a4\u6807\u51c6\u3002\u542f\u7528 <code>share_crew</code> \u4f1a\u5bfc\u81f4\u6536\u96c6\u8be6\u7ec6\u7684\u56e2\u961f\u548c\u4efb\u52a1\u6267\u884c\u6570\u636e\uff0c\u5305\u62ec\u4efb\u52a1\u7684 <code>goal</code>\u3001<code>backstory</code>\u3001<code>context</code> \u548c <code>output</code>\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u5728\u5c0a\u91cd\u7528\u6237\u5171\u4eab\u9009\u62e9\u7684\u540c\u65f6\uff0c\u66f4\u6df1\u5165\u5730\u4e86\u89e3\u4f7f\u7528\u6a21\u5f0f\u3002</p>"},{"location":"telemetry/Telemetry/#_4","title":"\u66f4\u65b0\u548c\u4fee\u8ba2","text":"<p>\u6211\u4eec\u81f4\u529b\u4e8e\u7ef4\u62a4\u6587\u6863\u7684\u51c6\u786e\u6027\u548c\u900f\u660e\u5ea6\u3002\u6211\u4eec\u4f1a\u5b9a\u671f\u8fdb\u884c\u5ba1\u67e5\u548c\u66f4\u65b0\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u7684\u6587\u6863\u51c6\u786e\u53cd\u6620\u4ee3\u7801\u5e93\u548c\u9065\u6d4b\u5b9e\u8df5\u7684\u6700\u65b0\u53d1\u5c55\u3002\u9f13\u52b1\u7528\u6237\u67e5\u9605\u672c\u8282\uff0c\u4ee5\u83b7\u53d6\u6709\u5173\u6211\u4eec\u6570\u636e\u6536\u96c6\u5b9e\u8df5\u53ca\u5176\u5982\u4f55\u4fc3\u8fdb CrewAI \u6539\u8fdb\u7684\u6700\u65b0\u4fe1\u606f\u3002</p>"},{"location":"tools/BrowserbaseLoadTool/","title":"BrowserbaseLoadTool","text":""},{"location":"tools/BrowserbaseLoadTool/#description","title":"Description","text":"<p>Browserbase is a developer platform to reliably run, manage, and monitor headless browsers.</p> <p>Power your AI data retrievals with:  - Serverless Infrastructure providing reliable browsers to extract data from complex UIs  - Stealth Mode with included fingerprinting tactics and automatic captcha solving  - Session Debugger to inspect your Browser Session with networks timeline and logs  - Live Debug to quickly debug your automation</p>"},{"location":"tools/BrowserbaseLoadTool/#installation","title":"Installation","text":"<ul> <li>Get an API key and Project ID from browserbase.com and set it in environment variables (<code>BROWSERBASE_API_KEY</code>, <code>BROWSERBASE_PROJECT_ID</code>).</li> <li>Install the Browserbase SDK along with <code>crewai[tools]</code> package:</li> </ul> <pre><code>pip install browserbase 'crewai[tools]'\n</code></pre>"},{"location":"tools/BrowserbaseLoadTool/#example","title":"Example","text":"<p>Utilize the BrowserbaseLoadTool as follows to allow your agent to load websites:</p> <pre><code>from crewai_tools import BrowserbaseLoadTool\n\ntool = BrowserbaseLoadTool()\n</code></pre>"},{"location":"tools/BrowserbaseLoadTool/#arguments","title":"Arguments","text":"<ul> <li><code>api_key</code> Optional. Browserbase API key. Default is <code>BROWSERBASE_API_KEY</code> env variable.</li> <li><code>project_id</code> Optional. Browserbase Project ID. Default is <code>BROWSERBASE_PROJECT_ID</code> env variable.</li> <li><code>text_content</code> Retrieve only text content. Default is <code>False</code>.</li> <li><code>session_id</code> Optional. Provide an existing Session ID.</li> <li><code>proxy</code> Optional. Enable/Disable Proxies.\"</li> </ul>"},{"location":"tools/CSVSearchTool/","title":"CSVSearchTool","text":"<p>Experimental</p> <p>We are still working on improving tools, so there might be unexpected behavior or changes in the future.</p>"},{"location":"tools/CSVSearchTool/#description","title":"Description","text":"<p>This tool is used to perform a RAG (Retrieval-Augmented Generation) search within a CSV file's content. It allows users to semantically search for queries in the content of a specified CSV file. This feature is particularly useful for extracting information from large CSV datasets where traditional search methods might be inefficient. All tools with \"Search\" in their name, including CSVSearchTool, are RAG tools designed for searching different sources of data.</p>"},{"location":"tools/CSVSearchTool/#installation","title":"Installation","text":"<p>Install the crewai_tools package</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"tools/CSVSearchTool/#example","title":"Example","text":"<pre><code>from crewai_tools import CSVSearchTool\n\n# Initialize the tool with a specific CSV file. This setup allows the agent to only search the given CSV file.\ntool = CSVSearchTool(csv='path/to/your/csvfile.csv')\n\n# OR\n\n# Initialize the tool without a specific CSV file. Agent  will need to provide the CSV path at runtime.\ntool = CSVSearchTool()\n</code></pre>"},{"location":"tools/CSVSearchTool/#arguments","title":"Arguments","text":"<ul> <li><code>csv</code> : The path to the CSV file you want to search. This is a mandatory argument if the tool was initialized without a specific CSV file; otherwise, it is optional.</li> </ul>"},{"location":"tools/CSVSearchTool/#custom-model-and-embeddings","title":"Custom model and embeddings","text":"<p>By default, the tool uses OpenAI for both embeddings and summarization. To customize the model, you can use a config dictionary as follows:</p> <pre><code>tool = CSVSearchTool(\n    config=dict(\n        llm=dict(\n            provider=\"ollama\", # or google, openai, anthropic, llama2, ...\n            config=dict(\n                model=\"llama2\",\n                # temperature=0.5,\n                # top_p=1,\n                # stream=true,\n            ),\n        ),\n        embedder=dict(\n            provider=\"google\", # or openai, ollama, ...\n            config=dict(\n                model=\"models/embedding-001\",\n                task_type=\"retrieval_document\",\n                # title=\"Embeddings\",\n            ),\n        ),\n    )\n)\n</code></pre>"},{"location":"tools/CodeDocsSearchTool/","title":"CodeDocsSearchTool","text":"<p>Experimental</p> <p>We are still working on improving tools, so there might be unexpected behavior or changes in the future.</p>"},{"location":"tools/CodeDocsSearchTool/#description","title":"Description","text":"<p>The CodeDocsSearchTool is a powerful RAG (Retrieval-Augmented Generation) tool designed for semantic searches within code documentation. It enables users to efficiently find specific information or topics within code documentation. By providing a <code>docs_url</code> during initialization, the tool narrows down the search to that particular documentation site. Alternatively, without a specific <code>docs_url</code>, it searches across a wide array of code documentation known or discovered throughout its execution, making it versatile for various documentation search needs.</p>"},{"location":"tools/CodeDocsSearchTool/#installation","title":"Installation","text":"<p>To start using the CodeDocsSearchTool, first, install the crewai_tools package via pip:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"tools/CodeDocsSearchTool/#example","title":"Example","text":"<p>Utilize the CodeDocsSearchTool as follows to conduct searches within code documentation:</p> <p><pre><code>from crewai_tools import CodeDocsSearchTool\n\n# To search any code documentation content if the URL is known or discovered during its execution:\ntool = CodeDocsSearchTool()\n\n# OR\n\n# To specifically focus your search on a given documentation site by providing its URL:\ntool = CodeDocsSearchTool(docs_url='https://docs.example.com/reference')\n</code></pre> Note: Substitute 'https://docs.example.com/reference' with your target documentation URL and 'How to use search tool' with the search query relevant to your needs.</p>"},{"location":"tools/CodeDocsSearchTool/#arguments","title":"Arguments","text":"<ul> <li><code>docs_url</code>: Optional. Specifies the URL of the code documentation to be searched. Providing this during the tool's initialization focuses the search on the specified documentation content.</li> </ul>"},{"location":"tools/CodeDocsSearchTool/#custom-model-and-embeddings","title":"Custom model and embeddings","text":"<p>By default, the tool uses OpenAI for both embeddings and summarization. To customize the model, you can use a config dictionary as follows:</p> <pre><code>tool = CodeDocsSearchTool(\n    config=dict(\n        llm=dict(\n            provider=\"ollama\", # or google, openai, anthropic, llama2, ...\n            config=dict(\n                model=\"llama2\",\n                # temperature=0.5,\n                # top_p=1,\n                # stream=true,\n            ),\n        ),\n        embedder=dict(\n            provider=\"google\", # or openai, ollama, ...\n            config=dict(\n                model=\"models/embedding-001\",\n                task_type=\"retrieval_document\",\n                # title=\"Embeddings\",\n            ),\n        ),\n    )\n)\n</code></pre>"},{"location":"tools/CodeInterpreterTool/","title":"CodeInterpreterTool","text":""},{"location":"tools/CodeInterpreterTool/#description","title":"Description","text":"<p>This tool is used to give the Agent the ability to run code (Python3) from the code generated by the Agent itself. The code is executed in a sandboxed environment, so it is safe to run any code.</p> <p>It is incredible useful since it allows the Agent to generate code, run it in the same environment, get the result and use it to make decisions.</p>"},{"location":"tools/CodeInterpreterTool/#requirements","title":"Requirements","text":"<ul> <li>Docker</li> </ul>"},{"location":"tools/CodeInterpreterTool/#installation","title":"Installation","text":"<p>Install the crewai_tools package <pre><code>pip install 'crewai[tools]'\n</code></pre></p>"},{"location":"tools/CodeInterpreterTool/#example","title":"Example","text":"<p>Remember that when using this tool, the code must be generated by the Agent itself. The code must be a Python3 code. And it will take some time for the first time to run because it needs to build the Docker image.</p> <pre><code>from crewai import Agent\nfrom crewai_tools import CodeInterpreterTool\n\nAgent(\n    ...\n    tools=[CodeInterpreterTool()],\n)\n</code></pre> <p>We also provide a simple way to use it directly from the Agent.</p> <pre><code>from crewai import Agent\n\nagent = Agent(\n    ...\n    allow_code_execution=True,\n)\n</code></pre>"},{"location":"tools/ComposioTool/","title":"ComposioTool Documentation","text":""},{"location":"tools/ComposioTool/#description","title":"Description","text":"<p>This tools is a wrapper around the composio toolset and gives your agent access to a wide variety of tools from the composio SDK.</p>"},{"location":"tools/ComposioTool/#installation","title":"Installation","text":"<p>To incorporate this tool into your project, follow the installation instructions below:</p> <pre><code>pip install composio-core\npip install 'crewai[tools]'\n</code></pre> <p>after the installation is complete, either run <code>composio login</code> or export your composio API key as <code>COMPOSIO_API_KEY</code>.</p>"},{"location":"tools/ComposioTool/#example","title":"Example","text":"<p>The following example demonstrates how to initialize the tool and execute a github action:</p> <ol> <li>Initialize toolset</li> </ol> <pre><code>from composio import App\nfrom crewai_tools import ComposioTool\nfrom crewai import Agent, Task\n\n\ntools = [ComposioTool.from_action(action=Action.GITHUB_ACTIVITY_STAR_REPO_FOR_AUTHENTICATED_USER)]\n</code></pre> <p>If you don't know what action you want to use, use <code>from_app</code> and <code>tags</code> filter to get relevant actions</p> <pre><code>tools = ComposioTool.from_app(App.GITHUB, tags=[\"important\"])\n</code></pre> <p>or use <code>use_case</code> to search relevant actions</p> <pre><code>tools = ComposioTool.from_app(App.GITHUB, use_case=\"Star a github repository\")\n</code></pre> <ol> <li>Define agent</li> </ol> <pre><code>crewai_agent = Agent(\n    role=\"Github Agent\",\n    goal=\"You take action on Github using Github APIs\",\n    backstory=(\n        \"You are AI agent that is responsible for taking actions on Github \"\n        \"on users behalf. You need to take action on Github using Github APIs\"\n    ),\n    verbose=True,\n    tools=tools,\n)\n</code></pre> <ol> <li>Execute task</li> </ol> <pre><code>task = Task(\n    description=\"Star a repo ComposioHQ/composio on GitHub\",\n    agent=crewai_agent,\n    expected_output=\"if the star happened\",\n)\n\ntask.execute()\n</code></pre> <ul> <li>More detailed list of tools can be found here</li> </ul>"},{"location":"tools/DOCXSearchTool/","title":"DOCXSearchTool","text":"<p>Experimental</p> <p>We are still working on improving tools, so there might be unexpected behavior or changes in the future.</p>"},{"location":"tools/DOCXSearchTool/#description","title":"Description","text":"<p>The DOCXSearchTool is a RAG tool designed for semantic searching within DOCX documents. It enables users to effectively search and extract relevant information from DOCX files using query-based searches. This tool is invaluable for data analysis, information management, and research tasks, streamlining the process of finding specific information within large document collections.</p>"},{"location":"tools/DOCXSearchTool/#installation","title":"Installation","text":"<p>Install the crewai_tools package by running the following command in your terminal:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"tools/DOCXSearchTool/#example","title":"Example","text":"<p>The following example demonstrates initializing the DOCXSearchTool to search within any DOCX file's content or with a specific DOCX file path.</p> <pre><code>from crewai_tools import DOCXSearchTool\n\n# Initialize the tool to search within any DOCX file's content\ntool = DOCXSearchTool()\n\n# OR\n\n# Initialize the tool with a specific DOCX file, so the agent can only search the content of the specified DOCX file\ntool = DOCXSearchTool(docx='path/to/your/document.docx')\n</code></pre>"},{"location":"tools/DOCXSearchTool/#arguments","title":"Arguments","text":"<ul> <li><code>docx</code>: An optional file path to a specific DOCX document you wish to search. If not provided during initialization, the tool allows for later specification of any DOCX file's content path for searching.</li> </ul>"},{"location":"tools/DOCXSearchTool/#custom-model-and-embeddings","title":"Custom model and embeddings","text":"<p>By default, the tool uses OpenAI for both embeddings and summarization. To customize the model, you can use a config dictionary as follows:</p> <pre><code>tool = DOCXSearchTool(\n    config=dict(\n        llm=dict(\n            provider=\"ollama\", # or google, openai, anthropic, llama2, ...\n            config=dict(\n                model=\"llama2\",\n                # temperature=0.5,\n                # top_p=1,\n                # stream=true,\n            ),\n        ),\n        embedder=dict(\n            provider=\"google\", # or openai, ollama, ...\n            config=dict(\n                model=\"models/embedding-001\",\n                task_type=\"retrieval_document\",\n                # title=\"Embeddings\",\n            ),\n        ),\n    )\n)\n</code></pre>"},{"location":"tools/DirectoryReadTool/","title":"\u76ee\u5f55\u8bfb\u53d6","text":"<pre><code># DirectoryReadTool\n\n!!! note \"Experimental\"\n    We are still working on improving tools, so there might be unexpected behavior or changes in the future.\n\n## Description\nThe DirectoryReadTool is a powerful utility designed to provide a comprehensive listing of directory contents. It can recursively navigate through the specified directory, offering users a detailed enumeration of all files, including those within subdirectories. This tool is crucial for tasks that require a thorough inventory of directory structures or for validating the organization of files within directories.\n\n## Installation\nTo utilize the DirectoryReadTool in your project, install the `crewai_tools` package. If this package is not yet part of your environment, you can install it using pip with the command below:\n\n```shell\npip install 'crewai[tools]'\n</code></pre> <p>This command installs the latest version of the <code>crewai_tools</code> package, granting access to the DirectoryReadTool among other utilities.</p>"},{"location":"tools/DirectoryReadTool/#example","title":"Example","text":"<p>Employing the DirectoryReadTool is straightforward. The following code snippet demonstrates how to set it up and use the tool to list the contents of a specified directory:</p> <pre><code>from crewai_tools import DirectoryReadTool\n\n# Initialize the tool so the agent can read any directory's content it learns about during execution\ntool = DirectoryReadTool()\n\n# OR\n\n# Initialize the tool with a specific directory, so the agent can only read the content of the specified directory\ntool = DirectoryReadTool(directory='/path/to/your/directory')\n</code></pre>"},{"location":"tools/DirectoryReadTool/#arguments","title":"Arguments","text":"<p>The DirectoryReadTool requires minimal configuration for use. The essential argument for this tool is as follows:</p> <ul> <li><code>directory</code>: Optional. An argument that specifies the path to the directory whose contents you wish to list. It accepts both absolute and relative paths, guiding the tool to the desired directory for content listing.</li> </ul>"},{"location":"tools/DirectorySearchTool/","title":"DirectorySearchTool","text":"<p>Experimental</p> <p>The DirectorySearchTool is under continuous development. Features and functionalities might evolve, and unexpected behavior may occur as we refine the tool.</p>"},{"location":"tools/DirectorySearchTool/#description","title":"Description","text":"<p>The DirectorySearchTool enables semantic search within the content of specified directories, leveraging the Retrieval-Augmented Generation (RAG) methodology for efficient navigation through files. Designed for flexibility, it allows users to dynamically specify search directories at runtime or set a fixed directory during initial setup.</p>"},{"location":"tools/DirectorySearchTool/#installation","title":"Installation","text":"<p>To use the DirectorySearchTool, begin by installing the crewai_tools package. Execute the following command in your terminal:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"tools/DirectorySearchTool/#initialization-and-usage","title":"Initialization and Usage","text":"<p>Import the DirectorySearchTool from the <code>crewai_tools</code> package to start. You can initialize the tool without specifying a directory, enabling the setting of the search directory at runtime. Alternatively, the tool can be initialized with a predefined directory.</p> <pre><code>from crewai_tools import DirectorySearchTool\n\n# For dynamic directory specification at runtime\ntool = DirectorySearchTool()\n\n# For fixed directory searches\ntool = DirectorySearchTool(directory='/path/to/directory')\n</code></pre>"},{"location":"tools/DirectorySearchTool/#arguments","title":"Arguments","text":"<ul> <li><code>directory</code>: A string argument that specifies the search directory. This is optional during initialization but required for searches if not set initially.</li> </ul>"},{"location":"tools/DirectorySearchTool/#custom-model-and-embeddings","title":"Custom Model and Embeddings","text":"<p>The DirectorySearchTool uses OpenAI for embeddings and summarization by default. Customization options for these settings include changing the model provider and configuration, enhancing flexibility for advanced users.</p> <pre><code>tool = DirectorySearchTool(\n    config=dict(\n        llm=dict(\n            provider=\"ollama\", # Options include ollama, google, anthropic, llama2, and more\n            config=dict(\n                model=\"llama2\",\n                # Additional configurations here\n            ),\n        ),\n        embedder=dict(\n            provider=\"google\", # or openai, ollama, ...\n            config=dict(\n                model=\"models/embedding-001\",\n                task_type=\"retrieval_document\",\n                # title=\"Embeddings\",\n            ),\n        ),\n    )\n)\n</code></pre>"},{"location":"tools/EXASearchTool/","title":"EXASearchTool Documentation","text":""},{"location":"tools/EXASearchTool/#description","title":"Description","text":"<p>The EXASearchTool is designed to perform a semantic search for a specified query from a text's content across the internet. It utilizes the exa.ai API to fetch and display the most relevant search results based on the query provided by the user.</p>"},{"location":"tools/EXASearchTool/#installation","title":"Installation","text":"<p>To incorporate this tool into your project, follow the installation instructions below:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"tools/EXASearchTool/#example","title":"Example","text":"<p>The following example demonstrates how to initialize the tool and execute a search with a given query:</p> <pre><code>from crewai_tools import EXASearchTool\n\n# Initialize the tool for internet searching capabilities\ntool = EXASearchTool()\n</code></pre>"},{"location":"tools/EXASearchTool/#steps-to-get-started","title":"Steps to Get Started","text":"<p>To effectively use the EXASearchTool, follow these steps:</p> <ol> <li>Package Installation: Confirm that the <code>crewai[tools]</code> package is installed in your Python environment.</li> <li>API Key Acquisition: Acquire a exa.ai API key by registering for a free account at exa.ai.</li> <li>Environment Configuration: Store your obtained API key in an environment variable named <code>EXA_API_KEY</code> to facilitate its use by the tool.</li> </ol>"},{"location":"tools/EXASearchTool/#conclusion","title":"Conclusion","text":"<p>By integrating the EXASearchTool into Python projects, users gain the ability to conduct real-time, relevant searches across the internet directly from their applications. By adhering to the setup and usage guidelines provided, incorporating this tool into projects is streamlined and straightforward.</p>"},{"location":"tools/FileReadTool/","title":"FileReadTool","text":"<p>Experimental</p> <p>We are still working on improving tools, so there might be unexpected behavior or changes in the future.</p>"},{"location":"tools/FileReadTool/#description","title":"Description","text":"<p>The FileReadTool conceptually represents a suite of functionalities within the crewai_tools package aimed at facilitating file reading and content retrieval. This suite includes tools for processing batch text files, reading runtime configuration files, and importing data for analytics. It supports a variety of text-based file formats such as <code>.txt</code>, <code>.csv</code>, <code>.json</code>, and more. Depending on the file type, the suite offers specialized functionality, such as converting JSON content into a Python dictionary for ease of use.</p>"},{"location":"tools/FileReadTool/#installation","title":"Installation","text":"<p>To utilize the functionalities previously attributed to the FileReadTool, install the crewai_tools package:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"tools/FileReadTool/#usage-example","title":"Usage Example","text":"<p>To get started with the FileReadTool:</p> <pre><code>from crewai_tools import FileReadTool\n\n# Initialize the tool to read any files the agents knows or lean the path for\nfile_read_tool = FileReadTool()\n\n# OR\n\n# Initialize the tool with a specific file path, so the agent can only read the content of the specified file\nfile_read_tool = FileReadTool(file_path='path/to/your/file.txt')\n</code></pre>"},{"location":"tools/FileReadTool/#arguments","title":"Arguments","text":"<ul> <li><code>file_path</code>: The path to the file you want to read. It accepts both absolute and relative paths. Ensure the file exists and you have the necessary permissions to access it.</li> </ul>"},{"location":"tools/GitHubSearchTool/","title":"GithubSearchTool","text":"<p>Experimental</p> <p>We are still working on improving tools, so there might be unexpected behavior or changes in the future.</p>"},{"location":"tools/GitHubSearchTool/#description","title":"Description","text":"<p>The GithubSearchTool is a Retrieval-Augmented Generation (RAG) tool specifically designed for conducting semantic searches within GitHub repositories. Utilizing advanced semantic search capabilities, it sifts through code, pull requests, issues, and repositories, making it an essential tool for developers, researchers, or anyone in need of precise information from GitHub.</p>"},{"location":"tools/GitHubSearchTool/#installation","title":"Installation","text":"<p>To use the GithubSearchTool, first ensure the crewai_tools package is installed in your Python environment:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre> <p>This command installs the necessary package to run the GithubSearchTool along with any other tools included in the crewai_tools package.</p>"},{"location":"tools/GitHubSearchTool/#example","title":"Example","text":"<p>Here\u2019s how you can use the GithubSearchTool to perform semantic searches within a GitHub repository: <pre><code>from crewai_tools import GithubSearchTool\n\n# Initialize the tool for semantic searches within a specific GitHub repository\ntool = GithubSearchTool(\n    github_repo='https://github.com/example/repo',\n    content_types=['code', 'issue'] # Options: code, repo, pr, issue\n)\n\n# OR\n\n# Initialize the tool for semantic searches within a specific GitHub repository, so the agent can search any repository if it learns about during its execution\ntool = GithubSearchTool(\n    content_types=['code', 'issue'] # Options: code, repo, pr, issue\n)\n</code></pre></p>"},{"location":"tools/GitHubSearchTool/#arguments","title":"Arguments","text":"<ul> <li><code>github_repo</code> : The URL of the GitHub repository where the search will be conducted. This is a mandatory field and specifies the target repository for your search.</li> <li><code>content_types</code> : Specifies the types of content to include in your search. You must provide a list of content types from the following options: <code>code</code> for searching within the code, <code>repo</code> for searching within the repository's general information, <code>pr</code> for searching within pull requests, and <code>issue</code> for searching within issues. This field is mandatory and allows tailoring the search to specific content types within the GitHub repository.</li> </ul>"},{"location":"tools/GitHubSearchTool/#custom-model-and-embeddings","title":"Custom model and embeddings","text":"<p>By default, the tool uses OpenAI for both embeddings and summarization. To customize the model, you can use a config dictionary as follows:</p> <pre><code>tool = GithubSearchTool(\n    config=dict(\n        llm=dict(\n            provider=\"ollama\", # or google, openai, anthropic, llama2, ...\n            config=dict(\n                model=\"llama2\",\n                # temperature=0.5,\n                # top_p=1,\n                # stream=true,\n            ),\n        ),\n        embedder=dict(\n            provider=\"google\", # or openai, ollama, ...\n            config=dict(\n                model=\"models/embedding-001\",\n                task_type=\"retrieval_document\",\n                # title=\"Embeddings\",\n            ),\n        ),\n    )\n)\n</code></pre>"},{"location":"tools/JSONSearchTool/","title":"JSONSearchTool","text":"<p>Experimental Status</p> <p>The JSONSearchTool is currently in an experimental phase. This means the tool is under active development, and users might encounter unexpected behavior or changes. We highly encourage feedback on any issues or suggestions for improvements.</p>"},{"location":"tools/JSONSearchTool/#description","title":"Description","text":"<p>The JSONSearchTool is designed to facilitate efficient and precise searches within JSON file contents. It utilizes a RAG (Retrieve and Generate) search mechanism, allowing users to specify a JSON path for targeted searches within a particular JSON file. This capability significantly improves the accuracy and relevance of search results.</p>"},{"location":"tools/JSONSearchTool/#installation","title":"Installation","text":"<p>To install the JSONSearchTool, use the following pip command:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"tools/JSONSearchTool/#usage-examples","title":"Usage Examples","text":"<p>Here are updated examples on how to utilize the JSONSearchTool effectively for searching within JSON files. These examples take into account the current implementation and usage patterns identified in the codebase.</p> <pre><code>from crewai.json_tools import JSONSearchTool  # Updated import path\n\n# General JSON content search\n# This approach is suitable when the JSON path is either known beforehand or can be dynamically identified.\ntool = JSONSearchTool()\n\n# Restricting search to a specific JSON file\n# Use this initialization method when you want to limit the search scope to a specific JSON file.\ntool = JSONSearchTool(json_path='./path/to/your/file.json')\n</code></pre>"},{"location":"tools/JSONSearchTool/#arguments","title":"Arguments","text":"<ul> <li><code>json_path</code> (str, optional): Specifies the path to the JSON file to be searched. This argument is not required if the tool is initialized for a general search. When provided, it confines the search to the specified JSON file.</li> </ul>"},{"location":"tools/JSONSearchTool/#configuration-options","title":"Configuration Options","text":"<p>The JSONSearchTool supports extensive customization through a configuration dictionary. This allows users to select different models for embeddings and summarization based on their requirements.</p> <pre><code>tool = JSONSearchTool(\n    config={\n        \"llm\": {\n            \"provider\": \"ollama\",  # Other options include google, openai, anthropic, llama2, etc.\n            \"config\": {\n                \"model\": \"llama2\",\n                # Additional optional configurations can be specified here.\n                # temperature=0.5,\n                # top_p=1,\n                # stream=true,\n            },\n        },\n        \"embedder\": {\n            \"provider\": \"google\", # or openai, ollama, ...\n            \"config\": {\n                \"model\": \"models/embedding-001\",\n                \"task_type\": \"retrieval_document\",\n                # Further customization options can be added here.\n            },\n        },\n    }\n)\n</code></pre>"},{"location":"tools/MDXSearchTool/","title":"MDXSearchTool","text":"<p>Experimental</p> <p>The MDXSearchTool is in continuous development. Features may be added or removed, and functionality could change unpredictably as we refine the tool.</p>"},{"location":"tools/MDXSearchTool/#description","title":"Description","text":"<p>The MDX Search Tool is a component of the <code>crewai_tools</code> package aimed at facilitating advanced markdown language extraction. It enables users to effectively search and extract relevant information from MD files using query-based searches. This tool is invaluable for data analysis, information management, and research tasks, streamlining the process of finding specific information within large document collections.</p>"},{"location":"tools/MDXSearchTool/#installation","title":"Installation","text":"<p>Before using the MDX Search Tool, ensure the <code>crewai_tools</code> package is installed. If it is not, you can install it with the following command:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"tools/MDXSearchTool/#usage-example","title":"Usage Example","text":"<p>To use the MDX Search Tool, you must first set up the necessary environment variables. Then, integrate the tool into your crewAI project to begin your market research. Below is a basic example of how to do this:</p> <pre><code>from crewai_tools import MDXSearchTool\n\n# Initialize the tool to search any MDX content it learns about during execution\ntool = MDXSearchTool()\n\n# OR\n\n# Initialize the tool with a specific MDX file path for an exclusive search within that document\ntool = MDXSearchTool(mdx='path/to/your/document.mdx')\n</code></pre>"},{"location":"tools/MDXSearchTool/#parameters","title":"Parameters","text":"<ul> <li>mdx: Optional. Specifies the MDX file path for the search. It can be provided during initialization.</li> </ul>"},{"location":"tools/MDXSearchTool/#customization-of-model-and-embeddings","title":"Customization of Model and Embeddings","text":"<p>The tool defaults to using OpenAI for embeddings and summarization. For customization, utilize a configuration dictionary as shown below:</p> <pre><code>tool = MDXSearchTool(\n    config=dict(\n        llm=dict(\n            provider=\"ollama\", # Options include google, openai, anthropic, llama2, etc.\n            config=dict(\n                model=\"llama2\",\n                # Optional parameters can be included here.\n                # temperature=0.5,\n                # top_p=1,\n                # stream=true,\n            ),\n        ),\n        embedder=dict(\n            provider=\"google\", # or openai, ollama, ...\n            config=dict(\n                model=\"models/embedding-001\",\n                task_type=\"retrieval_document\",\n                # Optional title for the embeddings can be added here.\n                # title=\"Embeddings\",\n            ),\n        ),\n    )\n)\n</code></pre>"},{"location":"tools/PDFSearchTool/","title":"PDFSearchTool","text":"<p>Experimental</p> <p>We are still working on improving tools, so there might be unexpected behavior or changes in the future.</p>"},{"location":"tools/PDFSearchTool/#description","title":"Description","text":"<p>The PDFSearchTool is a RAG tool designed for semantic searches within PDF content. It allows for inputting a search query and a PDF document, leveraging advanced search techniques to find relevant content efficiently. This capability makes it especially useful for extracting specific information from large PDF files quickly.</p>"},{"location":"tools/PDFSearchTool/#installation","title":"Installation","text":"<p>To get started with the PDFSearchTool, first, ensure the crewai_tools package is installed with the following command:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"tools/PDFSearchTool/#example","title":"Example","text":"<p>Here's how to use the PDFSearchTool to search within a PDF document:</p> <pre><code>from crewai_tools import PDFSearchTool\n\n# Initialize the tool allowing for any PDF content search if the path is provided during execution\ntool = PDFSearchTool()\n\n# OR\n\n# Initialize the tool with a specific PDF path for exclusive search within that document\ntool = PDFSearchTool(pdf='path/to/your/document.pdf')\n</code></pre>"},{"location":"tools/PDFSearchTool/#arguments","title":"Arguments","text":"<ul> <li><code>pdf</code>: Optional The PDF path for the search. Can be provided at initialization or within the <code>run</code> method's arguments. If provided at initialization, the tool confines its search to the specified document.</li> </ul>"},{"location":"tools/PDFSearchTool/#custom-model-and-embeddings","title":"Custom model and embeddings","text":"<p>By default, the tool uses OpenAI for both embeddings and summarization. To customize the model, you can use a config dictionary as follows:</p> <pre><code>tool = PDFSearchTool(\n    config=dict(\n        llm=dict(\n            provider=\"ollama\", # or google, openai, anthropic, llama2, ...\n            config=dict(\n                model=\"llama2\",\n                # temperature=0.5,\n                # top_p=1,\n                # stream=true,\n            ),\n        ),\n        embedder=dict(\n            provider=\"google\", # or openai, ollama, ...\n            config=dict(\n                model=\"models/embedding-001\",\n                task_type=\"retrieval_document\",\n                # title=\"Embeddings\",\n            ),\n        ),\n    )\n)\n</code></pre>"},{"location":"tools/PGSearchTool/","title":"PGSearchTool","text":"<p>Under Development</p> <p>The PGSearchTool is currently under development. This document outlines the intended functionality and interface. As development progresses, please be aware that some features may not be available or could change.</p>"},{"location":"tools/PGSearchTool/#description","title":"Description","text":"<p>The PGSearchTool is envisioned as a powerful tool for facilitating semantic searches within PostgreSQL database tables. By leveraging advanced Retrieve and Generate (RAG) technology, it aims to provide an efficient means for querying database table content, specifically tailored for PostgreSQL databases. The tool's goal is to simplify the process of finding relevant data through semantic search queries, offering a valuable resource for users needing to conduct advanced queries on extensive datasets within a PostgreSQL environment.</p>"},{"location":"tools/PGSearchTool/#installation","title":"Installation","text":"<p>The <code>crewai_tools</code> package, which will include the PGSearchTool upon its release, can be installed using the following command:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre> <p>(Note: The PGSearchTool is not yet available in the current version of the <code>crewai_tools</code> package. This installation command will be updated once the tool is released.)</p>"},{"location":"tools/PGSearchTool/#example-usage","title":"Example Usage","text":"<p>Below is a proposed example showcasing how to use the PGSearchTool for conducting a semantic search on a table within a PostgreSQL database:</p> <pre><code>from crewai_tools import PGSearchTool\n\n# Initialize the tool with the database URI and the target table name\ntool = PGSearchTool(db_uri='postgresql://user:password@localhost:5432/mydatabase', table_name='employees')\n</code></pre>"},{"location":"tools/PGSearchTool/#arguments","title":"Arguments","text":"<p>The PGSearchTool is designed to require the following arguments for its operation:</p> <ul> <li><code>db_uri</code>: A string representing the URI of the PostgreSQL database to be queried. This argument will be mandatory and must include the necessary authentication details and the location of the database.</li> <li><code>table_name</code>: A string specifying the name of the table within the database on which the semantic search will be performed. This argument will also be mandatory.</li> </ul>"},{"location":"tools/PGSearchTool/#custom-model-and-embeddings","title":"Custom Model and Embeddings","text":"<p>The tool intends to use OpenAI for both embeddings and summarization by default. Users will have the option to customize the model using a config dictionary as follows:</p> <pre><code>tool = PGSearchTool(\n    config=dict(\n        llm=dict(\n            provider=\"ollama\", # or google, openai, anthropic, llama2, ...\n            config=dict(\n                model=\"llama2\",\n                # temperature=0.5,\n                # top_p=1,\n                # stream=true,\n            ),\n        ),\n        embedder=dict(\n            provider=\"google\", # or openai, ollama, ...\n            config=dict(\n                model=\"models/embedding-001\",\n                task_type=\"retrieval_document\",\n                # title=\"Embeddings\",\n            ),\n        ),\n    )\n)\n</code></pre>"},{"location":"tools/ScrapeWebsiteTool/","title":"ScrapeWebsiteTool","text":"<p>Experimental</p> <p>We are still working on improving tools, so there might be unexpected behavior or changes in the future.</p>"},{"location":"tools/ScrapeWebsiteTool/#description","title":"Description","text":"<p>A tool designed to extract and read the content of a specified website. It is capable of handling various types of web pages by making HTTP requests and parsing the received HTML content. This tool can be particularly useful for web scraping tasks, data collection, or extracting specific information from websites.</p>"},{"location":"tools/ScrapeWebsiteTool/#installation","title":"Installation","text":"<p>Install the crewai_tools package <pre><code>pip install 'crewai[tools]'\n</code></pre></p>"},{"location":"tools/ScrapeWebsiteTool/#example","title":"Example","text":"<pre><code>from crewai_tools import ScrapeWebsiteTool\n\n# To enable scrapping any website it finds during it's execution\ntool = ScrapeWebsiteTool()\n\n# Initialize the tool with the website URL, so the agent can only scrap the content of the specified website\ntool = ScrapeWebsiteTool(website_url='https://www.example.com')\n\n# Extract the text from the site\ntext = tool.run()\nprint(text)\n</code></pre>"},{"location":"tools/ScrapeWebsiteTool/#arguments","title":"Arguments","text":"<ul> <li><code>website_url</code> : Mandatory website URL to read the file. This is the primary input for the tool, specifying which website's content should be scraped and read.</li> </ul>"},{"location":"tools/SeleniumScrapingTool/","title":"SeleniumScrapingTool","text":"<p>Experimental</p> <p>This tool is currently in development. As we refine its capabilities, users may encounter unexpected behavior. Your feedback is invaluable to us for making improvements.</p>"},{"location":"tools/SeleniumScrapingTool/#description","title":"Description","text":"<p>The SeleniumScrapingTool is crafted for high-efficiency web scraping tasks. It allows for precise extraction of content from web pages by using CSS selectors to target specific elements. Its design caters to a wide range of scraping needs, offering flexibility to work with any provided website URL.</p>"},{"location":"tools/SeleniumScrapingTool/#installation","title":"Installation","text":"<p>To get started with the SeleniumScrapingTool, install the crewai_tools package using pip:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"tools/SeleniumScrapingTool/#usage-examples","title":"Usage Examples","text":"<p>Below are some scenarios where the SeleniumScrapingTool can be utilized:</p> <pre><code>from crewai_tools import SeleniumScrapingTool\n\n# Example 1: Initialize the tool without any parameters to scrape the current page it navigates to\ntool = SeleniumScrapingTool()\n\n# Example 2: Scrape the entire webpage of a given URL\ntool = SeleniumScrapingTool(website_url='https://example.com')\n\n# Example 3: Target and scrape a specific CSS element from a webpage\ntool = SeleniumScrapingTool(website_url='https://example.com', css_element='.main-content')\n\n# Example 4: Perform scraping with additional parameters for a customized experience\ntool = SeleniumScrapingTool(website_url='https://example.com', css_element='.main-content', cookie={'name': 'user', 'value': 'John Doe'}, wait_time=10)\n</code></pre>"},{"location":"tools/SeleniumScrapingTool/#arguments","title":"Arguments","text":"<p>The following parameters can be used to customize the SeleniumScrapingTool's scraping process:</p> <ul> <li><code>website_url</code>: Mandatory. Specifies the URL of the website from which content is to be scraped.</li> <li><code>css_element</code>: Mandatory. The CSS selector for a specific element to target on the website. This enables focused scraping of a particular part of a webpage.</li> <li><code>cookie</code>: Optional. A dictionary that contains cookie information. Useful for simulating a logged-in session, thereby providing access to content that might be restricted to non-logged-in users.</li> <li><code>wait_time</code>: Optional. Specifies the delay (in seconds) before the content is scraped. This delay allows for the website and any dynamic content to fully load, ensuring a successful scrape.</li> </ul> <p>Attention</p> <p>Since the SeleniumScrapingTool is under active development, the parameters and functionality may evolve over time. Users are encouraged to keep the tool updated and report any issues or suggestions for enhancements.</p>"},{"location":"tools/SerperDevTool/","title":"SerperDevTool Documentation","text":"<p>Experimental</p> <p>We are still working on improving tools, so there might be unexpected behavior or changes in the future.</p>"},{"location":"tools/SerperDevTool/#description","title":"Description","text":"<p>This tool is designed to perform a semantic search for a specified query from a text's content across the internet. It utilizes the serper.dev API to fetch and display the most relevant search results based on the query provided by the user.</p>"},{"location":"tools/SerperDevTool/#installation","title":"Installation","text":"<p>To incorporate this tool into your project, follow the installation instructions below: <pre><code>pip install 'crewai[tools]'\n</code></pre></p>"},{"location":"tools/SerperDevTool/#example","title":"Example","text":"<p>The following example demonstrates how to initialize the tool and execute a search with a given query:</p> <pre><code>from crewai_tools import SerperDevTool\n\n# Initialize the tool for internet searching capabilities\ntool = SerperDevTool()\n</code></pre>"},{"location":"tools/SerperDevTool/#steps-to-get-started","title":"Steps to Get Started","text":"<p>To effectively use the <code>SerperDevTool</code>, follow these steps:</p> <ol> <li>Package Installation: Confirm that the <code>crewai[tools]</code> package is installed in your Python environment.</li> <li>API Key Acquisition: Acquire a <code>serper.dev</code> API key by registering for a free account at <code>serper.dev</code>.</li> <li>Environment Configuration: Store your obtained API key in an environment variable named <code>SERPER_API_KEY</code> to facilitate its use by the tool.</li> </ol>"},{"location":"tools/SerperDevTool/#conclusion","title":"Conclusion","text":"<p>By integrating the <code>SerperDevTool</code> into Python projects, users gain the ability to conduct real-time, relevant searches across the internet directly from their applications. By adhering to the setup and usage guidelines provided, incorporating this tool into projects is streamlined and straightforward.</p>"},{"location":"tools/TXTSearchTool/","title":"TXTSearchTool","text":"<p>Experimental</p> <p>We are still working on improving tools, so there might be unexpected behavior or changes in the future.</p>"},{"location":"tools/TXTSearchTool/#description","title":"Description","text":"<p>This tool is used to perform a RAG (Retrieval-Augmented Generation) search within the content of a text file. It allows for semantic searching of a query within a specified text file's content, making it an invaluable resource for quickly extracting information or finding specific sections of text based on the query provided.</p>"},{"location":"tools/TXTSearchTool/#installation","title":"Installation","text":"<p>To use the TXTSearchTool, you first need to install the crewai_tools package. This can be done using pip, a package manager for Python. Open your terminal or command prompt and enter the following command:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre> <p>This command will download and install the TXTSearchTool along with any necessary dependencies.</p>"},{"location":"tools/TXTSearchTool/#example","title":"Example","text":"<p>The following example demonstrates how to use the TXTSearchTool to search within a text file. This example shows both the initialization of the tool with a specific text file and the subsequent search within that file's content.</p> <pre><code>from crewai_tools import TXTSearchTool\n\n# Initialize the tool to search within any text file's content the agent learns about during its execution\ntool = TXTSearchTool()\n\n# OR\n\n# Initialize the tool with a specific text file, so the agent can search within the given text file's content\ntool = TXTSearchTool(txt='path/to/text/file.txt')\n</code></pre>"},{"location":"tools/TXTSearchTool/#arguments","title":"Arguments","text":"<ul> <li><code>txt</code> (str): Optional. The path to the text file you want to search. This argument is only required if the tool was not initialized with a specific text file; otherwise, the search will be conducted within the initially provided text file.</li> </ul>"},{"location":"tools/TXTSearchTool/#custom-model-and-embeddings","title":"Custom model and embeddings","text":"<p>By default, the tool uses OpenAI for both embeddings and summarization. To customize the model, you can use a config dictionary as follows:</p> <pre><code>tool = TXTSearchTool(\n    config=dict(\n        llm=dict(\n            provider=\"ollama\", # or google, openai, anthropic, llama2, ...\n            config=dict(\n                model=\"llama2\",\n                # temperature=0.5,\n                # top_p=1,\n                # stream=true,\n            ),\n        ),\n        embedder=dict(\n            provider=\"google\", # or openai, ollama, ...\n            config=dict(\n                model=\"models/embedding-001\",\n                task_type=\"retrieval_document\",\n                # title=\"Embeddings\",\n            ),\n        ),\n    )\n)\n</code></pre>"},{"location":"tools/WebsiteSearchTool/","title":"WebsiteSearchTool","text":"<p>Experimental Status</p> <p>The WebsiteSearchTool is currently in an experimental phase. We are actively working on incorporating this tool into our suite of offerings and will update the documentation accordingly.</p>"},{"location":"tools/WebsiteSearchTool/#description","title":"Description","text":"<p>The WebsiteSearchTool is designed as a concept for conducting semantic searches within the content of websites. It aims to leverage advanced machine learning models like Retrieval-Augmented Generation (RAG) to navigate and extract information from specified URLs efficiently. This tool intends to offer flexibility, allowing users to perform searches across any website or focus on specific websites of interest. Please note, the current implementation details of the WebsiteSearchTool are under development, and its functionalities as described may not yet be accessible.</p>"},{"location":"tools/WebsiteSearchTool/#installation","title":"Installation","text":"<p>To prepare your environment for when the WebsiteSearchTool becomes available, you can install the foundational package with:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre> <p>This command installs the necessary dependencies to ensure that once the tool is fully integrated, users can start using it immediately.</p>"},{"location":"tools/WebsiteSearchTool/#example-usage","title":"Example Usage","text":"<p>Below are examples of how the WebsiteSearchTool could be utilized in different scenarios. Please note, these examples are illustrative and represent planned functionality:</p> <pre><code>from crewai_tools import WebsiteSearchTool\n\n# Example of initiating tool that agents can use to search across any discovered websites\ntool = WebsiteSearchTool()\n\n# Example of limiting the search to the content of a specific website, so now agents can only search within that website\ntool = WebsiteSearchTool(website='https://example.com')\n</code></pre>"},{"location":"tools/WebsiteSearchTool/#arguments","title":"Arguments","text":"<ul> <li><code>website</code>: An optional argument intended to specify the website URL for focused searches. This argument is designed to enhance the tool's flexibility by allowing targeted searches when necessary.</li> </ul>"},{"location":"tools/WebsiteSearchTool/#customization-options","title":"Customization Options","text":"<p>By default, the tool uses OpenAI for both embeddings and summarization. To customize the model, you can use a config dictionary as follows:</p> <pre><code>tool = WebsiteSearchTool(\n    config=dict(\n        llm=dict(\n            provider=\"ollama\", # or google, openai, anthropic, llama2, ...\n            config=dict(\n                model=\"llama2\",\n                # temperature=0.5,\n                # top_p=1,\n                # stream=true,\n            ),\n        ),\n        embedder=dict(\n            provider=\"google\", # or openai, ollama, ...\n            config=dict(\n                model=\"models/embedding-001\",\n                task_type=\"retrieval_document\",\n                # title=\"Embeddings\",\n            ),\n        ),\n    )\n)\n</code></pre>"},{"location":"tools/XMLSearchTool/","title":"XMLSearchTool","text":"<p>Experimental</p> <p>We are still working on improving tools, so there might be unexpected behavior or changes in the future.</p>"},{"location":"tools/XMLSearchTool/#description","title":"Description","text":"<p>The XMLSearchTool is a cutting-edge RAG tool engineered for conducting semantic searches within XML files. Ideal for users needing to parse and extract information from XML content efficiently, this tool supports inputting a search query and an optional XML file path. By specifying an XML path, users can target their search more precisely to the content of that file, thereby obtaining more relevant search outcomes.</p>"},{"location":"tools/XMLSearchTool/#installation","title":"Installation","text":"<p>To start using the XMLSearchTool, you must first install the crewai_tools package. This can be easily done with the following command:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"tools/XMLSearchTool/#example","title":"Example","text":"<p>Here are two examples demonstrating how to use the XMLSearchTool. The first example shows searching within a specific XML file, while the second example illustrates initiating a search without predefining an XML path, providing flexibility in search scope.</p> <pre><code>from crewai_tools import XMLSearchTool\n\n# Allow agents to search within any XML file's content as it learns about their paths during execution\ntool = XMLSearchTool()\n\n# OR\n\n# Initialize the tool with a specific XML file path for exclusive search within that document\ntool = XMLSearchTool(xml='path/to/your/xmlfile.xml')\n</code></pre>"},{"location":"tools/XMLSearchTool/#arguments","title":"Arguments","text":"<ul> <li><code>xml</code>: This is the path to the XML file you wish to search. It is an optional parameter during the tool's initialization but must be provided either at initialization or as part of the <code>run</code> method's arguments to execute a search.</li> </ul>"},{"location":"tools/XMLSearchTool/#custom-model-and-embeddings","title":"Custom model and embeddings","text":"<p>By default, the tool uses OpenAI for both embeddings and summarization. To customize the model, you can use a config dictionary as follows:</p> <pre><code>tool = XMLSearchTool(\n    config=dict(\n        llm=dict(\n            provider=\"ollama\", # or google, openai, anthropic, llama2, ...\n            config=dict(\n                model=\"llama2\",\n                # temperature=0.5,\n                # top_p=1,\n                # stream=true,\n            ),\n        ),\n        embedder=dict(\n            provider=\"google\", # or openai, ollama, ...\n            config=dict(\n                model=\"models/embedding-001\",\n                task_type=\"retrieval_document\",\n                # title=\"Embeddings\",\n            ),\n        ),\n    )\n)\n</code></pre>"},{"location":"tools/YoutubeChannelSearchTool/","title":"YoutubeChannelSearchTool","text":"<p>Experimental</p> <p>We are still working on improving tools, so there might be unexpected behavior or changes in the future.</p>"},{"location":"tools/YoutubeChannelSearchTool/#description","title":"Description","text":"<p>This tool is designed to perform semantic searches within a specific Youtube channel's content. Leveraging the RAG (Retrieval-Augmented Generation) methodology, it provides relevant search results, making it invaluable for extracting information or finding specific content without the need to manually sift through videos. It streamlines the search process within Youtube channels, catering to researchers, content creators, and viewers seeking specific information or topics.</p>"},{"location":"tools/YoutubeChannelSearchTool/#installation","title":"Installation","text":"<p>To utilize the YoutubeChannelSearchTool, the <code>crewai_tools</code> package must be installed. Execute the following command in your shell to install:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"tools/YoutubeChannelSearchTool/#example","title":"Example","text":"<p>To begin using the YoutubeChannelSearchTool, follow the example below. This demonstrates initializing the tool with a specific Youtube channel handle and conducting a search within that channel's content.</p> <pre><code>from crewai_tools import YoutubeChannelSearchTool\n\n# Initialize the tool to search within any Youtube channel's content the agent learns about during its execution\ntool = YoutubeChannelSearchTool()\n\n# OR\n\n# Initialize the tool with a specific Youtube channel handle to target your search\ntool = YoutubeChannelSearchTool(youtube_channel_handle='@exampleChannel')\n</code></pre>"},{"location":"tools/YoutubeChannelSearchTool/#arguments","title":"Arguments","text":"<ul> <li><code>youtube_channel_handle</code> : A mandatory string representing the Youtube channel handle. This parameter is crucial for initializing the tool to specify the channel you want to search within. The tool is designed to only search within the content of the provided channel handle.</li> </ul>"},{"location":"tools/YoutubeChannelSearchTool/#custom-model-and-embeddings","title":"Custom model and embeddings","text":"<p>By default, the tool uses OpenAI for both embeddings and summarization. To customize the model, you can use a config dictionary as follows:</p> <pre><code>tool = YoutubeChannelSearchTool(\n    config=dict(\n        llm=dict(\n            provider=\"ollama\", # or google, openai, anthropic, llama2, ...\n            config=dict(\n                model=\"llama2\",\n                # temperature=0.5,\n                # top_p=1,\n                # stream=true,\n            ),\n        ),\n        embedder=dict(\n            provider=\"google\", # or openai, ollama, ...\n            config=dict(\n                model=\"models/embedding-001\",\n                task_type=\"retrieval_document\",\n                # title=\"Embeddings\",\n            ),\n        ),\n    )\n)\n</code></pre>"},{"location":"tools/YoutubeVideoSearchTool/","title":"YoutubeVideoSearchTool","text":"<p>Experimental</p> <p>We are still working on improving tools, so there might be unexpected behavior or changes in the future.</p>"},{"location":"tools/YoutubeVideoSearchTool/#description","title":"Description","text":"<p>This tool is part of the <code>crewai_tools</code> package and is designed to perform semantic searches within Youtube video content, utilizing Retrieval-Augmented Generation (RAG) techniques. It is one of several \"Search\" tools in the package that leverage RAG for different sources. The YoutubeVideoSearchTool allows for flexibility in searches; users can search across any Youtube video content without specifying a video URL, or they can target their search to a specific Youtube video by providing its URL.</p>"},{"location":"tools/YoutubeVideoSearchTool/#installation","title":"Installation","text":"<p>To utilize the YoutubeVideoSearchTool, you must first install the <code>crewai_tools</code> package. This package contains the YoutubeVideoSearchTool among other utilities designed to enhance your data analysis and processing tasks. Install the package by executing the following command in your terminal:</p> <pre><code>pip install 'crewai[tools]'\n</code></pre>"},{"location":"tools/YoutubeVideoSearchTool/#example","title":"Example","text":"<p>To integrate the YoutubeVideoSearchTool into your Python projects, follow the example below. This demonstrates how to use the tool both for general Youtube content searches and for targeted searches within a specific video's content.</p> <pre><code>from crewai_tools import YoutubeVideoSearchTool\n\n# General search across Youtube content without specifying a video URL, so the agent can search within any Youtube video content it learns about irs url during its operation\ntool = YoutubeVideoSearchTool()\n\n# Targeted search within a specific Youtube video's content\ntool = YoutubeVideoSearchTool(youtube_video_url='https://youtube.com/watch?v=example')\n</code></pre>"},{"location":"tools/YoutubeVideoSearchTool/#arguments","title":"Arguments","text":"<p>The YoutubeVideoSearchTool accepts the following initialization arguments:</p> <ul> <li><code>youtube_video_url</code>: An optional argument at initialization but required if targeting a specific Youtube video. It specifies the Youtube video URL path you want to search within.</li> </ul>"},{"location":"tools/YoutubeVideoSearchTool/#custom-model-and-embeddings","title":"Custom model and embeddings","text":"<p>By default, the tool uses OpenAI for both embeddings and summarization. To customize the model, you can use a config dictionary as follows:</p> <pre><code>tool = YoutubeVideoSearchTool(\n    config=dict(\n        llm=dict(\n            provider=\"ollama\", # or google, openai, anthropic, llama2, ...\n            config=dict(\n                model=\"llama2\",\n                # temperature=0.5,\n                # top_p=1,\n                # stream=true,\n            ),\n        ),\n        embedder=dict(\n            provider=\"google\", # or openai, ollama, ...\n            config=dict(\n                model=\"models/embedding-001\",\n                task_type=\"retrieval_document\",\n                # title=\"Embeddings\",\n            ),\n        ),\n    )\n)\n</code></pre>"}]}